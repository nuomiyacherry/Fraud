{"remainingRequest":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js!D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\工作项目\\部反诈\\src\\utils\\map3d\\components\\visual-map\\continuous.js","dependencies":[{"path":"D:\\工作项目\\部反诈\\src\\utils\\map3d\\components\\visual-map\\continuous.js","mtime":1598758375206},{"path":"D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Array$isArray from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/array/is-array\";\nimport _objectSpread from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/inherits\";\nimport merge from 'lodash/merge';\nimport { scaleLinear } from 'd3-scale';\nimport Mixin from '../../core/mixin';\nimport { on, off } from '../../libs/dom';\nimport { getTranslate } from '../../core/layout';\nimport { toFixed } from '../../tool/util';\nimport { drawText, getTextWidth, getPixelColor } from '../../tool/canvas';\nimport { drawTrangle, drawRect } from '../../core/shape';\nimport { continuousOptions } from './options';\n\nvar ContinuousVisualMap =\n/*#__PURE__*/\nfunction (_Mixin) {\n  _inherits(ContinuousVisualMap, _Mixin);\n\n  function ContinuousVisualMap(el, options) {\n    var _this;\n\n    _classCallCheck(this, ContinuousVisualMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContinuousVisualMap).call(this, el, options));\n    _this.layout = {};\n    _this.options = merge({}, continuousOptions, options);\n    _this.options.show && _this.init();\n    return _this;\n  }\n\n  _createClass(ContinuousVisualMap, [{\n    key: \"init\",\n    value: function init() {\n      !this.options.context && this.setSize();\n      !this.options.context && this.initCanvas();\n      this.setScale();\n      this.setLayout();\n      this.render();\n      this.initRange();\n\n      if (this.options.calculable) {\n        on(this.el, 'mousedown', this.mousedown.bind(this));\n        on(this.el, 'mouseup', this.mouseup.bind(this));\n      }\n\n      on(this.el, 'mousemove', this.mousemove.bind(this));\n      !this.options.context && on(window, 'resize', this.resize.bind(this));\n    }\n  }, {\n    key: \"setScale\",\n    value: function setScale() {\n      var _this$options = this.options,\n          min = _this$options.min,\n          max = _this$options.max,\n          itemHeight = _this$options.itemHeight;\n      this.colorScale = scaleLinear().domain([0, itemHeight]).range([min, max]);\n      this.valueScale = scaleLinear().domain([min, max]).range([0, itemHeight]);\n    }\n  }, {\n    key: \"mouseDetect\",\n    value: function mouseDetect(options) {\n      this.response.push(options);\n      this.el.style.cursor = options.cursor;\n    }\n  }, {\n    key: \"mousedown\",\n    value: function mousedown(event) {\n      var _this$el$getBoundingC = this.el.getBoundingClientRect(),\n          left = _this$el$getBoundingC.left,\n          top = _this$el$getBoundingC.top;\n\n      this.downMouse = {\n        x: event.clientX - left,\n        y: event.clientY - top,\n        event: event // 在mousedown之前已经出发mousemove事件，所以这个时候this.response可能会有值\n\n      };\n\n      if (this.response.length) {\n        this.emit('mousedown');\n      }\n    }\n  }, {\n    key: \"mousemove\",\n    value: function mousemove(event) {\n      this.repaint(event);\n\n      if (this.downMouse && (this.response.length || this.downMouse.object)) {\n        if (this.response.length && this.response[0].type === 'colorBar') return;\n        this.controlMove();\n        this.options.realtime && this.change();\n        return;\n      }\n\n      this.response.length && this.emit('mouseover', _objectSpread({}, this.valueRange, this.response[0]));\n    }\n  }, {\n    key: \"change\",\n    value: function change() {\n      this.layout.range = {\n        min: this.layout.minText.text,\n        max: this.layout.maxText.text\n      };\n      this.emit('change', this.layout.range, this.layout);\n    }\n  }, {\n    key: \"mouseup\",\n    value: function mouseup(event) {\n      this.downMouse = null;\n      !this.options.realtime && this.change();\n      this.emit('mouseup');\n    }\n  }, {\n    key: \"controlMove\",\n    value: function controlMove() {\n      !this.downMouse.object && (this.downMouse.object = _objectSpread({}, this.response[0]));\n      var _this$downMouse$objec = this.downMouse.object,\n          type = _this$downMouse$objec.type,\n          offset = _this$downMouse$objec.offset,\n          _this$options2 = this.options,\n          orient = _this$options2.orient,\n          itemHeight = _this$options2.itemHeight,\n          _this$layout = this.layout,\n          highControl = _this$layout.highControl,\n          lowControl = _this$layout.lowControl;\n\n      if (orient === 'vertical') {\n        if (type === 'highControl') {\n          highControl.offset = offset + this.mouse.y - this.downMouse.y;\n          highControl.offset = highControl.offset >= lowControl.offset ? lowControl.offset : highControl.offset;\n          highControl.offset <= 0 && (highControl.offset = 0);\n        } else {\n          lowControl.offset = offset + this.mouse.y - this.downMouse.y;\n          lowControl.offset = lowControl.offset <= highControl.offset ? highControl.offset : lowControl.offset;\n          lowControl.offset >= itemHeight && (lowControl.offset = itemHeight);\n        }\n      } else {\n        if (type === 'highControl') {\n          highControl.offset = offset + this.mouse.x - this.downMouse.x;\n          highControl.offset = highControl.offset <= lowControl.offset ? lowControl.offset : highControl.offset;\n          highControl.offset >= itemHeight && (highControl.offset = itemHeight);\n        } else {\n          lowControl.offset = offset + this.mouse.x - this.downMouse.x;\n          lowControl.offset = lowControl.offset >= highControl.offset ? highControl.offset : lowControl.offset;\n          lowControl.offset <= 0 && (lowControl.offset = 0);\n        }\n      }\n    }\n  }, {\n    key: \"initRange\",\n    value: function initRange() {\n      var _this2 = this;\n\n      var _this$options3 = this.options,\n          range = _this$options3.range,\n          orient = _this$options3.orient,\n          itemHeight = _this$options3.itemHeight;\n      if (!_Array$isArray(range)) return;\n      var valueRange = range.map(function (v) {\n        return _this2.valueScale(v);\n      }),\n          _this$layout2 = this.layout,\n          highControl = _this$layout2.highControl,\n          lowControl = _this$layout2.lowControl;\n\n      if (orient === 'vertical') {\n        highControl.offset = valueRange[1] ? itemHeight - valueRange[1] : 0;\n        lowControl.offset = valueRange[0] ? itemHeight - valueRange[0] : itemHeight;\n      }\n\n      if (orient === 'horizontal') {\n        lowControl.offset = valueRange[0] ? valueRange[0] : 0;\n        highControl.offset = valueRange[1] ? valueRange[1] : itemHeight;\n      }\n\n      setTimeout(function (_) {\n        _this2.render();\n\n        if (!_this2.calculable) {\n          var _this2$options = _this2.options,\n              precision = _this2$options.precision,\n              _orient = _this2$options.orient,\n              _this2$layout = _this2.layout,\n              minText = _this2$layout.minText,\n              maxText = _this2$layout.maxText,\n              _highControl = _this2$layout.highControl,\n              _lowControl = _this2$layout.lowControl;\n          minText.text = toFixed(_this2.colorScale(_orient === 'vertical' ? itemHeight - _lowControl.offset : _lowControl.offset), precision);\n          maxText.text = toFixed(_this2.colorScale(_orient === 'vertical' ? itemHeight - _highControl.offset : _highControl.offset), precision);\n        }\n\n        _this2.change();\n      }, 20);\n    }\n  }, {\n    key: \"setLayout\",\n    value: function setLayout() {\n      var _this$options4 = this.options,\n          itemHeight = _this$options4.itemHeight,\n          itemWidth = _this$options4.itemWidth,\n          textGap = _this$options4.textGap,\n          textStyle = _this$options4.textStyle,\n          min = _this$options4.min,\n          max = _this$options4.max,\n          controller = _this$options4.controller,\n          orient = _this$options4.orient,\n          color = _this$options4.color,\n          right = _this$options4.right,\n          top = _this$options4.top,\n          textControlGap = _this$options4.textControlGap,\n          text = this.options.text || ['', ''],\n          highText = {\n        x: 0,\n        y: 0,\n        text: text[0],\n        width: getTextWidth(this.ctx, text[0], textStyle)\n      },\n          lowText = {\n        x: 0,\n        y: 0,\n        text: text[1],\n        width: getTextWidth(this.ctx, text[1], textStyle)\n      },\n          textWidth = Math.max(highText.width, lowText.width),\n          colorBar = {\n        x: 0,\n        y: 0,\n        type: 'colorBar',\n        cursor: 'n-resize'\n      },\n          highControl = {\n        offset: 0,\n        color: color[0],\n        x: 0,\n        y: 0,\n        cursor: 'n-resize',\n        type: 'highControl'\n      },\n          lowControl = {\n        offset: itemHeight,\n        color: color.slice(-1)[0],\n        x: 0,\n        y: 0,\n        cursor: 'n-resize',\n        type: 'lowControl'\n      },\n          minText = {\n        text: min,\n        x: 0,\n        y: 0,\n        width: getTextWidth(this.ctx, min, textStyle),\n        textBaseline: 'top',\n        textAlign: 'left',\n        cursor: 'n-resize'\n      },\n          maxText = {\n        text: max,\n        x: 0,\n        y: 0,\n        width: getTextWidth(this.ctx, max, textStyle),\n        textBaseline: 'bottom',\n        textAlign: 'left',\n        cursor: 'n-resize'\n      };\n      var width, height;\n\n      if (orient === 'vertical') {\n        var mainWidth = itemWidth + textGap + Math.max(minText.width, maxText.width) + controller.width,\n            tx = (textWidth - itemWidth) / 2;\n        width = Math.max(mainWidth + tx, textWidth);\n        height = itemHeight + controller.height * 2 + (text ? textControlGap + textStyle.fontSize * 2 : 0);\n        colorBar.x = textWidth > itemWidth ? tx : 0;\n        colorBar.y = (highText ? textStyle.fontSize : 0) + controller.height + textControlGap;\n        highText.x = lowText.x = Math.max(highText.width / 2, lowText.width / 2);\n        lowText.y = colorBar.y + itemHeight + controller.height + textControlGap;\n\n        if (right !== 'auto') {\n          highControl.x = colorBar.x - controller.width;\n          highControl.y = colorBar.y;\n          lowControl.x = highControl.x;\n          lowControl.y = itemHeight + highControl.y;\n          minText.textAlign = maxText.textAlign = 'right';\n          maxText.x = highControl.x - textGap;\n          maxText.y = highControl.y;\n          minText.x = maxText.x;\n          minText.y = lowControl.y;\n        } else {\n          highControl.x = colorBar.x + itemWidth;\n          highControl.y = colorBar.y;\n          lowControl.x = highControl.x;\n          lowControl.y = itemHeight + highControl.y;\n          maxText.x = highControl.x + textGap + controller.width;\n          maxText.y = highControl.y;\n          minText.x = maxText.x;\n          minText.y = lowControl.y;\n        }\n\n        colorBar.cursor = maxText.cursor = minText.cursor = highControl.cursor = lowControl.cursor = 'n-resize';\n      } else {\n        var controlerMinWidth = minText.width + textGap + controller.width,\n            controlerMaxWidth = maxText.width + textGap + controller.width;\n        width = itemHeight + Math.max(controlerMaxWidth, highText.width + textGap) + Math.max(controlerMinWidth, lowText.width + textGap);\n        height = controller.height + itemWidth;\n        colorBar.x = Math.max(lowText.width + textGap, controlerMinWidth);\n        colorBar.y = controller.height;\n        lowText.y = colorBar.y + (itemWidth - textStyle.fontSize) / 2;\n        lowText.x = lowText.width / 2;\n        highText.y = lowText.y;\n        highText.x = colorBar.x + itemHeight + highText.width / 2 + textGap;\n        lowControl.x = colorBar.x - controller.width;\n        highControl.x = colorBar.x + itemHeight;\n        lowControl.offset = 0;\n        highControl.offset = itemHeight;\n        minText.textAlign = 'right';\n        minText.x = lowControl.x - textGap;\n        maxText.x = highControl.x + textGap + controller.width;\n        minText.textBaseline = maxText.textBaseline = 'top';\n\n        if (top !== 'auto') {\n          lowText.y = highText.y = lowText.y - colorBar.y;\n          colorBar.y = 0;\n          lowControl.y = highControl.y = itemWidth;\n          minText.y = maxText.y = itemWidth;\n        }\n\n        colorBar.cursor = maxText.cursor = minText.cursor = highControl.cursor = lowControl.cursor = 'e-resize';\n      }\n\n      var _getTranslate = getTranslate(this.el, this.options, {\n        width: width,\n        height: height,\n        rightWidth: Math.max(highText.width, lowText.width, itemWidth)\n      }),\n          translateX = _getTranslate.translateX,\n          translateY = _getTranslate.translateY;\n\n      this.layout = {\n        width: width,\n        height: height,\n        translateX: translateX,\n        translateY: translateY,\n        colorBar: colorBar,\n        highText: highText,\n        lowText: lowText,\n        highControl: highControl,\n        lowControl: lowControl,\n        minText: minText,\n        maxText: maxText\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.renderInit();\n      this.response = [];\n      var _this$layout3 = this.layout,\n          translateX = _this$layout3.translateX,\n          translateY = _this$layout3.translateY,\n          highText = _this$layout3.highText,\n          lowText = _this$layout3.lowText,\n          highControl = _this$layout3.highControl,\n          lowControl = _this$layout3.lowControl,\n          minText = _this$layout3.minText,\n          maxText = _this$layout3.maxText,\n          _this$options5 = this.options,\n          textStyle = _this$options5.textStyle,\n          orient = _this$options5.orient,\n          calculable = _this$options5.calculable;\n      highText.text && drawText(this.ctx, _objectSpread({\n        x: translateX + highText.x,\n        y: translateY + highText.y,\n        text: highText.text,\n        textBaseline: 'top'\n      }, textStyle));\n      lowText.text && drawText(this.ctx, _objectSpread({\n        x: translateX + lowText.x,\n        y: translateY + lowText.y,\n        text: lowText.text,\n        textBaseline: 'top'\n      }, textStyle));\n      this.drawColorBar();\n\n      if (calculable) {\n        if (orient === 'vertical') {\n          this.drawControl(highControl, maxText, 'up-left');\n          this.drawControl(lowControl, minText, 'down-left');\n        } else {\n          this.drawControl(lowControl, minText, 'down-left');\n          this.drawControl(highControl, maxText, 'up-right');\n        }\n      }\n\n      if (!this.response.length) {\n        this.el.style.cursor = 'default';\n        this.emit('mouseout');\n      }\n    }\n  }, {\n    key: \"renderInit\",\n    value: function renderInit() {\n      this.ctx.clearRect(0, 0, this.size.width, this.size.height); // const {translateX, translateY, width, height} = this.layout\n      // this.ctx.clearRect(translateX, translateY, width, height)\n      // this.drawBg()\n    }\n  }, {\n    key: \"drawBg\",\n    value: function drawBg() {\n      var _this$layout4 = this.layout,\n          translateX = _this$layout4.translateX,\n          translateY = _this$layout4.translateY,\n          width = _this$layout4.width,\n          height = _this$layout4.height,\n          _this$options6 = this.options,\n          background = _this$options6.background,\n          borderColor = _this$options6.borderColor,\n          borderWidth = _this$options6.borderWidth;\n      drawRect(this.ctx, {\n        x: translateX,\n        y: translateY,\n        width: width,\n        height: height,\n        color: background\n      });\n      borderColor && drawRect(this.ctx, {\n        x: translateX,\n        y: translateY,\n        width: width,\n        height: height,\n        color: borderColor,\n        type: 'stroke',\n        lineWidth: borderWidth\n      });\n    }\n  }, {\n    key: \"drawColorBar\",\n    value: function drawColorBar() {\n      var _this3 = this;\n\n      var _this$options7 = this.options,\n          itemWidth = _this$options7.itemWidth,\n          itemHeight = _this$options7.itemHeight,\n          color = _this$options7.color,\n          orient = _this$options7.orient,\n          inactiveColor = _this$options7.inactiveColor,\n          _this$layout5 = this.layout,\n          highControl = _this$layout5.highControl,\n          lowControl = _this$layout5.lowControl,\n          colorBar = _this$layout5.colorBar,\n          translateX = _this$layout5.translateX,\n          translateY = _this$layout5.translateY,\n          gradient = orient === 'vertical' ? this.ctx.createLinearGradient(0, 0, 0, itemHeight) : this.ctx.createLinearGradient(0, 0, itemHeight, 0),\n          length = color.length - 1,\n          _color = orient === 'vertical' ? color : _toConsumableArray(color).reverse();\n\n      _color.forEach(function (color, i) {\n        gradient.addColorStop(i / length, color);\n      });\n\n      var detected = false;\n      orient === 'vertical' ? drawRect(this.ctx, {\n        x: translateX + colorBar.x,\n        y: translateY + colorBar.y,\n        width: itemWidth,\n        height: itemHeight,\n        color: gradient,\n        detect: function detect(_) {\n          _this3.ctx.fillStyle = gradient;\n\n          _this3.ctx.fill();\n\n          if (_this3.isDetect()) {\n            detected = true;\n          }\n        }\n      }) : drawRect(this.ctx, {\n        x: translateX + colorBar.x,\n        y: translateY + colorBar.y,\n        width: itemHeight,\n        height: itemWidth,\n        color: gradient,\n        detect: function detect(_) {\n          _this3.ctx.fillStyle = gradient;\n\n          _this3.ctx.fill();\n\n          if (_this3.isDetect()) {\n            detected = true;\n          }\n        }\n      });\n      orient === 'vertical' ? drawRect(this.ctx, {\n        x: translateX + colorBar.x,\n        y: translateY + colorBar.y,\n        width: itemWidth,\n        height: highControl.offset,\n        color: inactiveColor\n      }) : drawRect(this.ctx, {\n        x: translateX + colorBar.x + highControl.offset,\n        y: translateY + colorBar.y,\n        width: itemHeight - highControl.offset,\n        height: itemWidth,\n        color: inactiveColor\n      });\n      orient === 'vertical' ? drawRect(this.ctx, {\n        x: translateX + colorBar.x,\n        y: translateY + colorBar.y + lowControl.offset,\n        width: itemWidth,\n        height: itemHeight - lowControl.offset,\n        color: inactiveColor\n      }) : drawRect(this.ctx, {\n        x: translateX + colorBar.x,\n        y: translateY + colorBar.y,\n        width: lowControl.offset,\n        height: itemWidth,\n        color: inactiveColor,\n        _type: 'aaa'\n      });\n\n      if (detected) {\n        !this.downMouse && (orient === 'vertical' ? this.drawVerticalColorBarTip() : this.drawHorizontalColorBarTip());\n        this.mouseDetect(colorBar);\n      }\n    }\n  }, {\n    key: \"drawVerticalColorBarTip\",\n    value: function drawVerticalColorBarTip() {\n      var _this$options8 = this.options,\n          textGap = _this$options8.textGap,\n          textStyle = _this$options8.textStyle,\n          itemHeight = _this$options8.itemHeight,\n          right = _this$options8.right,\n          controller = _this$options8.controller,\n          precision = _this$options8.precision,\n          tipWidth = _this$options8.tipWidth,\n          tipHeight = _this$options8.tipHeight,\n          minValue = _this$options8.min,\n          maxValue = _this$options8.max,\n          _this$layout6 = this.layout,\n          colorBar = _this$layout6.colorBar,\n          translateX = _this$layout6.translateX,\n          translateY = _this$layout6.translateY,\n          lowControl = _this$layout6.lowControl,\n          textAlign = right === 'auto' ? 'left' : 'right',\n          x = translateX + lowControl.x + (right === 'auto' ? -1 : controller.width + 1),\n          y = this.mouse.y,\n          min = colorBar.y + translateY,\n          max = colorBar.y + itemHeight + translateY,\n          color = getPixelColor(this.ctx, x, y >= max ? y - 1 : y),\n          value = toFixed(this.colorScale(max - y), precision),\n          text = right === 'auto' ? \"\\u2248 \".concat(value) : \"\".concat(value, \" \\u2248\"),\n          delta = textAlign === 'left' ? 1 : -1,\n          x1 = x,\n          y1 = y - tipHeight <= min ? min : y - tipHeight,\n          x2 = x + tipWidth * delta,\n          y2 = y,\n          x3 = x,\n          y3 = y + tipHeight >= max ? max : y + tipHeight,\n          textx = x2 + textGap * delta,\n          texty = y + 1;\n      this.valueRange = {\n        min: toFixed(this.colorScale(max - y - tipHeight), precision),\n        max: toFixed(this.colorScale(max - y + tipHeight), precision)\n      };\n      this.valueRange.min < minValue && (this.valueRange.min = minValue);\n      this.valueRange.min > maxValue && (this.valueRange.max = maxValue);\n      drawTrangle(this.ctx, {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x3: x3,\n        y3: y3,\n        color: color\n      });\n      drawText(this.ctx, _objectSpread({}, textStyle, {\n        text: text,\n        textAlign: textAlign,\n        textBaseline: 'middle',\n        fontSize: 12,\n        x: textx,\n        y: texty\n      }));\n    }\n  }, {\n    key: \"drawHorizontalColorBarTip\",\n    value: function drawHorizontalColorBarTip() {\n      var _this$options9 = this.options,\n          textGap = _this$options9.textGap,\n          textStyle = _this$options9.textStyle,\n          itemHeight = _this$options9.itemHeight,\n          top = _this$options9.top,\n          controller = _this$options9.controller,\n          precision = _this$options9.precision,\n          tipWidth = _this$options9.tipWidth,\n          tipHeight = _this$options9.tipHeight,\n          minValue = _this$options9.min,\n          maxValue = _this$options9.max,\n          _this$layout7 = this.layout,\n          colorBar = _this$layout7.colorBar,\n          translateX = _this$layout7.translateX,\n          translateY = _this$layout7.translateY,\n          lowControl = _this$layout7.lowControl,\n          x = this.mouse.x,\n          y = translateY + lowControl.y + (top === 'auto' ? controller.height + 1 : -1),\n          textBaseline = top === 'auto' ? 'bottom' : 'top',\n          delta = top === 'auto' ? -1 : 1,\n          min = colorBar.x + translateX,\n          max = colorBar.x + itemHeight + translateX,\n          color = getPixelColor(this.ctx, x >= max ? x - 1 : x, y - 1),\n          value = toFixed(this.colorScale(x - min), precision),\n          text = \"\\u2248 \".concat(value),\n          x1 = x - tipWidth <= min ? min : x - tipWidth,\n          y1 = y,\n          x2 = x,\n          y2 = y + delta * tipHeight,\n          x3 = x + tipHeight >= max ? max : x + tipWidth,\n          y3 = y,\n          textx = x2,\n          texty = y + textGap * delta; // this.valueRange = [toFixed(this.colorScale(x - min - tipWidth), precision), toFixed(this.colorScale(x - min + tipWidth), precision)]\n\n      this.valueRange = {\n        min: toFixed(this.colorScale(x - min - tipWidth), precision),\n        max: toFixed(this.colorScale(x - min + tipWidth), precision)\n      };\n      this.valueRange.min < minValue && (this.valueRange.min = minValue);\n      this.valueRange.max > maxValue && (this.valueRange.max = maxValue);\n      drawTrangle(this.ctx, {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x3: x3,\n        y3: y3,\n        color: color\n      });\n      drawText(this.ctx, _objectSpread({}, textStyle, {\n        text: text,\n        textAlign: 'center',\n        textBaseline: textBaseline,\n        fontSize: 12,\n        x: textx,\n        y: texty\n      }));\n    }\n  }, {\n    key: \"drawControl\",\n    value: function drawControl(control, text, dir) {\n      var _this4 = this;\n\n      var _this$layout8 = this.layout,\n          translateX = _this$layout8.translateX,\n          translateY = _this$layout8.translateY,\n          _this$options10 = this.options,\n          controller = _this$options10.controller,\n          textStyle = _this$options10.textStyle,\n          orient = _this$options10.orient,\n          itemHeight = _this$options10.itemHeight,\n          precision = _this$options10.precision,\n          width = controller.width,\n          height = controller.height,\n          offsetX = orient === 'vertical' ? 0 : control.type === 'highControl' ? control.offset - itemHeight : control.offset,\n          offsetY = orient === 'vertical' ? control.type === 'highControl' ? control.offset : control.offset - itemHeight : 0,\n          x1 = translateX + control.x + offsetX,\n          y1 = translateY + control.y + offsetY,\n          x2 = x1 + (control.width || width),\n          y2 = y1,\n          textx = text.x + translateX + offsetX,\n          texty = y1;\n      text.text = toFixed(this.colorScale(orient === 'vertical' ? itemHeight - control.offset : control.offset), precision);\n      var x3, y3;\n\n      if (dir === 'up-left') {\n        x3 = x2;\n        y3 = y1 - height;\n      } else if (dir === 'up-right') {\n        x3 = x2 - (control.width || width);\n        y3 = y1 + height;\n      } else if (dir === 'down-left') {\n        x3 = x2;\n        y3 = y1 + height;\n      } else if (dir === 'down-right') {\n        x3 = x2 + (control.width || width);\n        y3 = y1 + height;\n      }\n\n      drawTrangle(this.ctx, {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x3: x3,\n        y3: y3,\n        type: 'fill',\n        color: control.color,\n        detect: function detect() {\n          if (_this4.isDetect()) {\n            _this4.mouseDetect(control);\n          }\n\n          _this4.ctx.fillStyle = control.color;\n\n          _this4.ctx.fill();\n        }\n      });\n      drawText(this.ctx, _objectSpread({}, textStyle, text, {\n        x: textx,\n        y: texty\n      }));\n    } // 辅助text鼠标事件\n\n  }, {\n    key: \"drawTextRect\",\n    value: function drawTextRect(x, y, width, height) {\n      this.ctx.save();\n      this.ctx.beginPath();\n      this.ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n      this.ctx.rect(x, y, width, height);\n      this.ctx.closePath();\n      this.ctx.fill();\n      this.ctx.restore();\n    }\n  }, {\n    key: \"getColor\",\n    value: function getColor(value) {\n      var scaleValue = this.valueScale(value),\n          _this$options11 = this.options,\n          orient = _this$options11.orient,\n          itemHeight = _this$options11.itemHeight,\n          _this$layout9 = this.layout,\n          translateX = _this$layout9.translateX,\n          translateY = _this$layout9.translateY,\n          colorBar = _this$layout9.colorBar,\n          x = translateX + colorBar.x + (orient === 'vertical' ? 0 : scaleValue === itemHeight ? scaleValue - 1 : 0),\n          y = translateY + colorBar.y + (orient === 'vertical' ? scaleValue === 0 ? itemHeight - 1 : itemHeight - scaleValue : 0);\n      return getPixelColor(this.ctx, x, y);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      off(this.el, 'mousedown', this.mousedown.bind(this));\n      off(this.el, 'mousemove', this.mousemove.bind(this));\n      off(this.el, 'mouseup', this.mouseup.bind(this));\n      this.off('mouseover');\n      this.off('mouseout');\n      this.off('mousedown');\n      this.off('mouseup');\n      this.off('change');\n      !this.options.context && off(window, 'resize', this.resize.bind(this));\n    }\n  }]);\n\n  return ContinuousVisualMap;\n}(Mixin);\n\nexport { ContinuousVisualMap as default };",{"version":3,"sources":["D:\\工作项目\\部反诈\\src\\utils\\map3d\\components\\visual-map\\continuous.js"],"names":["merge","scaleLinear","Mixin","on","off","getTranslate","toFixed","drawText","getTextWidth","getPixelColor","drawTrangle","drawRect","continuousOptions","ContinuousVisualMap","el","options","layout","show","init","context","setSize","initCanvas","setScale","setLayout","render","initRange","calculable","mousedown","bind","mouseup","mousemove","window","resize","min","max","itemHeight","colorScale","domain","range","valueScale","response","push","style","cursor","event","getBoundingClientRect","left","top","downMouse","x","clientX","y","clientY","length","emit","repaint","object","type","controlMove","realtime","change","valueRange","minText","text","maxText","offset","orient","highControl","lowControl","mouse","map","v","setTimeout","_","precision","itemWidth","textGap","textStyle","controller","color","right","textControlGap","highText","width","ctx","lowText","textWidth","Math","colorBar","slice","textBaseline","textAlign","height","mainWidth","tx","fontSize","controlerMinWidth","controlerMaxWidth","rightWidth","translateX","translateY","renderInit","drawColorBar","drawControl","clearRect","size","background","borderColor","borderWidth","lineWidth","inactiveColor","gradient","createLinearGradient","_color","reverse","forEach","i","addColorStop","detected","detect","fillStyle","fill","isDetect","_type","drawVerticalColorBarTip","drawHorizontalColorBarTip","mouseDetect","tipWidth","tipHeight","minValue","maxValue","value","delta","x1","y1","x2","y2","x3","y3","textx","texty","control","dir","offsetX","offsetY","save","beginPath","rect","closePath","restore","scaleValue"],"mappings":"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","sourcesContent":["import merge from 'lodash/merge'\nimport {scaleLinear} from 'd3-scale'\nimport Mixin from '../../core/mixin'\nimport {on, off} from '../../libs/dom'\nimport {getTranslate} from '../../core/layout'\nimport {toFixed} from '../../tool/util'\nimport {drawText, getTextWidth, getPixelColor} from '../../tool/canvas'\nimport {drawTrangle, drawRect} from '../../core/shape'\nimport {continuousOptions} from './options'\n\nexport default class ContinuousVisualMap extends Mixin {\n  constructor(el, options) {\n    super(el, options)\n    this.layout = {}\n    this.options = merge({}, continuousOptions, options)\n    this.options.show && this.init()\n  }\n\n  init() {\n    !this.options.context && this.setSize()\n    !this.options.context && this.initCanvas()\n    this.setScale()\n    this.setLayout()\n    this.render()\n    this.initRange()\n    if (this.options.calculable) {\n      on(this.el, 'mousedown', this.mousedown.bind(this))\n      on(this.el, 'mouseup', this.mouseup.bind(this))\n    }\n    on(this.el, 'mousemove', this.mousemove.bind(this))\n    !this.options.context && on(window, 'resize', this.resize.bind(this))\n  }\n\n  setScale() {\n    const {min, max, itemHeight} = this.options\n    this.colorScale = scaleLinear()\n      .domain([0, itemHeight])\n      .range([min, max])\n    this.valueScale = scaleLinear()\n      .domain([min, max])\n      .range([0, itemHeight])\n  }\n\n  mouseDetect(options) {\n    this.response.push(options)\n    this.el.style.cursor = options.cursor\n  }\n\n  mousedown(event) {\n    const {left, top} = this.el.getBoundingClientRect()\n    this.downMouse = {\n      x: event.clientX - left,\n      y: event.clientY - top,\n      event\n    }\n    // 在mousedown之前已经出发mousemove事件，所以这个时候this.response可能会有值\n    if (this.response.length) {\n      this.emit('mousedown')\n    }\n  }\n\n  mousemove(event) {\n    this.repaint(event)\n    if (this.downMouse && (this.response.length || this.downMouse.object)) {\n      if (this.response.length && this.response[0].type === 'colorBar') return\n      this.controlMove()\n      this.options.realtime && this.change()\n      return\n    }\n\n    this.response.length &&\n      this.emit('mouseover', {\n        ...this.valueRange,\n        ...this.response[0]\n      })\n  }\n\n  change() {\n    this.layout.range = {\n      min: this.layout.minText.text,\n      max: this.layout.maxText.text\n    }\n    this.emit('change', this.layout.range, this.layout)\n  }\n\n  mouseup(event) {\n    this.downMouse = null\n    !this.options.realtime && this.change()\n    this.emit('mouseup')\n  }\n\n  controlMove() {\n    !this.downMouse.object && (this.downMouse.object = {...this.response[0]})\n    const {type, offset} = this.downMouse.object,\n      {orient, itemHeight} = this.options,\n      {highControl, lowControl} = this.layout\n    if (orient === 'vertical') {\n      if (type === 'highControl') {\n        highControl.offset = offset + this.mouse.y - this.downMouse.y\n        highControl.offset =\n          highControl.offset >= lowControl.offset\n            ? lowControl.offset\n            : highControl.offset\n        highControl.offset <= 0 && (highControl.offset = 0)\n      } else {\n        lowControl.offset = offset + this.mouse.y - this.downMouse.y\n        lowControl.offset =\n          lowControl.offset <= highControl.offset\n            ? highControl.offset\n            : lowControl.offset\n        lowControl.offset >= itemHeight && (lowControl.offset = itemHeight)\n      }\n    } else {\n      if (type === 'highControl') {\n        highControl.offset = offset + this.mouse.x - this.downMouse.x\n        highControl.offset =\n          highControl.offset <= lowControl.offset\n            ? lowControl.offset\n            : highControl.offset\n        highControl.offset >= itemHeight && (highControl.offset = itemHeight)\n      } else {\n        lowControl.offset = offset + this.mouse.x - this.downMouse.x\n        lowControl.offset =\n          lowControl.offset >= highControl.offset\n            ? highControl.offset\n            : lowControl.offset\n        lowControl.offset <= 0 && (lowControl.offset = 0)\n      }\n    }\n  }\n\n  initRange() {\n    const {range, orient, itemHeight} = this.options\n    if (!Array.isArray(range)) return\n    const valueRange = range.map(v => this.valueScale(v)),\n      {highControl, lowControl} = this.layout\n    if (orient === 'vertical') {\n      highControl.offset = valueRange[1] ? itemHeight - valueRange[1] : 0\n      lowControl.offset = valueRange[0]\n        ? itemHeight - valueRange[0]\n        : itemHeight\n    }\n    if (orient === 'horizontal') {\n      lowControl.offset = valueRange[0] ? valueRange[0] : 0\n      highControl.offset = valueRange[1] ? valueRange[1] : itemHeight\n    }\n    setTimeout(_ => {\n      this.render()\n      if (!this.calculable) {\n        const {precision, orient} = this.options,\n          {minText, maxText, highControl, lowControl} = this.layout\n        minText.text = toFixed(\n          this.colorScale(\n            orient === 'vertical'\n              ? itemHeight - lowControl.offset\n              : lowControl.offset\n          ),\n          precision\n        )\n        maxText.text = toFixed(\n          this.colorScale(\n            orient === 'vertical'\n              ? itemHeight - highControl.offset\n              : highControl.offset\n          ),\n          precision\n        )\n      }\n      this.change()\n    }, 20)\n  }\n\n  setLayout() {\n    const {\n        itemHeight,\n        itemWidth,\n        textGap,\n        textStyle,\n        min,\n        max,\n        controller,\n        orient,\n        color,\n        right,\n        top,\n        textControlGap\n      } = this.options,\n      text = this.options.text || ['', ''],\n      highText = {\n        x: 0,\n        y: 0,\n        text: text[0],\n        width: getTextWidth(this.ctx, text[0], textStyle)\n      },\n      lowText = {\n        x: 0,\n        y: 0,\n        text: text[1],\n        width: getTextWidth(this.ctx, text[1], textStyle)\n      },\n      textWidth = Math.max(highText.width, lowText.width),\n      colorBar = {\n        x: 0,\n        y: 0,\n        type: 'colorBar',\n        cursor: 'n-resize'\n      },\n      highControl = {\n        offset: 0,\n        color: color[0],\n        x: 0,\n        y: 0,\n        cursor: 'n-resize',\n        type: 'highControl'\n      },\n      lowControl = {\n        offset: itemHeight,\n        color: color.slice(-1)[0],\n        x: 0,\n        y: 0,\n        cursor: 'n-resize',\n        type: 'lowControl'\n      },\n      minText = {\n        text: min,\n        x: 0,\n        y: 0,\n        width: getTextWidth(this.ctx, min, textStyle),\n        textBaseline: 'top',\n        textAlign: 'left',\n        cursor: 'n-resize'\n      },\n      maxText = {\n        text: max,\n        x: 0,\n        y: 0,\n        width: getTextWidth(this.ctx, max, textStyle),\n        textBaseline: 'bottom',\n        textAlign: 'left',\n        cursor: 'n-resize'\n      }\n\n    let width, height\n    if (orient === 'vertical') {\n      const mainWidth =\n          itemWidth +\n          textGap +\n          Math.max(minText.width, maxText.width) +\n          controller.width,\n        tx = (textWidth - itemWidth) / 2\n\n      width = Math.max(mainWidth + tx, textWidth)\n      height =\n        itemHeight +\n        controller.height * 2 +\n        (text ? textControlGap + textStyle.fontSize * 2 : 0)\n      colorBar.x = textWidth > itemWidth ? tx : 0\n      colorBar.y =\n        (highText ? textStyle.fontSize : 0) + controller.height + textControlGap\n      highText.x = lowText.x = Math.max(highText.width / 2, lowText.width / 2)\n      lowText.y = colorBar.y + itemHeight + controller.height + textControlGap\n      if (right !== 'auto') {\n        highControl.x = colorBar.x - controller.width\n        highControl.y = colorBar.y\n        lowControl.x = highControl.x\n        lowControl.y = itemHeight + highControl.y\n        minText.textAlign = maxText.textAlign = 'right'\n        maxText.x = highControl.x - textGap\n        maxText.y = highControl.y\n        minText.x = maxText.x\n        minText.y = lowControl.y\n      } else {\n        highControl.x = colorBar.x + itemWidth\n        highControl.y = colorBar.y\n        lowControl.x = highControl.x\n        lowControl.y = itemHeight + highControl.y\n        maxText.x = highControl.x + textGap + controller.width\n        maxText.y = highControl.y\n        minText.x = maxText.x\n        minText.y = lowControl.y\n      }\n      colorBar.cursor = maxText.cursor = minText.cursor = highControl.cursor = lowControl.cursor =\n        'n-resize'\n    } else {\n      const controlerMinWidth = minText.width + textGap + controller.width,\n        controlerMaxWidth = maxText.width + textGap + controller.width\n      width =\n        itemHeight +\n        Math.max(controlerMaxWidth, highText.width + textGap) +\n        Math.max(controlerMinWidth, lowText.width + textGap)\n      height = controller.height + itemWidth\n      colorBar.x = Math.max(lowText.width + textGap, controlerMinWidth)\n      colorBar.y = controller.height\n      lowText.y = colorBar.y + (itemWidth - textStyle.fontSize) / 2\n      lowText.x = lowText.width / 2\n      highText.y = lowText.y\n      highText.x = colorBar.x + itemHeight + highText.width / 2 + textGap\n      lowControl.x = colorBar.x - controller.width\n      highControl.x = colorBar.x + itemHeight\n      lowControl.offset = 0\n      highControl.offset = itemHeight\n      minText.textAlign = 'right'\n      minText.x = lowControl.x - textGap\n      maxText.x = highControl.x + textGap + controller.width\n      minText.textBaseline = maxText.textBaseline = 'top'\n      if (top !== 'auto') {\n        lowText.y = highText.y = lowText.y - colorBar.y\n        colorBar.y = 0\n        lowControl.y = highControl.y = itemWidth\n        minText.y = maxText.y = itemWidth\n      }\n      colorBar.cursor = maxText.cursor = minText.cursor = highControl.cursor = lowControl.cursor =\n        'e-resize'\n    }\n    const {translateX, translateY} = getTranslate(this.el, this.options, {\n      width,\n      height,\n      rightWidth: Math.max(highText.width, lowText.width, itemWidth)\n    })\n    this.layout = {\n      width,\n      height,\n      translateX,\n      translateY,\n      colorBar,\n      highText,\n      lowText,\n      highControl,\n      lowControl,\n      minText,\n      maxText\n    }\n  }\n\n  render() {\n    this.renderInit()\n    this.response = []\n    const {\n        translateX,\n        translateY,\n        highText,\n        lowText,\n        highControl,\n        lowControl,\n        minText,\n        maxText\n      } = this.layout,\n      {textStyle, orient, calculable} = this.options\n    highText.text &&\n      drawText(this.ctx, {\n        x: translateX + highText.x,\n        y: translateY + highText.y,\n        text: highText.text,\n        textBaseline: 'top',\n        ...textStyle\n      })\n    lowText.text &&\n      drawText(this.ctx, {\n        x: translateX + lowText.x,\n        y: translateY + lowText.y,\n        text: lowText.text,\n        textBaseline: 'top',\n        ...textStyle\n      })\n    this.drawColorBar()\n    if (calculable) {\n      if (orient === 'vertical') {\n        this.drawControl(highControl, maxText, 'up-left')\n        this.drawControl(lowControl, minText, 'down-left')\n      } else {\n        this.drawControl(lowControl, minText, 'down-left')\n        this.drawControl(highControl, maxText, 'up-right')\n      }\n    }\n    if (!this.response.length) {\n      this.el.style.cursor = 'default'\n      this.emit('mouseout')\n    }\n  }\n\n  renderInit() {\n    this.ctx.clearRect(0, 0, this.size.width, this.size.height)\n    // const {translateX, translateY, width, height} = this.layout\n    // this.ctx.clearRect(translateX, translateY, width, height)\n    // this.drawBg()\n  }\n\n  drawBg() {\n    const {translateX, translateY, width, height} = this.layout,\n      {background, borderColor, borderWidth} = this.options\n    drawRect(this.ctx, {\n      x: translateX,\n      y: translateY,\n      width,\n      height,\n      color: background\n    })\n    borderColor &&\n      drawRect(this.ctx, {\n        x: translateX,\n        y: translateY,\n        width,\n        height,\n        color: borderColor,\n        type: 'stroke',\n        lineWidth: borderWidth\n      })\n  }\n\n  drawColorBar() {\n    const {itemWidth, itemHeight, color, orient, inactiveColor} = this.options,\n      {highControl, lowControl, colorBar, translateX, translateY} = this.layout,\n      gradient =\n        orient === 'vertical'\n          ? this.ctx.createLinearGradient(0, 0, 0, itemHeight)\n          : this.ctx.createLinearGradient(0, 0, itemHeight, 0),\n      length = color.length - 1,\n      _color = orient === 'vertical' ? color : [...color].reverse()\n    _color.forEach((color, i) => {\n      gradient.addColorStop(i / length, color)\n    })\n\n    let detected = false\n    orient === 'vertical'\n      ? drawRect(this.ctx, {\n          x: translateX + colorBar.x,\n          y: translateY + colorBar.y,\n          width: itemWidth,\n          height: itemHeight,\n          color: gradient,\n          detect: _ => {\n            this.ctx.fillStyle = gradient\n            this.ctx.fill()\n            if (this.isDetect()) {\n              detected = true\n            }\n          }\n        })\n      : drawRect(this.ctx, {\n          x: translateX + colorBar.x,\n          y: translateY + colorBar.y,\n          width: itemHeight,\n          height: itemWidth,\n          color: gradient,\n          detect: _ => {\n            this.ctx.fillStyle = gradient\n            this.ctx.fill()\n            if (this.isDetect()) {\n              detected = true\n            }\n          }\n        })\n\n    orient === 'vertical'\n      ? drawRect(this.ctx, {\n          x: translateX + colorBar.x,\n          y: translateY + colorBar.y,\n          width: itemWidth,\n          height: highControl.offset,\n          color: inactiveColor\n        })\n      : drawRect(this.ctx, {\n          x: translateX + colorBar.x + highControl.offset,\n          y: translateY + colorBar.y,\n          width: itemHeight - highControl.offset,\n          height: itemWidth,\n          color: inactiveColor\n        })\n\n    orient === 'vertical'\n      ? drawRect(this.ctx, {\n          x: translateX + colorBar.x,\n          y: translateY + colorBar.y + lowControl.offset,\n          width: itemWidth,\n          height: itemHeight - lowControl.offset,\n          color: inactiveColor\n        })\n      : drawRect(this.ctx, {\n          x: translateX + colorBar.x,\n          y: translateY + colorBar.y,\n          width: lowControl.offset,\n          height: itemWidth,\n          color: inactiveColor,\n          _type: 'aaa'\n        })\n    if (detected) {\n      !this.downMouse &&\n        (orient === 'vertical'\n          ? this.drawVerticalColorBarTip()\n          : this.drawHorizontalColorBarTip())\n      this.mouseDetect(colorBar)\n    }\n  }\n\n  drawVerticalColorBarTip() {\n    const {\n        textGap,\n        textStyle,\n        itemHeight,\n        right,\n        controller,\n        precision,\n        tipWidth,\n        tipHeight,\n        min: minValue,\n        max: maxValue\n      } = this.options,\n      {colorBar, translateX, translateY, lowControl} = this.layout,\n      textAlign = right === 'auto' ? 'left' : 'right',\n      x =\n        translateX +\n        lowControl.x +\n        (right === 'auto' ? -1 : controller.width + 1),\n      y = this.mouse.y,\n      min = colorBar.y + translateY,\n      max = colorBar.y + itemHeight + translateY,\n      color = getPixelColor(this.ctx, x, y >= max ? y - 1 : y),\n      value = toFixed(this.colorScale(max - y), precision),\n      text = right === 'auto' ? `≈ ${value}` : `${value} ≈`,\n      delta = textAlign === 'left' ? 1 : -1,\n      x1 = x,\n      y1 = y - tipHeight <= min ? min : y - tipHeight,\n      x2 = x + tipWidth * delta,\n      y2 = y,\n      x3 = x,\n      y3 = y + tipHeight >= max ? max : y + tipHeight,\n      textx = x2 + textGap * delta,\n      texty = y + 1\n\n    this.valueRange = {\n      min: toFixed(this.colorScale(max - y - tipHeight), precision),\n      max: toFixed(this.colorScale(max - y + tipHeight), precision)\n    }\n    this.valueRange.min < minValue && (this.valueRange.min = minValue)\n    this.valueRange.min > maxValue && (this.valueRange.max = maxValue)\n    drawTrangle(this.ctx, {\n      x1,\n      y1,\n      x2,\n      y2,\n      x3,\n      y3,\n      color\n    })\n    drawText(this.ctx, {\n      ...textStyle,\n      text: text,\n      textAlign,\n      textBaseline: 'middle',\n      fontSize: 12,\n      x: textx,\n      y: texty\n    })\n  }\n\n  drawHorizontalColorBarTip() {\n    const {\n        textGap,\n        textStyle,\n        itemHeight,\n        top,\n        controller,\n        precision,\n        tipWidth,\n        tipHeight,\n        min: minValue,\n        max: maxValue\n      } = this.options,\n      {colorBar, translateX, translateY, lowControl} = this.layout,\n      x = this.mouse.x,\n      y =\n        translateY +\n        lowControl.y +\n        (top === 'auto' ? controller.height + 1 : -1),\n      textBaseline = top === 'auto' ? 'bottom' : 'top',\n      delta = top === 'auto' ? -1 : 1,\n      min = colorBar.x + translateX,\n      max = colorBar.x + itemHeight + translateX,\n      color = getPixelColor(this.ctx, x >= max ? x - 1 : x, y - 1),\n      value = toFixed(this.colorScale(x - min), precision),\n      text = `≈ ${value}`,\n      x1 = x - tipWidth <= min ? min : x - tipWidth,\n      y1 = y,\n      x2 = x,\n      y2 = y + delta * tipHeight,\n      x3 = x + tipHeight >= max ? max : x + tipWidth,\n      y3 = y,\n      textx = x2,\n      texty = y + textGap * delta\n\n    // this.valueRange = [toFixed(this.colorScale(x - min - tipWidth), precision), toFixed(this.colorScale(x - min + tipWidth), precision)]\n    this.valueRange = {\n      min: toFixed(this.colorScale(x - min - tipWidth), precision),\n      max: toFixed(this.colorScale(x - min + tipWidth), precision)\n    }\n    this.valueRange.min < minValue && (this.valueRange.min = minValue)\n    this.valueRange.max > maxValue && (this.valueRange.max = maxValue)\n\n    drawTrangle(this.ctx, {\n      x1,\n      y1,\n      x2,\n      y2,\n      x3,\n      y3,\n      color\n    })\n    drawText(this.ctx, {\n      ...textStyle,\n      text: text,\n      textAlign: 'center',\n      textBaseline,\n      fontSize: 12,\n      x: textx,\n      y: texty\n    })\n  }\n\n  drawControl(control, text, dir) {\n    const {translateX, translateY} = this.layout,\n      {controller, textStyle, orient, itemHeight, precision} = this.options,\n      {width, height} = controller,\n      offsetX =\n        orient === 'vertical'\n          ? 0\n          : control.type === 'highControl'\n          ? control.offset - itemHeight\n          : control.offset,\n      offsetY =\n        orient === 'vertical'\n          ? control.type === 'highControl'\n            ? control.offset\n            : control.offset - itemHeight\n          : 0,\n      x1 = translateX + control.x + offsetX,\n      y1 = translateY + control.y + offsetY,\n      x2 = x1 + (control.width || width),\n      y2 = y1,\n      textx = text.x + translateX + offsetX,\n      texty = y1\n    text.text = toFixed(\n      this.colorScale(\n        orient === 'vertical' ? itemHeight - control.offset : control.offset\n      ),\n      precision\n    )\n    let x3, y3\n    if (dir === 'up-left') {\n      x3 = x2\n      y3 = y1 - height\n    } else if (dir === 'up-right') {\n      x3 = x2 - (control.width || width)\n      y3 = y1 + height\n    } else if (dir === 'down-left') {\n      x3 = x2\n      y3 = y1 + height\n    } else if (dir === 'down-right') {\n      x3 = x2 + (control.width || width)\n      y3 = y1 + height\n    }\n    drawTrangle(this.ctx, {\n      x1,\n      y1,\n      x2,\n      y2,\n      x3,\n      y3,\n      type: 'fill',\n      color: control.color,\n      detect: () => {\n        if (this.isDetect()) {\n          this.mouseDetect(control)\n        }\n        this.ctx.fillStyle = control.color\n        this.ctx.fill()\n      }\n    })\n\n    drawText(this.ctx, {\n      ...textStyle,\n      ...text,\n      x: textx,\n      y: texty\n    })\n  }\n\n  // 辅助text鼠标事件\n  drawTextRect(x, y, width, height) {\n    this.ctx.save()\n    this.ctx.beginPath()\n    this.ctx.fillStyle = 'rgba(0, 0, 0, 0)'\n    this.ctx.rect(x, y, width, height)\n    this.ctx.closePath()\n    this.ctx.fill()\n    this.ctx.restore()\n  }\n\n  getColor(value) {\n    const scaleValue = this.valueScale(value),\n      {orient, itemHeight} = this.options,\n      {translateX, translateY, colorBar} = this.layout,\n      x =\n        translateX +\n        colorBar.x +\n        (orient === 'vertical'\n          ? 0\n          : scaleValue === itemHeight\n          ? scaleValue - 1\n          : 0),\n      y =\n        translateY +\n        colorBar.y +\n        (orient === 'vertical'\n          ? scaleValue === 0\n            ? itemHeight - 1\n            : itemHeight - scaleValue\n          : 0)\n    return getPixelColor(this.ctx, x, y)\n  }\n\n  destroy() {\n    off(this.el, 'mousedown', this.mousedown.bind(this))\n    off(this.el, 'mousemove', this.mousemove.bind(this))\n    off(this.el, 'mouseup', this.mouseup.bind(this))\n    this.off('mouseover')\n    this.off('mouseout')\n    this.off('mousedown')\n    this.off('mouseup')\n    this.off('change')\n    !this.options.context && off(window, 'resize', this.resize.bind(this))\n  }\n}\n"]}]}