{"remainingRequest":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js!D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\工作项目\\部反诈\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\工作项目\\部反诈\\src\\components\\echarts\\liquidFill\\liquidFillChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\工作项目\\部反诈\\src\\components\\echarts\\liquidFill\\liquidFillChart.vue","mtime":1598758386884},{"path":"D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseFloat from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-float\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\nimport globalChartMixin from 'mixins/globalChartMixin';\nimport ECharts from 'vue-echarts/components/ECharts';\nimport 'echarts-liquidfill/src/liquidFill.js';\nimport 'echarts/lib/chart/pie';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/legendScroll';\nimport 'echarts/lib/component/title';\nimport storage from \"utils/storage\";\nvar chartColors = storage.get('tColors');\nexport default {\n  name: 'liquidFillChart',\n  components: {\n    ECharts: ECharts\n  },\n  mixins: [globalChartMixin],\n  props: {\n    chartData: {\n      type: Object,\n      default: function _default() {\n        return {\n          value: 1,\n          name: '完成率'\n        };\n      }\n    },\n    colors: {\n      type: Array,\n      default: function _default() {\n        return chartColors.liquidFill.colors;\n      }\n    },\n    titleColor: {\n      type: String,\n      default: chartColors.liquidFill.title\n    },\n    labelColor: {\n      type: String,\n      default: chartColors.liquidFill.label\n    },\n    labelFontSize: {\n      type: Number,\n      default: 20\n    },\n    titleFontSize: {\n      type: Number,\n      default: 14\n    },\n    bgColor: {\n      type: String,\n      default: chartColors.liquidFill.bg\n    },\n    borderColor: {\n      type: String,\n      default: chartColors.liquidFill.border\n    },\n    borderWidth: {\n      type: Number,\n      default: 2\n    },\n    radius: {\n      type: String,\n      default: '60%'\n    }\n  },\n  data: function data() {\n    return {\n      chartName: '[饼图模板]',\n      timeFlag: 0\n    };\n  },\n  mounted: function mounted() {},\n  watch: {\n    chartData: {\n      handler: function handler(newVal, oldVal) {\n        this.refresh();\n      },\n      deep: true\n    },\n    colors: function colors(newVal, oldVal) {\n      this.refresh();\n    },\n    titleColor: function titleColor(newVal, oldVal) {\n      this.refresh();\n    },\n    labelColor: function labelColor(newVal, oldVal) {\n      this.refresh();\n    },\n    labelFontSize: function labelFontSize(newVal, oldVal) {\n      this.refresh();\n    },\n    bgColor: function bgColor(newVal, oldVal) {\n      this.refresh();\n    },\n    borderColor: function borderColor(newVal, oldVal) {\n      this.refresh();\n    },\n    borderWidth: function borderWidth(newVal, oldVal) {\n      this.refresh();\n    },\n    radius: function radius(newVal, oldVal) {\n      this.refresh();\n    }\n  },\n  methods: {\n    setOptions: function setOptions() {\n      var pieOpts = {\n        title: {\n          left: 'center',\n          bottom: 0,\n          text: this.chartData.name,\n          textStyle: {\n            fontSize: this.titleFontSize,\n            color: this.titleColor\n          }\n        },\n        series: [{\n          type: 'liquidFill',\n          radius: this.radius,\n          data: [this.chartData.value, this.chartData.value, this.chartData.value],\n          color: this.colors,\n          outline: {\n            borderDistance: this.borderWidth + 1,\n            itemStyle: {\n              color: 'none',\n              borderWidth: this.borderWidth,\n              borderColor: this.borderColor\n            }\n          },\n          backgroundStyle: {\n            color: this.bgColor\n          },\n          label: {\n            normal: {\n              formatter: function formatter(params) {\n                return _parseFloat((params.value * 100).toFixed(2)) + '%';\n              },\n              textStyle: {\n                fontSize: this.labelFontSize,\n                color: this.labelColor\n              }\n            }\n          }\n        }]\n      };\n      return pieOpts;\n    }\n  }\n};",{"version":3,"sources":["liquidFillChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <ECharts :options=\"options\" :autoresize=\"true\"></ECharts>\r\n</template>\r\n\r\n<script>\r\n  import globalChartMixin from 'mixins/globalChartMixin'\r\n  import ECharts from 'vue-echarts/components/ECharts'\r\n  import 'echarts-liquidfill/src/liquidFill.js'\r\n  import 'echarts/lib/chart/pie'\r\n  import 'echarts/lib/component/tooltip'\r\n  import 'echarts/lib/component/legend'\r\n  import 'echarts/lib/component/legendScroll'\r\n  import 'echarts/lib/component/title'\r\n  import storage from \"utils/storage\"\r\n  const chartColors = storage.get('tColors')\r\n  export default {\r\n    name: 'liquidFillChart',\r\n    components: { ECharts },\r\n    mixins: [ globalChartMixin ],\r\n    props: {\r\n      chartData: {\r\n        type: Object,\r\n        default: () => {\r\n          return {\r\n            value: 1,\r\n            name: '完成率'\r\n          }\r\n        }\r\n      },\r\n      colors: {\r\n        type: Array,\r\n        default: () => chartColors.liquidFill.colors\r\n      },\r\n      titleColor: {\r\n        type: String,\r\n        default: chartColors.liquidFill.title\r\n      },\r\n      labelColor: {\r\n        type: String,\r\n        default: chartColors.liquidFill.label\r\n      },\r\n      labelFontSize: {\r\n        type: Number,\r\n        default: 20\r\n      },\r\n      titleFontSize: {\r\n        type: Number,\r\n        default: 14\r\n      },\r\n      bgColor: {\r\n        type: String,\r\n        default: chartColors.liquidFill.bg\r\n      },\r\n      borderColor: {\r\n        type: String,\r\n        default: chartColors.liquidFill.border\r\n      },\r\n      borderWidth: {\r\n        type: Number,\r\n        default: 2\r\n      },\r\n      radius: {\r\n        type: String,\r\n        default: '60%'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        chartName: '[饼图模板]',\r\n        timeFlag: 0\r\n      }\r\n    },\r\n    mounted() {},\r\n    watch: {\r\n      chartData: {\r\n        handler(newVal, oldVal) {\r\n          this.refresh()\r\n        },\r\n        deep: true\r\n      },\r\n      colors(newVal, oldVal) {\r\n        this.refresh()\r\n      },\r\n      titleColor(newVal, oldVal) {\r\n        this.refresh()\r\n      },\r\n      labelColor(newVal, oldVal) {\r\n        this.refresh()\r\n      },\r\n      labelFontSize(newVal, oldVal) {\r\n        this.refresh()\r\n      },\r\n      bgColor(newVal, oldVal) {\r\n        this.refresh()\r\n      },\r\n      borderColor(newVal, oldVal) {\r\n        this.refresh()\r\n      },\r\n      borderWidth(newVal, oldVal) {\r\n        this.refresh()\r\n      },\r\n      radius(newVal, oldVal) {\r\n        this.refresh()\r\n      }\r\n    },\r\n    methods: {\r\n      setOptions() {\r\n        var pieOpts = {\r\n          title: {\r\n            left: 'center',\r\n            bottom: 0,\r\n            text: this.chartData.name,\r\n            textStyle: {\r\n              fontSize: this.titleFontSize,\r\n              color: this.titleColor\r\n            }\r\n          },\r\n          series: [{\r\n            type: 'liquidFill',\r\n            radius: this.radius,\r\n            data: [this.chartData.value, this.chartData.value, this.chartData.value],\r\n            color: this.colors,\r\n            outline: {\r\n              borderDistance: this.borderWidth + 1,\r\n              itemStyle: {\r\n                color: 'none',\r\n                borderWidth: this.borderWidth,\r\n                borderColor: this.borderColor\r\n              }\r\n            },\r\n            backgroundStyle: {\r\n              color: this.bgColor\r\n            },\r\n            label: {\r\n              normal: {\r\n                formatter: function(params) {\r\n                  return parseFloat((params.value * 100).toFixed(2)) + '%'\r\n                },\r\n                textStyle: {\r\n                  fontSize: this.labelFontSize,\r\n                  color: this.labelColor\r\n                }\r\n              }\r\n            }\r\n          }]\r\n        }\r\n        return pieOpts\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"sourceRoot":"src/components/echarts/liquidFill"}]}