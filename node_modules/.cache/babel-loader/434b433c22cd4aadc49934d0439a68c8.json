{"remainingRequest":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js!D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\工作项目\\部反诈\\src\\mixins\\globalMixin.js","dependencies":[{"path":"D:\\工作项目\\部反诈\\src\\mixins\\globalMixin.js","mtime":1598758386945},{"path":"D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Array$isArray from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/array/is-array\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport { mapGetters } from 'vuex';\nimport { getNationalPng } from \"@/constants/country\";\nexport default {\n  data: function data() {\n    return {\n      themeColors: {}\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    '_theme': 'theme',\n    '_tColors': 'tColors',\n    '_ratio': 'ratio'\n  })),\n  methods: {\n    getSlotNames: function getSlotNames(rows) {\n      var arr = [];\n      rows.forEach(function (row, rowInd) {\n        row.columns.forEach(function (column, columnInd) {\n          column.boxes.forEach(function (box, boxInd) {\n            var slotNm = '';\n\n            if (column.type === 'row') {\n              // arr.push(`r${rowInd + 1}c${columnInd + 1}r${boxInd + 1}`)\n              slotNm = \"r\".concat(rowInd + 1, \"c\").concat(columnInd + 1, \"r\").concat(boxInd + 1);\n            } else {\n              // arr.push(`r${rowInd + 1}c${columnInd + 1}c${boxInd + 1}`)\n              slotNm = \"r\".concat(rowInd + 1, \"c\").concat(columnInd + 1, \"c\").concat(boxInd + 1);\n            }\n\n            if (box.boxes && _Array$isArray(box.boxes) && box.boxes.length > 0) {\n              box.boxes.forEach(function (childBox, childBoxInd) {\n                var childSlotNm = '';\n\n                if (box.type === 'row') {\n                  childSlotNm = \"\".concat(slotNm, \"r\").concat(childBoxInd + 1);\n                } else {\n                  childSlotNm = \"\".concat(slotNm, \"c\").concat(childBoxInd + 1);\n                }\n\n                if (childBox.boxes && _Array$isArray(childBox.boxes) && childBox.boxes.length > 0) {\n                  childBox.boxes.forEach(function (sonBox, sonBoxInd) {\n                    if (childBox.type === 'row') {\n                      arr.push(\"\".concat(childSlotNm, \"r\").concat(sonBoxInd + 1));\n                    } else {\n                      arr.push(\"\".concat(childSlotNm, \"c\").concat(sonBoxInd + 1));\n                    }\n                  });\n                } else {\n                  arr.push(childSlotNm);\n                }\n              });\n            } else {\n              arr.push(slotNm);\n            }\n          });\n        });\n      });\n      return arr;\n    },\n    getPxHeight: function getPxHeight(nodeNm) {\n      if (this.$refs[nodeNm]) {\n        return \"\".concat(this.$refs[nodeNm].offsetHeight, \"px\");\n      }\n\n      return '0px';\n    },\n    getHeight: function getHeight(nodeNm) {\n      return this.getPxHeight(nodeNm);\n    },\n    getFindImg: function getFindImg(cname) {\n      return getNationalPng(cname);\n    }\n  },\n  // keep-alive组件激活时调用\n  activated: function activated() {\n    this.$forceUpdate();\n  },\n  // keep-alive组件停用时调用\n  deactivated: function deactivated() {\n    this.$forceUpdate();\n  }\n};",{"version":3,"sources":["D:\\工作项目\\部反诈\\src\\mixins\\globalMixin.js"],"names":["mapGetters","getNationalPng","data","themeColors","computed","methods","getSlotNames","rows","arr","forEach","row","rowInd","columns","column","columnInd","boxes","box","boxInd","slotNm","type","length","childBox","childBoxInd","childSlotNm","sonBox","sonBoxInd","push","getPxHeight","nodeNm","$refs","offsetHeight","getHeight","getFindImg","cname","activated","$forceUpdate","deactivated"],"mappings":"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","sourcesContent":["import {mapGetters} from 'vuex'\r\nimport { getNationalPng } from \"@/constants/country\"\r\nexport default {\r\n  data() {\r\n    return {\r\n      themeColors: {}\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      '_theme': 'theme',\r\n      '_tColors': 'tColors',\r\n      '_ratio': 'ratio'\r\n    })\r\n  },\r\n  methods: {\r\n    getSlotNames(rows) {\r\n      let arr = []\r\n      rows.forEach((row, rowInd) => {\r\n        row.columns.forEach((column, columnInd) => {\r\n          column.boxes.forEach((box, boxInd) => {\r\n            let slotNm = ''\r\n            if (column.type === 'row') {\r\n              // arr.push(`r${rowInd + 1}c${columnInd + 1}r${boxInd + 1}`)\r\n              slotNm = `r${rowInd + 1}c${columnInd + 1}r${boxInd + 1}`\r\n            } else {\r\n              // arr.push(`r${rowInd + 1}c${columnInd + 1}c${boxInd + 1}`)\r\n              slotNm = `r${rowInd + 1}c${columnInd + 1}c${boxInd + 1}`\r\n            }\r\n\r\n            if (box.boxes && Array.isArray(box.boxes) && box.boxes.length > 0) {\r\n              box.boxes.forEach((childBox, childBoxInd) => {\r\n                let childSlotNm = ''\r\n                if (box.type === 'row') {\r\n                  childSlotNm = `${slotNm}r${childBoxInd + 1}`\r\n                } else {\r\n                  childSlotNm = `${slotNm}c${childBoxInd + 1}`\r\n                }\r\n\r\n                if (childBox.boxes && Array.isArray(childBox.boxes) && childBox.boxes.length > 0) {\r\n                  childBox.boxes.forEach((sonBox, sonBoxInd) => {\r\n                    if (childBox.type === 'row') {\r\n                      arr.push(`${childSlotNm}r${sonBoxInd + 1}`)\r\n                    } else {\r\n                      arr.push(`${childSlotNm}c${sonBoxInd + 1}`)\r\n                    }\r\n                  })\r\n                } else {\r\n                  arr.push(childSlotNm)\r\n                }\r\n              })\r\n            } else {\r\n              arr.push(slotNm)\r\n            }\r\n          })\r\n        })\r\n      })\r\n\r\n      return arr\r\n    },\r\n    getPxHeight(nodeNm) {\r\n      if (this.$refs[nodeNm]) {\r\n        return `${this.$refs[nodeNm].offsetHeight}px`\r\n      }\r\n\r\n      return '0px'\r\n    },\r\n    getHeight(nodeNm) {\r\n      return this.getPxHeight(nodeNm)\r\n    },\r\n    getFindImg(cname) {\r\n      return getNationalPng(cname)\r\n    }\r\n  },\r\n  // keep-alive组件激活时调用\r\n  activated() {\r\n    this.$forceUpdate()\r\n  },\r\n  // keep-alive组件停用时调用\r\n  deactivated() {\r\n    this.$forceUpdate()\r\n  }\r\n}\r\n"]}]}