{"remainingRequest":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js!D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\工作项目\\部反诈\\src\\views\\analysis\\sameMixin.js","dependencies":[{"path":"D:\\工作项目\\部反诈\\src\\views\\analysis\\sameMixin.js","mtime":1598758387094},{"path":"D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport ChartBox from 'components/chartBox';\nimport CornerBg from 'components/corner';\nimport PieChart from 'components/echarts/pie/pieChart';\nimport LineChart from 'components/echarts/line/lineChart';\nimport { fraudRings, domainGross, domainLive, tableList, getFraudAppMarket as _getFraudAppMarket, getFraudAppEventType as _getFraudAppEventType, getFraudAppDiscoverTrend as _getFraudAppDiscoverTrend, getWebsiteAccessProportion as _getWebsiteAccessProportion, getFraudGroupTotalTrend as _getFraudGroupTotalTrend, getFraudGroupUpdateTrend as _getFraudGroupUpdateTrend, getFraudWebsiteType as _getFraudWebsiteType, suspectedVictim as _suspectedVictim, getFakeWebsiteList as _getFakeWebsiteList, getAffectedUsersRatio as _getAffectedUsersRatio // getFraudAppTotal\n} from 'api/analysis';\nexport default {\n  name: 'Analysis',\n  props: {},\n  components: {\n    ChartBox: ChartBox,\n    CornerBg: CornerBg,\n    LineChart: LineChart,\n    PieChart: PieChart\n  },\n  data: function data() {\n    return {\n      // bk:'#E0693C',\n      bk: 'rgba(221,135,73,0.3)',\n      bk1: '#E0693C',\n      loading: false,\n      maptotalList: [],\n      fakeWebsiteList: [],\n      // fraudAppTotal: [],\n      leftImg: './dataAnalysis/数据输入.png',\n      rightGraphImg: './dataAnalysis/数据输入点状图.png',\n      graphBtns: [{\n        name: '数据输入',\n        active: true\n      }, {\n        name: '协同融合',\n        active: false\n      }, {\n        name: '关联分析',\n        active: false\n      }, {\n        name: '省部聚合',\n        active: false\n      }, {\n        name: '全国总览',\n        active: false\n      }],\n      type: 0,\n      tableData: [],\n      // barData1: {\n      //   legendData: ['涉诈资源集合新增趋势'],\n      //   seriesData: [\n      //     [219, 227, 13280, 22455, 14605, 8955]\n      //   ],\n      //   categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\n      // },\n      // barData2: {\n      //   legendData: ['涉诈资源集合更新趋势'],\n      //   seriesData: [\n      //     [251, 280, 280, 254, 296, 175]\n      //   ],\n      //   categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\n      // },\n      // barData3: {\n      //   legendData: ['涉诈类型分析'],\n      //   seriesData: [\n      //     [302739, 119805, 298440, 1370727, 58353, 80701]\n      //   ],\n      //   categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\n      // },\n      line1data: {},\n      line2data: {},\n      fraudAppMarket: {},\n      fraudAppEventType: {},\n      fraudAppDiscoverTrend: {},\n      fraudWebsiteType: {},\n      suspectedVictimData: {},\n      websiteAccessProportion: {},\n      fraudGroupTotalTrend: {},\n      fraudGroupUpdateTrend: {},\n      navList: [{\n        label: '重点网站分析',\n        value: 'website',\n        icon: 'iconwangzhi'\n      }, {\n        label: '重点APP分析',\n        value: 'app',\n        icon: 'iconAPP'\n      }, {\n        label: '涉诈团伙分析',\n        value: 'group',\n        icon: 'icontuanhuoqunti'\n      }, {\n        label: '仿冒网页分析',\n        value: 'phishing',\n        icon: 'iconyumingyuwangzhan'\n      }],\n      activeValue: 'website',\n      affectedUsersRatio: {}\n    };\n  },\n  computed: {},\n  created: function created() {},\n  mounted: function mounted() {\n    this._fraudRings();\n\n    this._domainGross();\n\n    this._domainLive();\n\n    this._tableList();\n\n    this.getFraudAppMarket();\n    this.getFraudAppEventType();\n    this.getFraudAppDiscoverTrend();\n    this.getFraudWebsiteType();\n    this.suspectedVictim();\n    this.getWebsiteAccessProportion();\n    this.getFraudGroupTotalTrend();\n    this.getFraudGroupUpdateTrend();\n    this.getFakeWebsiteList();\n    this.getAffectedUsersRatio(); // this.getFraudAppTotal()\n  },\n  methods: {\n    changeGraph: function changeGraph(name, index) {\n      var _this = this;\n\n      this.graphBtns.forEach(function (item) {\n        if (index === 0) {\n          // this.bk='#E0693C'\n          _this.bk = 'rgba(221,135,73,0.3)';\n        }\n\n        if (index === 1) {\n          // this.bk='#5D89FF'\n          _this.bk = 'rgba(67,120,226,0.30)';\n        }\n\n        if (index === 2) {\n          // this.bk=' #BD52F6'\n          _this.bk = 'rgba(138,85,255,0.30)';\n        }\n\n        if (index === 3) {\n          // this.bk='#45DFFF'\n          _this.bk = 'rgba(90,201,225,0.30)';\n        }\n\n        if (index === 4) {\n          // this.bk='#D2DF5D'\n          _this.bk = 'rgba(181,193,75,0.30)';\n        }\n\n        if (item.name === name) {\n          item.active = true;\n          _this.leftImg = \"./dataAnalysis/\".concat(name, \".png\"); // this.rightGraphImg = `./dataAnalysis/${name}关系图.png`\n\n          _this.rightGraphImg = \"./dataAnalysis/\".concat(name, \"\\u70B9\\u72B6\\u56FE.png\");\n          _this.type = index;\n\n          _this._tableList();\n        } else {\n          item.active = false;\n        }\n      });\n    },\n    _fraudRings: function _fraudRings() {\n      var _this2 = this;\n\n      fraudRings().then(function (res) {\n        if (res.errorType === 0) {\n          var mapTemp = [];\n          mapTemp.push({\n            label: '涉诈团伙总数',\n            value: res.returnModel['reportNum']\n          });\n          mapTemp.push({\n            label: '昨日新增涉诈团伙',\n            value: res.returnModel['blockNum']\n          }); // mapTemp.push({\n          //   label: '团伙域名总量',\n          //   value: res.returnModel['domain']\n          // })\n          // mapTemp.push({\n          //   label: '团伙接入IP总量',\n          //   value: res.returnModel['ip']\n          // })\n\n          console.log(mapTemp);\n          _this2.maptotalList = mapTemp;\n        }\n      });\n    },\n    getFakeWebsiteList: function getFakeWebsiteList() {\n      var _this3 = this;\n\n      _getFakeWebsiteList().then(function (res) {\n        if (res.errorType === 0) {\n          var mapTemp = [];\n          mapTemp.push({\n            label: '仿冒网页总数',\n            value: res.returnModel['sum']\n          });\n          mapTemp.push({\n            label: '受害用户总数',\n            value: res.returnModel['userNum']\n          });\n          _this3.fakeWebsiteList = mapTemp;\n        }\n      });\n    },\n    _domainGross: function _domainGross() {\n      var _this4 = this;\n\n      domainGross().then(function (res) {\n        if (res.errorType === 0) {\n          _this4.line1data = res.returnModel;\n        }\n      });\n    },\n    _domainLive: function _domainLive() {\n      var _this5 = this;\n\n      domainLive().then(function (res) {\n        if (res.errorType === 0) {\n          _this5.line2data = res.returnModel;\n        }\n      });\n    },\n    _tableList: function _tableList() {\n      var _this6 = this;\n\n      tableList({\n        type: this.type\n      }).then(function (res) {\n        if (res.errorType === 0) {\n          // this.tableData = res.returnModel\n          // 切换时也可以用请求的数据\n          for (var key in res.returnModel) {\n            if (_this6.type === key) {\n              _this6.tableData = res.returnModel[key];\n            }\n          }\n        }\n      });\n    },\n    clickCenterBox: function clickCenterBox(type) {\n      this.activeValue = type;\n    },\n    getFraudAppMarket: function () {\n      var _getFraudAppMarket2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$simpleAsyncTo(_getFraudAppMarket(), '获取涉诈APP接入商城占比失败');\n\n              case 2:\n                res = _context.sent;\n\n                if (res) {\n                  this.fraudAppMarket = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getFraudAppMarket() {\n        return _getFraudAppMarket2.apply(this, arguments);\n      }\n\n      return getFraudAppMarket;\n    }(),\n    getFraudAppEventType: function () {\n      var _getFraudAppEventType2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$simpleAsyncTo(_getFraudAppEventType(), '获取涉诈APP诈骗事件类型分布失败');\n\n              case 2:\n                res = _context2.sent;\n\n                if (res) {\n                  this.fraudAppEventType = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getFraudAppEventType() {\n        return _getFraudAppEventType2.apply(this, arguments);\n      }\n\n      return getFraudAppEventType;\n    }(),\n    getFraudAppDiscoverTrend: function () {\n      var _getFraudAppDiscoverTrend2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.$simpleAsyncTo(_getFraudAppDiscoverTrend(), '获取近一周涉诈APP发现趋势失败');\n\n              case 2:\n                res = _context3.sent;\n\n                if (res) {\n                  this.fraudAppDiscoverTrend = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getFraudAppDiscoverTrend() {\n        return _getFraudAppDiscoverTrend2.apply(this, arguments);\n      }\n\n      return getFraudAppDiscoverTrend;\n    }(),\n    getFraudWebsiteType: function () {\n      var _getFraudWebsiteType2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.$simpleAsyncTo(_getFraudWebsiteType(), '获取涉诈网站类型分布失败');\n\n              case 2:\n                res = _context4.sent;\n\n                if (res) {\n                  this.fraudWebsiteType = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getFraudWebsiteType() {\n        return _getFraudWebsiteType2.apply(this, arguments);\n      }\n\n      return getFraudWebsiteType;\n    }(),\n    suspectedVictim: function () {\n      var _suspectedVictim2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.$simpleAsyncTo(_suspectedVictim(), '获取疑似受害者国内分布占比失败');\n\n              case 2:\n                res = _context5.sent;\n\n                if (res) {\n                  this.suspectedVictimData = {\n                    seriesData: res.returnModel\n                  };\n                }\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function suspectedVictim() {\n        return _suspectedVictim2.apply(this, arguments);\n      }\n\n      return suspectedVictim;\n    }(),\n    getWebsiteAccessProportion: function () {\n      var _getWebsiteAccessProportion2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.$simpleAsyncTo(_getWebsiteAccessProportion(), '获取网站境内外接入占比失败');\n\n              case 2:\n                res = _context6.sent;\n\n                if (res) {\n                  this.websiteAccessProportion = {\n                    seriesData: res.returnModel\n                  };\n                }\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getWebsiteAccessProportion() {\n        return _getWebsiteAccessProportion2.apply(this, arguments);\n      }\n\n      return getWebsiteAccessProportion;\n    }(),\n    getFraudGroupTotalTrend: function () {\n      var _getFraudGroupTotalTrend2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.$simpleAsyncTo(_getFraudGroupTotalTrend(), '获取涉诈团伙总量趋势失败');\n\n              case 2:\n                res = _context7.sent;\n\n                if (res) {\n                  this.fraudGroupTotalTrend = {\n                    legendData: ['涉诈团伙总量趋势'],\n                    seriesData: res.returnModel.seriesData,\n                    categoryData: res.returnModel.categoryData\n                  };\n                }\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getFraudGroupTotalTrend() {\n        return _getFraudGroupTotalTrend2.apply(this, arguments);\n      }\n\n      return getFraudGroupTotalTrend;\n    }(),\n    getFraudGroupUpdateTrend: function () {\n      var _getFraudGroupUpdateTrend2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.$simpleAsyncTo(_getFraudGroupUpdateTrend(), '获取涉诈团伙更新趋势失败');\n\n              case 2:\n                res = _context8.sent;\n\n                if (res) {\n                  this.fraudGroupUpdateTrend = {\n                    legendData: ['涉诈团伙更新趋势'],\n                    seriesData: res.returnModel.seriesData,\n                    categoryData: res.returnModel.categoryData\n                  };\n                }\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getFraudGroupUpdateTrend() {\n        return _getFraudGroupUpdateTrend2.apply(this, arguments);\n      }\n\n      return getFraudGroupUpdateTrend;\n    }(),\n    getAffectedUsersRatio: function () {\n      var _getAffectedUsersRatio2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.$simpleAsyncTo(_getAffectedUsersRatio(), '获取受害用户分布分布失败');\n\n              case 2:\n                res = _context9.sent;\n\n                if (res) {\n                  this.affectedUsersRatio = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getAffectedUsersRatio() {\n        return _getAffectedUsersRatio2.apply(this, arguments);\n      }\n\n      return getAffectedUsersRatio;\n    }() // async getFraudAppTotal() {\n    //   const res = await this.$simpleAsyncTo(\n    //     getFraudAppTotal(),\n    //     '获取涉诈App发现总数失败'\n    //   )\n    //   if (res) {\n    //     const mapTemp = []\n    //     mapTemp.push({\n    //       label: '发现总数',\n    //       value: res.returnModel['total']\n    //     })\n    //     mapTemp.push({\n    //       label: '昨日新增',\n    //       value: res.returnModel['yesterday']\n    //     })\n    //     this.fraudAppTotal = mapTemp\n    //   }\n    // }\n\n  }\n};",{"version":3,"sources":["D:\\工作项目\\部反诈\\src\\views\\analysis\\sameMixin.js"],"names":["ChartBox","CornerBg","PieChart","LineChart","fraudRings","domainGross","domainLive","tableList","getFraudAppMarket","getFraudAppEventType","getFraudAppDiscoverTrend","getWebsiteAccessProportion","getFraudGroupTotalTrend","getFraudGroupUpdateTrend","getFraudWebsiteType","suspectedVictim","getFakeWebsiteList","getAffectedUsersRatio","name","props","components","data","bk","bk1","loading","maptotalList","fakeWebsiteList","leftImg","rightGraphImg","graphBtns","active","type","tableData","line1data","line2data","fraudAppMarket","fraudAppEventType","fraudAppDiscoverTrend","fraudWebsiteType","suspectedVictimData","websiteAccessProportion","fraudGroupTotalTrend","fraudGroupUpdateTrend","navList","label","value","icon","activeValue","affectedUsersRatio","computed","created","mounted","_fraudRings","_domainGross","_domainLive","_tableList","methods","changeGraph","index","forEach","item","then","res","errorType","mapTemp","push","returnModel","console","log","key","clickCenterBox","$simpleAsyncTo","seriesData","legendData","categoryData"],"mappings":"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","sourcesContent":["import ChartBox from 'components/chartBox'\r\nimport CornerBg from 'components/corner'\r\nimport PieChart from 'components/echarts/pie/pieChart'\r\nimport LineChart from 'components/echarts/line/lineChart'\r\nimport {\r\n  fraudRings,\r\n  domainGross,\r\n  domainLive,\r\n  tableList,\r\n  getFraudAppMarket,\r\n  getFraudAppEventType,\r\n  getFraudAppDiscoverTrend,\r\n  getWebsiteAccessProportion,\r\n  getFraudGroupTotalTrend,\r\n  getFraudGroupUpdateTrend,\r\n  getFraudWebsiteType,\r\n  suspectedVictim,\r\n  getFakeWebsiteList,\r\n  getAffectedUsersRatio\r\n  // getFraudAppTotal\r\n} from 'api/analysis'\r\n\r\nexport default {\r\n  name: 'Analysis',\r\n  props: {},\r\n  components: { ChartBox, CornerBg, LineChart, PieChart },\r\n  data() {\r\n    return {\r\n      // bk:'#E0693C',\r\n      bk: 'rgba(221,135,73,0.3)',\r\n      bk1: '#E0693C',\r\n      loading: false,\r\n      maptotalList: [],\r\n      fakeWebsiteList: [],\r\n      // fraudAppTotal: [],\r\n      leftImg: './dataAnalysis/数据输入.png',\r\n      rightGraphImg: './dataAnalysis/数据输入点状图.png',\r\n      graphBtns: [\r\n        { name: '数据输入', active: true },\r\n        { name: '协同融合', active: false },\r\n        { name: '关联分析', active: false },\r\n        { name: '省部聚合', active: false },\r\n        { name: '全国总览', active: false }\r\n      ],\r\n      type: 0,\r\n      tableData: [],\r\n      // barData1: {\r\n      //   legendData: ['涉诈资源集合新增趋势'],\r\n      //   seriesData: [\r\n      //     [219, 227, 13280, 22455, 14605, 8955]\r\n      //   ],\r\n      //   categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\r\n      // },\r\n      // barData2: {\r\n      //   legendData: ['涉诈资源集合更新趋势'],\r\n      //   seriesData: [\r\n      //     [251, 280, 280, 254, 296, 175]\r\n      //   ],\r\n      //   categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\r\n      // },\r\n      // barData3: {\r\n      //   legendData: ['涉诈类型分析'],\r\n      //   seriesData: [\r\n      //     [302739, 119805, 298440, 1370727, 58353, 80701]\r\n      //   ],\r\n      //   categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\r\n      // },\r\n      line1data: {},\r\n      line2data: {},\r\n      fraudAppMarket: {},\r\n      fraudAppEventType: {},\r\n      fraudAppDiscoverTrend: {},\r\n      fraudWebsiteType: {},\r\n      suspectedVictimData: {},\r\n      websiteAccessProportion: {},\r\n      fraudGroupTotalTrend: {},\r\n      fraudGroupUpdateTrend: {},\r\n      navList: [\r\n        { label: '重点网站分析', value: 'website', icon: 'iconwangzhi' },\r\n        { label: '重点APP分析', value: 'app', icon: 'iconAPP' },\r\n        { label: '涉诈团伙分析', value: 'group', icon: 'icontuanhuoqunti' },\r\n        { label: '仿冒网页分析', value: 'phishing', icon: 'iconyumingyuwangzhan' }\r\n      ],\r\n      activeValue: 'website',\r\n      affectedUsersRatio: {}\r\n    }\r\n  },\r\n  computed: {},\r\n  created() {},\r\n  mounted() {\r\n    this._fraudRings()\r\n    this._domainGross()\r\n    this._domainLive()\r\n    this._tableList()\r\n    this.getFraudAppMarket()\r\n    this.getFraudAppEventType()\r\n    this.getFraudAppDiscoverTrend()\r\n    this.getFraudWebsiteType()\r\n    this.suspectedVictim()\r\n    this.getWebsiteAccessProportion()\r\n    this.getFraudGroupTotalTrend()\r\n    this.getFraudGroupUpdateTrend()\r\n    this.getFakeWebsiteList()\r\n    this.getAffectedUsersRatio()\r\n    // this.getFraudAppTotal()\r\n  },\r\n  methods: {\r\n    changeGraph(name, index) {\r\n      this.graphBtns.forEach(item => {\r\n        if (index === 0) {\r\n          // this.bk='#E0693C'\r\n          this.bk = 'rgba(221,135,73,0.3)'\r\n        }\r\n        if (index === 1) {\r\n          // this.bk='#5D89FF'\r\n          this.bk = 'rgba(67,120,226,0.30)'\r\n        }\r\n        if (index === 2) {\r\n          // this.bk=' #BD52F6'\r\n          this.bk = 'rgba(138,85,255,0.30)'\r\n        }\r\n        if (index === 3) {\r\n          // this.bk='#45DFFF'\r\n          this.bk = 'rgba(90,201,225,0.30)'\r\n        }\r\n        if (index === 4) {\r\n          // this.bk='#D2DF5D'\r\n          this.bk = 'rgba(181,193,75,0.30)'\r\n        }\r\n        if (item.name === name) {\r\n          item.active = true\r\n          this.leftImg = `./dataAnalysis/${name}.png`\r\n          // this.rightGraphImg = `./dataAnalysis/${name}关系图.png`\r\n          this.rightGraphImg = `./dataAnalysis/${name}点状图.png`\r\n          this.type = index\r\n          this._tableList()\r\n        } else {\r\n          item.active = false\r\n        }\r\n      })\r\n    },\r\n    _fraudRings() {\r\n      fraudRings().then(res => {\r\n        if (res.errorType === 0) {\r\n          const mapTemp = []\r\n          mapTemp.push({\r\n            label: '涉诈团伙总数',\r\n            value: res.returnModel['reportNum']\r\n          })\r\n          mapTemp.push({\r\n            label: '昨日新增涉诈团伙',\r\n            value: res.returnModel['blockNum']\r\n          })\r\n          // mapTemp.push({\r\n          //   label: '团伙域名总量',\r\n          //   value: res.returnModel['domain']\r\n          // })\r\n          // mapTemp.push({\r\n          //   label: '团伙接入IP总量',\r\n          //   value: res.returnModel['ip']\r\n          // })\r\n          console.log(mapTemp)\r\n          this.maptotalList = mapTemp\r\n        }\r\n      })\r\n    },\r\n    getFakeWebsiteList() {\r\n      getFakeWebsiteList().then(res => {\r\n        if (res.errorType === 0) {\r\n          const mapTemp = []\r\n          mapTemp.push({\r\n            label: '仿冒网页总数',\r\n            value: res.returnModel['sum']\r\n          })\r\n          mapTemp.push({\r\n            label: '受害用户总数',\r\n            value: res.returnModel['userNum']\r\n          })\r\n          this.fakeWebsiteList = mapTemp\r\n        }\r\n      })\r\n    },\r\n    _domainGross() {\r\n      domainGross().then(res => {\r\n        if (res.errorType === 0) {\r\n          this.line1data = res.returnModel\r\n        }\r\n      })\r\n    },\r\n    _domainLive() {\r\n      domainLive().then(res => {\r\n        if (res.errorType === 0) {\r\n          this.line2data = res.returnModel\r\n        }\r\n      })\r\n    },\r\n    _tableList() {\r\n      tableList({ type: this.type }).then(res => {\r\n        if (res.errorType === 0) {\r\n          // this.tableData = res.returnModel\r\n          // 切换时也可以用请求的数据\r\n          for (var key in res.returnModel) {\r\n            if (this.type === key) {\r\n              this.tableData = res.returnModel[key]\r\n            }\r\n          }\r\n        }\r\n      })\r\n    },\r\n    clickCenterBox(type) {\r\n      this.activeValue = type\r\n    },\r\n    async getFraudAppMarket() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudAppMarket(),\r\n        '获取涉诈APP接入商城占比失败'\r\n      )\r\n      if (res) {\r\n        this.fraudAppMarket = res.returnModel\r\n      }\r\n    },\r\n    async getFraudAppEventType() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudAppEventType(),\r\n        '获取涉诈APP诈骗事件类型分布失败'\r\n      )\r\n      if (res) {\r\n        this.fraudAppEventType = res.returnModel\r\n      }\r\n    },\r\n    async getFraudAppDiscoverTrend() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudAppDiscoverTrend(),\r\n        '获取近一周涉诈APP发现趋势失败'\r\n      )\r\n      if (res) {\r\n        this.fraudAppDiscoverTrend = res.returnModel\r\n      }\r\n    },\r\n    async getFraudWebsiteType() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudWebsiteType(),\r\n        '获取涉诈网站类型分布失败'\r\n      )\r\n      if (res) {\r\n        this.fraudWebsiteType = res.returnModel\r\n      }\r\n    },\r\n    async suspectedVictim() {\r\n      const res = await this.$simpleAsyncTo(\r\n        suspectedVictim(),\r\n        '获取疑似受害者国内分布占比失败'\r\n      )\r\n      if (res) {\r\n        this.suspectedVictimData = {\r\n          seriesData: res.returnModel\r\n        }\r\n      }\r\n    },\r\n    async getWebsiteAccessProportion() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getWebsiteAccessProportion(),\r\n        '获取网站境内外接入占比失败'\r\n      )\r\n      if (res) {\r\n        this.websiteAccessProportion = {\r\n          seriesData: res.returnModel\r\n        }\r\n      }\r\n    },\r\n    async getFraudGroupTotalTrend() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudGroupTotalTrend(),\r\n        '获取涉诈团伙总量趋势失败'\r\n      )\r\n      if (res) {\r\n        this.fraudGroupTotalTrend = {\r\n          legendData: ['涉诈团伙总量趋势'],\r\n          seriesData: res.returnModel.seriesData,\r\n          categoryData: res.returnModel.categoryData\r\n        }\r\n      }\r\n    },\r\n    async getFraudGroupUpdateTrend() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudGroupUpdateTrend(),\r\n        '获取涉诈团伙更新趋势失败'\r\n      )\r\n      if (res) {\r\n        this.fraudGroupUpdateTrend = {\r\n          legendData: ['涉诈团伙更新趋势'],\r\n          seriesData: res.returnModel.seriesData,\r\n          categoryData: res.returnModel.categoryData\r\n        }\r\n      }\r\n    },\r\n    async getAffectedUsersRatio() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getAffectedUsersRatio(),\r\n        '获取受害用户分布分布失败'\r\n      )\r\n      if (res) {\r\n        this.affectedUsersRatio = res.returnModel\r\n      }\r\n    }\r\n    // async getFraudAppTotal() {\r\n    //   const res = await this.$simpleAsyncTo(\r\n    //     getFraudAppTotal(),\r\n    //     '获取涉诈App发现总数失败'\r\n    //   )\r\n    //   if (res) {\r\n    //     const mapTemp = []\r\n    //     mapTemp.push({\r\n    //       label: '发现总数',\r\n    //       value: res.returnModel['total']\r\n    //     })\r\n    //     mapTemp.push({\r\n    //       label: '昨日新增',\r\n    //       value: res.returnModel['yesterday']\r\n    //     })\r\n    //     this.fraudAppTotal = mapTemp\r\n    //   }\r\n    // }\r\n  }\r\n}"]}]}