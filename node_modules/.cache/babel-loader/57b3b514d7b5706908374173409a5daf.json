{"remainingRequest":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js!D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\工作项目\\部反诈\\src\\views\\home\\sameMixin.js","dependencies":[{"path":"D:\\工作项目\\部反诈\\src\\views\\home\\sameMixin.js","mtime":1598758387187},{"path":"D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport ChartBox from 'components/chartBox';\nimport TotalBox from \"components/totalBox\"; // import TotalBox1 from \"components/totalBox1\"\n\nimport PieChart from 'components/echarts/pie/pieChart';\nimport LineChart from 'components/echarts/line/lineChart';\nimport BarChart from 'components/echarts/bar/barChart'; // import BarLineChart from 'components/echarts/barLine/barLineChart'\n\nimport PictorialBar from 'components/echarts/pictorialBar/pictorialBar';\nimport LiquidFillChart from 'components/echarts/liquidFill/liquidFillChart';\nimport VisualMapChart from 'components/echarts/map/visualMapChart';\nimport { insertSeparator } from 'utils/util'; // import {getData} from \"./data\"\n// import Map3D from '@/utils/map3d'\n// import mapJson from '@/assets/map/china.json'\n\nimport { getOverview as _getOverview, getDisposedType as _getDisposedType, // getReportTrend,\ngetFraudAppType as _getFraudAppType, // getAppMarketRank,\n// getDomainTrend,\ngetFraudWebsiteType as _getFraudWebsiteType, getWebsiteCountryRank as _getWebsiteCountryRank, getLiquidFillData as _getLiquidFillData, getMapData as _getMapData, getVisitedTrend as _getVisitedTrend, // getCountryFraud,\n// getProvinceFraud,\ngetWechatDiscoverTrend as _getWechatDiscoverTrend, getWebsiteDiscoverTrend as _getWebsiteDiscoverTrend, getAppDiscoverTrend as _getAppDiscoverTrend // getWechatDisposeTrend,\n// getWebsiteDisposeTrend,\n// getAppDisposeTrend\n} from 'api/home';\nexport default {\n  name: 'Home',\n  props: {},\n  components: {\n    ChartBox: ChartBox,\n    TotalBox: TotalBox,\n    // TotalBox1,\n    PieChart: PieChart,\n    LineChart: LineChart,\n    BarChart: BarChart,\n    // BarLineChart,\n    PictorialBar: PictorialBar,\n    LiquidFillChart: LiquidFillChart,\n    VisualMapChart: VisualMapChart\n  },\n  data: function data() {\n    return {\n      loading: false,\n      totalList: [],\n      // [\n      //   {\n      //     icon: \"iconweixin\",\n      //     label: \"涉诈微信QQ号总量\",\n      //     value: \"2,445\",\n      //     unit: \"\"\n      //   },\n      //   {\n      //     icon: \"iconshouji\",\n      //     label: \"涉诈APP总量\",\n      //     value: \"8,061\",\n      //     unit: \"\"\n      //   },\n      //   {\n      //     icon: \"iconyuming-mianxing\",\n      //     label: \"涉诈域名总量\",\n      //     value: \"990,324\",\n      //     unit: \"\"\n      //   },\n      //   {\n      //     icon: \"iconlianjie\",\n      //     label: \"涉诈URL总量\",\n      //     value: \"16,112,106\",\n      //     unit: \"\"\n      //   },\n      //   {\n      //     icon: \"iconduanxin\",\n      //     label: \"涉诈短信总量\",\n      //     value: \"175,012\",\n      //     unit: \"\"\n      //   }\n      // ],\n      mapData: {},\n      // mapData: [\n      // { name: '吉林', value: 3918914 },\n      // { name: '河南', value: 2116730 },\n      // { name: '福建', value: 1441649 },\n      // { name: '山东', value: 1306185 },\n      // { name: '黑龙江', value: 583138 },\n      // { name: '云南', value: 437471 },\n      // { name: '浙江', value: 296430 },\n      // { name: '海南', value: 229186 },\n      // { name: '天津', value: 176792 },\n      // { name: '湖南', value: 147714 },\n      // { name: '四川', value: 125580 },\n      // { name: '陕西', value: 96279 },\n      // { name: '江苏', value: 87925 },\n      // { name: '青海', value: 78136 },\n      // { name: '湖北', value: 53428 },\n      // { name: '广东', value: 39801 },\n      // { name: '上海', value: 37707 },\n      // { name: '甘肃', value: 32997 },\n      // { name: '重庆', value: 25595 },\n      // { name: '辽宁', value: 14971 },\n      // { name: '安徽', value: 14331 },\n      // { name: '江西', value: 8269 },\n      // { name: '山西', value: 7929 },\n      // { name: '贵州', value: 7426 },\n      // { name: '新疆', value: 6017 },\n      // { name: '北京', value: 2519 },\n      // { name: '河北', value: 2282 },\n      // { name: '广西', value: 1671 },\n      // { name: '西藏', value: 1260 },\n      // { name: '宁夏', value: 1190 },\n      // { name: '内蒙古', value: 500 }\n      // ],\n      disposedType: {},\n      // reportTrend: {},\n      fraudAppType: {},\n      // appMarketRank: {},\n      // domainTrend: {},\n      liquidFillData: {// name: '境外接入率',\n        // value: 0.6996\n      },\n      fraudWebsiteType: {// seriesData: [\n        //   {name: \"虚假信息诈骗\", value: 5878},\n        //   {name: \"刷单诈骗\", value: 4210},\n        //   {name: \"恶意木马诈骗\", value: 3062},\n        //   {name: \"代孕求子诈骗\", value: 1061},\n        //   {name: \"风险购物诈骗\", value: 411},\n        //   {name: \"保健品销售诈骗\", value: 151},\n        //   {name: \"高日化金融产品诈骗\", value: 109},\n        //   {name: \"植发医疗诈骗\", value: 85},\n        //   {name: \"高杠杆投资诈骗\", value: 84},\n        //   {name: \"高收益理财诈骗\", value: 53}\n        // ]\n      },\n      websiteCountryRank: {// seriesName: '涉诈网站境外接入国家排名',\n        // seriesData: [8439, 14498, 15951, 297648, 502618],\n        // categoryData: ['韩国', '南非', '菲律宾', '中国', '美国']\n      },\n      pieces: [{\n        min: 1000000000,\n        label: '>10亿次'\n      }, {\n        min: 500000000,\n        max: 999999999,\n        label: '5亿次 - 10亿次'\n      }, {\n        min: 100000000,\n        max: 499999999,\n        label: '1亿次 - 5亿次'\n      }, {\n        min: 10000000,\n        max: 99999999,\n        label: '1千万次 - 1亿次'\n      }, {\n        min: 0,\n        max: 9999999,\n        label: '<1千万次'\n      }],\n      visitedTrend: {},\n      // countryFraud: {},\n      // provinceFraud: {},\n      wechatDiscoverTrend: {},\n      websiteDiscoverTrend: {},\n      appDiscoverTrend: {} // wechatDisposeTrend: {},\n      // websiteDisposeTrend: {},\n      // appDisposeTrend: {}\n\n    };\n  },\n  computed: {},\n  created: function created() {},\n  mounted: function mounted() {\n    this.getMapData();\n    this.getOverview();\n    this.getDisposedType(); // this.getReportTrend()\n\n    this.getFraudAppType(); // this.getAppMarketRank()\n    // this.getDomainTrend()\n\n    this.getFraudWebsiteType();\n    this.getWechatDiscoverTrend();\n    this.getWebsiteDiscoverTrend();\n    this.getAppDiscoverTrend(); // this.getWechatDisposeTrend()\n    // this.getWebsiteDisposeTrend()\n    // this.getAppDisposeTrend()\n\n    this.getWebsiteCountryRank();\n    this.getLiquidFillData();\n    this.getVisitedTrend(); // this.getCountryFraud()\n    // this.getProvinceFraud()\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.loading = false;\n    this.map3d && this.map3d.destroy();\n  },\n  methods: {\n    getMapData: function () {\n      var _getMapData2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loading = true;\n                _context.next = 3;\n                return this.$simpleAsyncTo(_getMapData(), '获取疑似受害者全国分布失败');\n\n              case 3:\n                res = _context.sent;\n\n                if (res) {\n                  console.log(res, 'dt====');\n                  this.mapData = res.returnModel; // const data = await getData(this.mapData)\n                  // this.mapInit(data)\n                }\n\n                this.loading = false;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getMapData() {\n        return _getMapData2.apply(this, arguments);\n      }\n\n      return getMapData;\n    }(),\n    // async mapInit(data) {\n    //   const $map3d = this.$refs.map3d\n    //   if (!$map3d) await this.$sleep(30)\n    //   console.log(data, 'data')\n    //   const { map, nameMap, scatterData, flylinesData } = data //eslint-disable-line\n    //   const mapOptions = {\n    //     map,\n    //     nameMap,\n    //     font: '',\n    //     stats: false,\n    //     zoom: 34,\n    //     blending: false,\n    //     visibleSouthSea: true,\n    //     textStyle: {\n    //       normal: {\n    //         show: true,\n    //         fontSize: 18,\n    //         color: '#eee'\n    //       }\n    //     },\n    //     areaStyle: {\n    //       normal: {\n    //         color: '#6BC5F2',\n    //         opacity: 1\n    //       }\n    //     },\n    //     visualMap: {\n    //       show: true,\n    //       triggerOn: 'map',\n    //       type: 'piecewise',\n    //       text: ['', ''],\n    //       bottom: 0,\n    //       left: 10,\n    //       pieces: [\n    //         {\n    //           min: 1000000\n    //         },\n    //         {\n    //           min: 50000,\n    //           max: 999999\n    //         },\n    //         {\n    //           min: 10000,\n    //           max: 99999\n    //         },\n    //         {\n    //           min: 1000,\n    //           max: 9999\n    //         },\n    //         {\n    //           min: 0,\n    //           max: 999\n    //         }\n    //       ],\n    //       color: ['#cd0b11', '#ba2472', '#8f1fbd', '#5533b9', '#176cdd']\n    //     },\n    //     tooltip: {\n    //       formatter: param => {\n    //         return `<div>${param.data.name}</div>\n    //                 <div>被攻击次数：${param.data.value || 0}</div>`\n    //       }\n    //     }\n    //   }\n    //   console.time('destroy')\n    //   this.map3d && this.map3d.destroy()\n    //   console.timeEnd('destroy')\n    //   this.loading = true\n    //   console.log('this.map3d', this.map3d)\n    //   this.map3d = new Map3D($map3d, mapJson, mapOptions)\n    //   this.map3d.on('ready', _ => {\n    //     this.loading = false\n    //   })\n    // },\n    getOverview: function () {\n      var _getOverview2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$simpleAsyncTo(_getOverview(), '获取态势总览失败');\n\n              case 2:\n                res = _context2.sent;\n\n                if (res) {\n                  this.totalList = res.returnModel;\n                  this.totalList.forEach(function (item) {\n                    item.value = insertSeparator(item.value);\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getOverview() {\n        return _getOverview2.apply(this, arguments);\n      }\n\n      return getOverview;\n    }(),\n    getDisposedType: function () {\n      var _getDisposedType2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.$simpleAsyncTo(_getDisposedType(), '获取涉诈微信/QQ类型分布失败');\n\n              case 2:\n                res = _context3.sent;\n\n                if (res) {\n                  this.disposedType = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getDisposedType() {\n        return _getDisposedType2.apply(this, arguments);\n      }\n\n      return getDisposedType;\n    }(),\n    // async getReportTrend() {\n    //   const res = await this.$simpleAsyncTo(\n    //     getReportTrend(),\n    //     '获取涉诈微信QQ号举报量趋势失败'\n    //   )\n    //   if (res) {\n    //     this.reportTrend = res.returnModel\n    //   }\n    // },\n    getFraudAppType: function () {\n      var _getFraudAppType2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.$simpleAsyncTo(_getFraudAppType(), '获取涉诈APP类型分布失败');\n\n              case 2:\n                res = _context4.sent;\n\n                if (res) {\n                  this.fraudAppType = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getFraudAppType() {\n        return _getFraudAppType2.apply(this, arguments);\n      }\n\n      return getFraudAppType;\n    }(),\n    // async getAppMarketRank() {\n    //   const res = await this.$simpleAsyncTo(\n    //     getAppMarketRank(),\n    //     '获取应用商店涉诈APP总量排名失败'\n    //   )\n    //   if (res) {\n    //     this.appMarketRank = res.returnModel\n    //   }\n    // },\n    // async getDomainTrend() {\n    //   const res = await this.$simpleAsyncTo(\n    //     getDomainTrend(),\n    //     '获取涉诈域名总量趋势失败'\n    //   )\n    //   if (res) {\n    //     this.domainTrend = res.returnModel\n    //   }\n    // },\n    getFraudWebsiteType: function () {\n      var _getFraudWebsiteType2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.$simpleAsyncTo(_getFraudWebsiteType(), '获取涉诈网站类型分布失败');\n\n              case 2:\n                res = _context5.sent;\n\n                if (res) {\n                  this.fraudWebsiteType = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getFraudWebsiteType() {\n        return _getFraudWebsiteType2.apply(this, arguments);\n      }\n\n      return getFraudWebsiteType;\n    }(),\n    getWechatDiscoverTrend: function () {\n      var _getWechatDiscoverTrend2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.$simpleAsyncTo(_getWechatDiscoverTrend(), '获取涉诈微信QQ发现数量月趋势失败');\n\n              case 2:\n                res = _context6.sent;\n\n                if (res) {\n                  this.wechatDiscoverTrend = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getWechatDiscoverTrend() {\n        return _getWechatDiscoverTrend2.apply(this, arguments);\n      }\n\n      return getWechatDiscoverTrend;\n    }(),\n    getWebsiteDiscoverTrend: function () {\n      var _getWebsiteDiscoverTrend2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.$simpleAsyncTo(_getWebsiteDiscoverTrend(), '获取涉诈网站发现数量月趋势失败');\n\n              case 2:\n                res = _context7.sent;\n\n                if (res) {\n                  this.websiteDiscoverTrend = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getWebsiteDiscoverTrend() {\n        return _getWebsiteDiscoverTrend2.apply(this, arguments);\n      }\n\n      return getWebsiteDiscoverTrend;\n    }(),\n    getAppDiscoverTrend: function () {\n      var _getAppDiscoverTrend2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.$simpleAsyncTo(_getAppDiscoverTrend(), '获取涉诈APP发现数量月趋势失败');\n\n              case 2:\n                res = _context8.sent;\n\n                if (res) {\n                  this.appDiscoverTrend = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getAppDiscoverTrend() {\n        return _getAppDiscoverTrend2.apply(this, arguments);\n      }\n\n      return getAppDiscoverTrend;\n    }(),\n    // async getWechatDisposeTrend() {\n    //   const res = await this.$simpleAsyncTo(\n    //     getWechatDisposeTrend(),\n    //     '获取涉诈微信QQ处置量月趋势失败'\n    //   )\n    //   if (res) {\n    //     this.wechatDisposeTrend = res.returnModel\n    //   }\n    // },\n    // async getWebsiteDisposeTrend() {\n    //   const res = await this.$simpleAsyncTo(\n    //     getWebsiteDisposeTrend(),\n    //     '获取涉诈网站处置量月趋势失败'\n    //   )\n    //   if (res) {\n    //     this.websiteDisposeTrend = res.returnModel\n    //   }\n    // },\n    // async getAppDisposeTrend() {\n    //   const res = await this.$simpleAsyncTo(\n    //     getAppDisposeTrend(),\n    //     '获取涉诈APP处置量月趋势失败'\n    //   )\n    //   if (res) {\n    //     this.appDisposeTrend = res.returnModel\n    //   }\n    // },\n    getWebsiteCountryRank: function () {\n      var _getWebsiteCountryRank2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.$simpleAsyncTo(_getWebsiteCountryRank(), '获取涉诈网站境外接入国家排名失败');\n\n              case 2:\n                res = _context9.sent;\n\n                if (res) {\n                  this.websiteCountryRank = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getWebsiteCountryRank() {\n        return _getWebsiteCountryRank2.apply(this, arguments);\n      }\n\n      return getWebsiteCountryRank;\n    }(),\n    getLiquidFillData: function () {\n      var _getLiquidFillData2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.$simpleAsyncTo(_getLiquidFillData(), '获取涉诈网站境内外接入特征失败');\n\n              case 2:\n                res = _context10.sent;\n\n                if (res) {\n                  this.liquidFillData = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function getLiquidFillData() {\n        return _getLiquidFillData2.apply(this, arguments);\n      }\n\n      return getLiquidFillData;\n    }(),\n    getVisitedTrend: function () {\n      var _getVisitedTrend2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.$simpleAsyncTo(_getVisitedTrend(), '获取疑似受害者访问趋势失败');\n\n              case 2:\n                res = _context11.sent;\n\n                if (res) {\n                  this.visitedTrend = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function getVisitedTrend() {\n        return _getVisitedTrend2.apply(this, arguments);\n      }\n\n      return getVisitedTrend;\n    }() // async getCountryFraud() {\n    //   const res = await this.$simpleAsyncTo(\n    //     getCountryFraud(),\n    //     '获取国际诈骗防范态势失败'\n    //   )\n    //   if (res) {\n    //     this.countryFraud = res.returnModel\n    //   }\n    // },\n    // async getProvinceFraud() {\n    //   const res = await this.$simpleAsyncTo(\n    //     getProvinceFraud(),\n    //     '获取省际诈骗防范态势失败'\n    //   )\n    //   if (res) {\n    //     this.provinceFraud = res.returnModel\n    //   }\n    // }\n\n  }\n};",{"version":3,"sources":["D:\\工作项目\\部反诈\\src\\views\\home\\sameMixin.js"],"names":["ChartBox","TotalBox","PieChart","LineChart","BarChart","PictorialBar","LiquidFillChart","VisualMapChart","insertSeparator","getOverview","getDisposedType","getFraudAppType","getFraudWebsiteType","getWebsiteCountryRank","getLiquidFillData","getMapData","getVisitedTrend","getWechatDiscoverTrend","getWebsiteDiscoverTrend","getAppDiscoverTrend","name","props","components","data","loading","totalList","mapData","disposedType","fraudAppType","liquidFillData","fraudWebsiteType","websiteCountryRank","pieces","min","label","max","visitedTrend","wechatDiscoverTrend","websiteDiscoverTrend","appDiscoverTrend","computed","created","mounted","beforeDestroy","map3d","destroy","methods","$simpleAsyncTo","res","console","log","returnModel","forEach","item","value"],"mappings":"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","sourcesContent":["import ChartBox from 'components/chartBox'\r\nimport TotalBox from \"components/totalBox\"\r\n// import TotalBox1 from \"components/totalBox1\"\r\nimport PieChart from 'components/echarts/pie/pieChart'\r\nimport LineChart from 'components/echarts/line/lineChart'\r\nimport BarChart from 'components/echarts/bar/barChart'\r\n// import BarLineChart from 'components/echarts/barLine/barLineChart'\r\nimport PictorialBar from 'components/echarts/pictorialBar/pictorialBar'\r\nimport LiquidFillChart from 'components/echarts/liquidFill/liquidFillChart'\r\nimport VisualMapChart from 'components/echarts/map/visualMapChart'\r\nimport { insertSeparator } from 'utils/util'\r\n// import {getData} from \"./data\"\r\n// import Map3D from '@/utils/map3d'\r\n// import mapJson from '@/assets/map/china.json'\r\nimport {\r\n  getOverview,\r\n  getDisposedType,\r\n  // getReportTrend,\r\n  getFraudAppType,\r\n  // getAppMarketRank,\r\n  // getDomainTrend,\r\n  getFraudWebsiteType,\r\n  getWebsiteCountryRank,\r\n  getLiquidFillData,\r\n  getMapData,\r\n  getVisitedTrend,\r\n  // getCountryFraud,\r\n  // getProvinceFraud,\r\n  getWechatDiscoverTrend,\r\n  getWebsiteDiscoverTrend,\r\n  getAppDiscoverTrend\r\n  // getWechatDisposeTrend,\r\n  // getWebsiteDisposeTrend,\r\n  // getAppDisposeTrend\r\n} from 'api/home'\r\n\r\nexport default {\r\n  name: 'Home',\r\n  props: {},\r\n  components: {\r\n    ChartBox,\r\n    TotalBox,\r\n    // TotalBox1,\r\n    PieChart,\r\n    LineChart,\r\n    BarChart,\r\n    // BarLineChart,\r\n    PictorialBar,\r\n    LiquidFillChart,\r\n    VisualMapChart\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      totalList: [],\r\n      // [\r\n      //   {\r\n      //     icon: \"iconweixin\",\r\n      //     label: \"涉诈微信QQ号总量\",\r\n      //     value: \"2,445\",\r\n      //     unit: \"\"\r\n      //   },\r\n      //   {\r\n      //     icon: \"iconshouji\",\r\n      //     label: \"涉诈APP总量\",\r\n      //     value: \"8,061\",\r\n      //     unit: \"\"\r\n      //   },\r\n      //   {\r\n      //     icon: \"iconyuming-mianxing\",\r\n      //     label: \"涉诈域名总量\",\r\n      //     value: \"990,324\",\r\n      //     unit: \"\"\r\n      //   },\r\n      //   {\r\n      //     icon: \"iconlianjie\",\r\n      //     label: \"涉诈URL总量\",\r\n      //     value: \"16,112,106\",\r\n      //     unit: \"\"\r\n      //   },\r\n      //   {\r\n      //     icon: \"iconduanxin\",\r\n      //     label: \"涉诈短信总量\",\r\n      //     value: \"175,012\",\r\n      //     unit: \"\"\r\n      //   }\r\n      // ],\r\n      mapData: {},\r\n      // mapData: [\r\n      // { name: '吉林', value: 3918914 },\r\n      // { name: '河南', value: 2116730 },\r\n      // { name: '福建', value: 1441649 },\r\n      // { name: '山东', value: 1306185 },\r\n      // { name: '黑龙江', value: 583138 },\r\n      // { name: '云南', value: 437471 },\r\n      // { name: '浙江', value: 296430 },\r\n      // { name: '海南', value: 229186 },\r\n      // { name: '天津', value: 176792 },\r\n      // { name: '湖南', value: 147714 },\r\n      // { name: '四川', value: 125580 },\r\n      // { name: '陕西', value: 96279 },\r\n      // { name: '江苏', value: 87925 },\r\n      // { name: '青海', value: 78136 },\r\n      // { name: '湖北', value: 53428 },\r\n      // { name: '广东', value: 39801 },\r\n      // { name: '上海', value: 37707 },\r\n      // { name: '甘肃', value: 32997 },\r\n      // { name: '重庆', value: 25595 },\r\n      // { name: '辽宁', value: 14971 },\r\n      // { name: '安徽', value: 14331 },\r\n      // { name: '江西', value: 8269 },\r\n      // { name: '山西', value: 7929 },\r\n      // { name: '贵州', value: 7426 },\r\n      // { name: '新疆', value: 6017 },\r\n      // { name: '北京', value: 2519 },\r\n      // { name: '河北', value: 2282 },\r\n      // { name: '广西', value: 1671 },\r\n      // { name: '西藏', value: 1260 },\r\n      // { name: '宁夏', value: 1190 },\r\n      // { name: '内蒙古', value: 500 }\r\n      // ],\r\n      disposedType: {},\r\n      // reportTrend: {},\r\n      fraudAppType: {},\r\n      // appMarketRank: {},\r\n      // domainTrend: {},\r\n      liquidFillData: {\r\n        // name: '境外接入率',\r\n        // value: 0.6996\r\n      },\r\n      fraudWebsiteType: {\r\n        // seriesData: [\r\n        //   {name: \"虚假信息诈骗\", value: 5878},\r\n        //   {name: \"刷单诈骗\", value: 4210},\r\n        //   {name: \"恶意木马诈骗\", value: 3062},\r\n        //   {name: \"代孕求子诈骗\", value: 1061},\r\n        //   {name: \"风险购物诈骗\", value: 411},\r\n        //   {name: \"保健品销售诈骗\", value: 151},\r\n        //   {name: \"高日化金融产品诈骗\", value: 109},\r\n        //   {name: \"植发医疗诈骗\", value: 85},\r\n        //   {name: \"高杠杆投资诈骗\", value: 84},\r\n        //   {name: \"高收益理财诈骗\", value: 53}\r\n        // ]\r\n      },\r\n      websiteCountryRank: {\r\n        // seriesName: '涉诈网站境外接入国家排名',\r\n        // seriesData: [8439, 14498, 15951, 297648, 502618],\r\n        // categoryData: ['韩国', '南非', '菲律宾', '中国', '美国']\r\n      },\r\n      pieces: [\r\n        {\r\n          min: 1000000000,\r\n          label: '>10亿次'\r\n        },\r\n        {\r\n          min: 500000000,\r\n          max: 999999999,\r\n          label: '5亿次 - 10亿次'\r\n        },\r\n        {\r\n          min: 100000000,\r\n          max: 499999999,\r\n          label: '1亿次 - 5亿次'\r\n        },\r\n        {\r\n          min: 10000000,\r\n          max: 99999999,\r\n          label: '1千万次 - 1亿次'\r\n        },\r\n        {\r\n          min: 0,\r\n          max: 9999999,\r\n          label: '<1千万次'\r\n        }\r\n      ],\r\n      visitedTrend: {},\r\n      // countryFraud: {},\r\n      // provinceFraud: {},\r\n      wechatDiscoverTrend: {},\r\n      websiteDiscoverTrend: {},\r\n      appDiscoverTrend: {}\r\n      // wechatDisposeTrend: {},\r\n      // websiteDisposeTrend: {},\r\n      // appDisposeTrend: {}\r\n    }\r\n  },\r\n  computed: {},\r\n  created() {},\r\n  mounted() {\r\n    this.getMapData()\r\n    this.getOverview()\r\n    this.getDisposedType()\r\n    // this.getReportTrend()\r\n    this.getFraudAppType()\r\n    // this.getAppMarketRank()\r\n    // this.getDomainTrend()\r\n    this.getFraudWebsiteType()\r\n    this.getWechatDiscoverTrend()\r\n    this.getWebsiteDiscoverTrend()\r\n    this.getAppDiscoverTrend()\r\n    // this.getWechatDisposeTrend()\r\n    // this.getWebsiteDisposeTrend()\r\n    // this.getAppDisposeTrend()\r\n    this.getWebsiteCountryRank()\r\n    this.getLiquidFillData()\r\n    this.getVisitedTrend()\r\n    // this.getCountryFraud()\r\n    // this.getProvinceFraud()\r\n  },\r\n  beforeDestroy() {\r\n    this.loading = false\r\n    this.map3d && this.map3d.destroy()\r\n  },\r\n  methods: {\r\n    async getMapData() {\r\n      this.loading = true\r\n      const res = await this.$simpleAsyncTo(\r\n        getMapData(),\r\n        '获取疑似受害者全国分布失败'\r\n      )\r\n      if (res) {\r\n        console.log(res, 'dt====')\r\n        this.mapData = res.returnModel\r\n        // const data = await getData(this.mapData)\r\n        // this.mapInit(data)\r\n      }\r\n      this.loading = false\r\n    },\r\n    // async mapInit(data) {\r\n    //   const $map3d = this.$refs.map3d\r\n    //   if (!$map3d) await this.$sleep(30)\r\n    //   console.log(data, 'data')\r\n    //   const { map, nameMap, scatterData, flylinesData } = data //eslint-disable-line\r\n    //   const mapOptions = {\r\n    //     map,\r\n    //     nameMap,\r\n    //     font: '',\r\n    //     stats: false,\r\n    //     zoom: 34,\r\n    //     blending: false,\r\n    //     visibleSouthSea: true,\r\n    //     textStyle: {\r\n    //       normal: {\r\n    //         show: true,\r\n    //         fontSize: 18,\r\n    //         color: '#eee'\r\n    //       }\r\n    //     },\r\n    //     areaStyle: {\r\n    //       normal: {\r\n    //         color: '#6BC5F2',\r\n    //         opacity: 1\r\n    //       }\r\n    //     },\r\n    //     visualMap: {\r\n    //       show: true,\r\n    //       triggerOn: 'map',\r\n    //       type: 'piecewise',\r\n    //       text: ['', ''],\r\n    //       bottom: 0,\r\n    //       left: 10,\r\n    //       pieces: [\r\n    //         {\r\n    //           min: 1000000\r\n    //         },\r\n    //         {\r\n    //           min: 50000,\r\n    //           max: 999999\r\n    //         },\r\n    //         {\r\n    //           min: 10000,\r\n    //           max: 99999\r\n    //         },\r\n    //         {\r\n    //           min: 1000,\r\n    //           max: 9999\r\n    //         },\r\n    //         {\r\n    //           min: 0,\r\n    //           max: 999\r\n    //         }\r\n    //       ],\r\n    //       color: ['#cd0b11', '#ba2472', '#8f1fbd', '#5533b9', '#176cdd']\r\n    //     },\r\n    //     tooltip: {\r\n    //       formatter: param => {\r\n    //         return `<div>${param.data.name}</div>\r\n    //                 <div>被攻击次数：${param.data.value || 0}</div>`\r\n    //       }\r\n    //     }\r\n    //   }\r\n    //   console.time('destroy')\r\n    //   this.map3d && this.map3d.destroy()\r\n\r\n    //   console.timeEnd('destroy')\r\n    //   this.loading = true\r\n    //   console.log('this.map3d', this.map3d)\r\n    //   this.map3d = new Map3D($map3d, mapJson, mapOptions)\r\n    //   this.map3d.on('ready', _ => {\r\n    //     this.loading = false\r\n    //   })\r\n    // },\r\n    async getOverview() {\r\n      const res = await this.$simpleAsyncTo(getOverview(), '获取态势总览失败')\r\n      if (res) {\r\n        this.totalList = res.returnModel\r\n        this.totalList.forEach(item => {\r\n          item.value = insertSeparator(item.value)\r\n        })\r\n      }\r\n    },\r\n    async getDisposedType() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getDisposedType(),\r\n        '获取涉诈微信/QQ类型分布失败'\r\n      )\r\n      if (res) {\r\n        this.disposedType = res.returnModel\r\n      }\r\n    },\r\n    // async getReportTrend() {\r\n    //   const res = await this.$simpleAsyncTo(\r\n    //     getReportTrend(),\r\n    //     '获取涉诈微信QQ号举报量趋势失败'\r\n    //   )\r\n    //   if (res) {\r\n    //     this.reportTrend = res.returnModel\r\n    //   }\r\n    // },\r\n    async getFraudAppType() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudAppType(),\r\n        '获取涉诈APP类型分布失败'\r\n      )\r\n      if (res) {\r\n        this.fraudAppType = res.returnModel\r\n      }\r\n    },\r\n    // async getAppMarketRank() {\r\n    //   const res = await this.$simpleAsyncTo(\r\n    //     getAppMarketRank(),\r\n    //     '获取应用商店涉诈APP总量排名失败'\r\n    //   )\r\n    //   if (res) {\r\n    //     this.appMarketRank = res.returnModel\r\n    //   }\r\n    // },\r\n    // async getDomainTrend() {\r\n    //   const res = await this.$simpleAsyncTo(\r\n    //     getDomainTrend(),\r\n    //     '获取涉诈域名总量趋势失败'\r\n    //   )\r\n    //   if (res) {\r\n    //     this.domainTrend = res.returnModel\r\n    //   }\r\n    // },\r\n    async getFraudWebsiteType() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudWebsiteType(),\r\n        '获取涉诈网站类型分布失败'\r\n      )\r\n      if (res) {\r\n        this.fraudWebsiteType = res.returnModel\r\n      }\r\n    },\r\n    async getWechatDiscoverTrend() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getWechatDiscoverTrend(),\r\n        '获取涉诈微信QQ发现数量月趋势失败'\r\n      )\r\n      if (res) {\r\n        this.wechatDiscoverTrend = res.returnModel\r\n      }\r\n    },\r\n    async getWebsiteDiscoverTrend() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getWebsiteDiscoverTrend(),\r\n        '获取涉诈网站发现数量月趋势失败'\r\n      )\r\n      if (res) {\r\n        this.websiteDiscoverTrend = res.returnModel\r\n      }\r\n    },\r\n    async getAppDiscoverTrend() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getAppDiscoverTrend(),\r\n        '获取涉诈APP发现数量月趋势失败'\r\n      )\r\n      if (res) {\r\n        this.appDiscoverTrend = res.returnModel\r\n      }\r\n    },\r\n    // async getWechatDisposeTrend() {\r\n    //   const res = await this.$simpleAsyncTo(\r\n    //     getWechatDisposeTrend(),\r\n    //     '获取涉诈微信QQ处置量月趋势失败'\r\n    //   )\r\n    //   if (res) {\r\n    //     this.wechatDisposeTrend = res.returnModel\r\n    //   }\r\n    // },\r\n    // async getWebsiteDisposeTrend() {\r\n    //   const res = await this.$simpleAsyncTo(\r\n    //     getWebsiteDisposeTrend(),\r\n    //     '获取涉诈网站处置量月趋势失败'\r\n    //   )\r\n    //   if (res) {\r\n    //     this.websiteDisposeTrend = res.returnModel\r\n    //   }\r\n    // },\r\n    // async getAppDisposeTrend() {\r\n    //   const res = await this.$simpleAsyncTo(\r\n    //     getAppDisposeTrend(),\r\n    //     '获取涉诈APP处置量月趋势失败'\r\n    //   )\r\n    //   if (res) {\r\n    //     this.appDisposeTrend = res.returnModel\r\n    //   }\r\n    // },\r\n    async getWebsiteCountryRank() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getWebsiteCountryRank(),\r\n        '获取涉诈网站境外接入国家排名失败'\r\n      )\r\n      if (res) {\r\n        this.websiteCountryRank = res.returnModel\r\n      }\r\n    },\r\n    async getLiquidFillData() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getLiquidFillData(),\r\n        '获取涉诈网站境内外接入特征失败'\r\n      )\r\n      if (res) {\r\n        this.liquidFillData = res.returnModel\r\n      }\r\n    },\r\n    async getVisitedTrend() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getVisitedTrend(),\r\n        '获取疑似受害者访问趋势失败'\r\n      )\r\n      if (res) {\r\n        this.visitedTrend = res.returnModel\r\n      }\r\n    }\r\n    // async getCountryFraud() {\r\n    //   const res = await this.$simpleAsyncTo(\r\n    //     getCountryFraud(),\r\n    //     '获取国际诈骗防范态势失败'\r\n    //   )\r\n    //   if (res) {\r\n    //     this.countryFraud = res.returnModel\r\n    //   }\r\n    // },\r\n    // async getProvinceFraud() {\r\n    //   const res = await this.$simpleAsyncTo(\r\n    //     getProvinceFraud(),\r\n    //     '获取省际诈骗防范态势失败'\r\n    //   )\r\n    //   if (res) {\r\n    //     this.provinceFraud = res.returnModel\r\n    //   }\r\n    // }\r\n  }\r\n}"]}]}