{"remainingRequest":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js!D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\工作项目\\部反诈\\src\\utils\\map3d\\tool\\canvas.js","dependencies":[{"path":"D:\\工作项目\\部反诈\\src\\utils\\map3d\\tool\\canvas.js","mtime":1598758375268},{"path":"D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _Array$from from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/array/from\";\nimport \"core-js/modules/web.dom.iterable\";\nexport function createCanvas(width, height, background) {\n  var canvas = document.createElement('canvas'),\n      context = canvas.getContext('2d');\n  canvas.width = width;\n  canvas.height = height;\n  context.fillStyle = background || 'rgba(255, 255, 255, 0)';\n  context.fillRect(0, 0, width, height);\n  return {\n    context: context,\n    canvas: canvas\n  };\n}\nexport function drawText(ctx) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$text = options.text,\n      text = _options$text === void 0 ? '' : _options$text,\n      _options$fontSize = options.fontSize,\n      fontSize = _options$fontSize === void 0 ? 12 : _options$fontSize,\n      _options$fontFamily = options.fontFamily,\n      fontFamily = _options$fontFamily === void 0 ? 'sans-serif' : _options$fontFamily,\n      _options$fontStyle = options.fontStyle,\n      fontStyle = _options$fontStyle === void 0 ? 'normal' : _options$fontStyle,\n      _options$fontWeight = options.fontWeight,\n      fontWeight = _options$fontWeight === void 0 ? 'normal' : _options$fontWeight,\n      _options$color = options.color,\n      color = _options$color === void 0 ? '#ffffff' : _options$color,\n      _options$x = options.x,\n      x = _options$x === void 0 ? 0 : _options$x,\n      _options$y = options.y,\n      y = _options$y === void 0 ? 0 : _options$y,\n      _options$textAlign = options.textAlign,\n      textAlign = _options$textAlign === void 0 ? 'center' : _options$textAlign,\n      _options$textBaseline = options.textBaseline,\n      textBaseline = _options$textBaseline === void 0 ? 'middle' : _options$textBaseline,\n      _options$type = options.type,\n      type = _options$type === void 0 ? 'fill' : _options$type,\n      _options$detect = options.detect,\n      detect = _options$detect === void 0 ? null : _options$detect,\n      maxWidth = options.maxWidth;\n  ctx.save();\n  ctx.font = \"\".concat(fontSize, \"px \").concat(fontFamily, \" \").concat(fontWeight, \" \").concat(fontStyle);\n  ctx.textAlign = textAlign;\n  ctx.textBaseline = textBaseline;\n\n  if (detect) {\n    detect && detect(options);\n  } else {\n    ctx[type + 'Style'] = color;\n    ctx[type + 'Text'](text, x, y, maxWidth || ctx.canvas.width);\n  }\n\n  ctx.restore();\n} // 获取文字的宽度\n\nexport function getTextWidth(ctx, text) {\n  var textStyle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof ctx === 'string') {\n    var canvas = document.createElement('canvas');\n    textStyle = text;\n    text = ctx;\n    ctx = canvas.getContext('2d');\n  }\n\n  var _textStyle = textStyle,\n      _textStyle$fontFamily = _textStyle.fontFamily,\n      fontFamily = _textStyle$fontFamily === void 0 ? '宋体' : _textStyle$fontFamily,\n      _textStyle$fontSize = _textStyle.fontSize,\n      fontSize = _textStyle$fontSize === void 0 ? 12 : _textStyle$fontSize,\n      _textStyle$fontStyle = _textStyle.fontStyle,\n      fontStyle = _textStyle$fontStyle === void 0 ? 'normal' : _textStyle$fontStyle,\n      _textStyle$fontWeight = _textStyle.fontWeight,\n      fontWeight = _textStyle$fontWeight === void 0 ? 'normal' : _textStyle$fontWeight;\n  ctx.font = \"\".concat(fontSize, \"px \").concat(fontWeight, \" \").concat(fontStyle, \" \").concat(fontFamily);\n  return ctx.measureText(text).width;\n}\n/**\n * 根据给定的一组颜色，生成一组指定数量的渐变色\n * @param {Array<String>} colors 给定颜色的数组\n * @param {Number} count 要生成多少种颜色\n * @param {Object} ctx CanvasRenderingContext2D\n * @return {Array} 一组渐变色\n */\n\nexport function genColors(colors, count, ctx) {\n  if (colors.length > count) return colors;\n  var isNew = !ctx;\n\n  if (isNew) {\n    var canvas = document.createElement('canvas');\n    ctx = canvas.getContext('2d');\n    canvas.width = 1;\n    canvas.height = count;\n    document.body.appendChild(canvas);\n  }\n\n  var gradient = ctx.createLinearGradient(0, 0, 0, count),\n      len = colors.length - 1;\n  colors.forEach(function (color, i) {\n    gradient.addColorStop(i / len, color);\n  });\n  var x = 0,\n      y = 0;\n  ctx.fillStyle = gradient;\n  ctx.fillRect(0, 0, 1, count);\n  colors = _Array$from({\n    length: count\n  }, function (n, i) {\n    return getPixelColor(ctx, x, y + i);\n  });\n  isNew ? document.body.removeChild(ctx.canvas) : ctx.clearRect(x, y, 1, count);\n  return colors;\n}\n/**\n * 在canvas指定位置上获取画布的颜色\n */\n\nexport function getPixelColor(ctx, x, y) {\n  var imageData = ctx.getImageData(x, y, 1, 1);\n  var strHex = '#';\n\n  for (var i = 0; i < 3; i++) {\n    var hex = Number(imageData.data[i]).toString(16);\n\n    if (hex.length === 1) {\n      hex = \"0\".concat(hex);\n    }\n\n    strHex += hex;\n  }\n\n  return strHex;\n}",{"version":3,"sources":["D:\\工作项目\\部反诈\\src\\utils\\map3d\\tool\\canvas.js"],"names":["createCanvas","width","height","background","canvas","document","createElement","context","getContext","fillStyle","fillRect","drawText","ctx","options","text","fontSize","fontFamily","fontStyle","fontWeight","color","x","y","textAlign","textBaseline","type","detect","maxWidth","save","font","restore","getTextWidth","textStyle","measureText","genColors","colors","count","length","isNew","body","appendChild","gradient","createLinearGradient","len","forEach","i","addColorStop","n","getPixelColor","removeChild","clearRect","imageData","getImageData","strHex","hex","Number","data","toString"],"mappings":"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","sourcesContent":["export function createCanvas(width, height, background) {\n  const canvas = document.createElement('canvas'),\n    context = canvas.getContext('2d')\n  canvas.width = width\n  canvas.height = height\n  context.fillStyle = background || 'rgba(255, 255, 255, 0)'\n  context.fillRect(0, 0, width, height)\n  return {\n    context,\n    canvas\n  }\n}\n\nexport function drawText(ctx, options = {}) {\n  const {\n    text = '',\n    fontSize = 12,\n    // sans-serif Arial 微软雅黑 宋体\n    fontFamily = 'sans-serif',\n    fontStyle = 'normal',\n    fontWeight = 'normal',\n    color = '#ffffff',\n    x = 0,\n    y = 0,\n    textAlign = 'center',\n    textBaseline = 'middle',\n    type = 'fill',\n    // function,鼠标事件回调\n    detect = null,\n    maxWidth\n  } = options\n  ctx.save()\n  ctx.font = `${fontSize}px ${fontFamily} ${fontWeight} ${fontStyle}`\n  ctx.textAlign = textAlign\n  ctx.textBaseline = textBaseline\n  if (detect) {\n    detect && detect(options)\n  } else {\n    ctx[type + 'Style'] = color\n    ctx[type + 'Text'](text, x, y, maxWidth || ctx.canvas.width)\n  }\n  ctx.restore()\n}\n\n// 获取文字的宽度\nexport function getTextWidth(ctx, text, textStyle = {}) {\n  if (typeof ctx === 'string') {\n    const canvas = document.createElement('canvas')\n    textStyle = text\n    text = ctx\n    ctx = canvas.getContext('2d')\n  }\n  const {\n    fontFamily = '宋体',\n    fontSize = 12,\n    fontStyle = 'normal',\n    fontWeight = 'normal'\n  } = textStyle\n  ctx.font = `${fontSize}px ${fontWeight} ${fontStyle} ${fontFamily}`\n  return ctx.measureText(text).width\n}\n\n/**\n * 根据给定的一组颜色，生成一组指定数量的渐变色\n * @param {Array<String>} colors 给定颜色的数组\n * @param {Number} count 要生成多少种颜色\n * @param {Object} ctx CanvasRenderingContext2D\n * @return {Array} 一组渐变色\n */\nexport function genColors(colors, count, ctx) {\n  if (colors.length > count) return colors\n  const isNew = !ctx\n  if (isNew) {\n    const canvas = document.createElement('canvas')\n    ctx = canvas.getContext('2d')\n    canvas.width = 1\n    canvas.height = count\n    document.body.appendChild(canvas)\n  }\n  const gradient = ctx.createLinearGradient(0, 0, 0, count),\n    len = colors.length - 1\n  colors.forEach((color, i) => {\n    gradient.addColorStop(i / len, color)\n  })\n\n  const x = 0,\n    y = 0\n  ctx.fillStyle = gradient\n  ctx.fillRect(0, 0, 1, count)\n\n  colors = Array.from({ length: count }, (n, i) => getPixelColor(ctx, x, y + i))\n\n  isNew ? document.body.removeChild(ctx.canvas) : ctx.clearRect(x, y, 1, count)\n\n  return colors\n}\n\n/**\n * 在canvas指定位置上获取画布的颜色\n */\nexport function getPixelColor(ctx, x, y) {\n  const imageData = ctx.getImageData(x, y, 1, 1)\n  let strHex = '#'\n  for (let i = 0; i < 3; i++) {\n    let hex = Number(imageData.data[i]).toString(16)\n    if (hex.length === 1) {\n      hex = `0${hex}`\n    }\n    strHex += hex\n  }\n  return strHex\n}\n"]}]}