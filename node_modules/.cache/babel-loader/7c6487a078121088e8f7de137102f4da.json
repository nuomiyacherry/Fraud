{"remainingRequest":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js!D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\工作项目\\部反诈\\src\\utils\\map3d\\core\\mixin.js","dependencies":[{"path":"D:\\工作项目\\部反诈\\src\\utils\\map3d\\core\\mixin.js","mtime":1598758375243},{"path":"D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/inherits\";\nimport EventEmitter from '../libs/event-emitter';\nimport { setStyles } from '../libs/dom';\nimport { createCanvas } from '../tool/canvas';\n\nvar Mixin =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Mixin, _EventEmitter);\n\n  function Mixin(el, options) {\n    var _this;\n\n    _classCallCheck(this, Mixin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mixin).call(this));\n    _this.el = el;\n\n    if (options.context) {\n      _this.ctx = options.context;\n      _this.canvas = options.canvas;\n      var canvas = options.canvas || options.context.canvas;\n      _this.size = {\n        width: canvas.width,\n        height: canvas.height\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(Mixin, [{\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"repaint\",\n    value: function repaint(event) {\n      var _this$el$getBoundingC = this.el.getBoundingClientRect(),\n          left = _this$el$getBoundingC.left,\n          top = _this$el$getBoundingC.top;\n\n      this.mouse = {\n        x: event.clientX - left,\n        y: event.clientY - top,\n        event: event\n      };\n      this.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {}\n  }, {\n    key: \"isDetect\",\n    value: function isDetect() {\n      return this.mouse && this.ctx.isPointInPath(this.mouse.x, this.mouse.y);\n    }\n  }, {\n    key: \"setLayout\",\n    value: function setLayout() {}\n  }, {\n    key: \"setSize\",\n    value: function setSize() {\n      var _this$el = this.el,\n          offsetWidth = _this$el.offsetWidth,\n          offsetHeight = _this$el.offsetHeight;\n      this.size = {\n        width: offsetWidth,\n        height: offsetHeight\n      };\n\n      if (this.canvas) {\n        this.canvas.width = offsetWidth;\n        this.canvas.height = offsetHeight;\n      }\n    }\n  }, {\n    key: \"initCanvas\",\n    value: function initCanvas() {\n      var _createCanvas = createCanvas(this.size.width, this.size.height),\n          context = _createCanvas.context,\n          canvas = _createCanvas.canvas;\n\n      this.ctx = context;\n      this.canvas = canvas;\n      this.el.appendChild(canvas);\n      setStyles(this.canvas, {\n        position: 'absolute',\n        zIndex: 0,\n        left: 0,\n        top: 0\n      });\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      !this.options.context && this.setSize();\n      this.setLayout();\n      this.render();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {}\n  }]);\n\n  return Mixin;\n}(EventEmitter);\n\nexport { Mixin as default };",{"version":3,"sources":["D:\\工作项目\\部反诈\\src\\utils\\map3d\\core\\mixin.js"],"names":["EventEmitter","setStyles","createCanvas","Mixin","el","options","context","ctx","canvas","size","width","height","event","getBoundingClientRect","left","top","mouse","x","clientX","y","clientY","render","isPointInPath","offsetWidth","offsetHeight","appendChild","position","zIndex","setSize","setLayout"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;;IAEqBC,K;;;;;AACnB,iBAAYC,EAAZ,EAAgBC,OAAhB,EAAyB;AAAA;;AAAA;;AACvB;AACA,UAAKD,EAAL,GAAUA,EAAV;;AACA,QAAIC,OAAO,CAACC,OAAZ,EAAqB;AACnB,YAAKC,GAAL,GAAWF,OAAO,CAACC,OAAnB;AACA,YAAKE,MAAL,GAAcH,OAAO,CAACG,MAAtB;AACA,UAAMA,MAAM,GAAGH,OAAO,CAACG,MAAR,IAAkBH,OAAO,CAACC,OAAR,CAAgBE,MAAjD;AACA,YAAKC,IAAL,GAAY;AACVC,QAAAA,KAAK,EAAEF,MAAM,CAACE,KADJ;AAEVC,QAAAA,MAAM,EAAEH,MAAM,CAACG;AAFL,OAAZ;AAID;;AAXsB;AAYxB;;;;2BAEM,CAAE;;;4BAEDC,K,EAAO;AAAA,kCACO,KAAKR,EAAL,CAAQS,qBAAR,EADP;AAAA,UACNC,IADM,yBACNA,IADM;AAAA,UACAC,GADA,yBACAA,GADA;;AAEb,WAAKC,KAAL,GAAa;AACXC,QAAAA,CAAC,EAAEL,KAAK,CAACM,OAAN,GAAgBJ,IADR;AAEXK,QAAAA,CAAC,EAAEP,KAAK,CAACQ,OAAN,GAAgBL,GAFR;AAGXH,QAAAA,KAAK,EAALA;AAHW,OAAb;AAKA,WAAKS,MAAL;AACD;;;6BAEQ,CAAE;;;+BAEA;AACT,aAAO,KAAKL,KAAL,IAAc,KAAKT,GAAL,CAASe,aAAT,CAAuB,KAAKN,KAAL,CAAWC,CAAlC,EAAqC,KAAKD,KAAL,CAAWG,CAAhD,CAArB;AACD;;;gCAEW,CAAE;;;8BAEJ;AAAA,qBAC4B,KAAKf,EADjC;AAAA,UACDmB,WADC,YACDA,WADC;AAAA,UACYC,YADZ,YACYA,YADZ;AAER,WAAKf,IAAL,GAAY;AACVC,QAAAA,KAAK,EAAEa,WADG;AAEVZ,QAAAA,MAAM,EAAEa;AAFE,OAAZ;;AAIA,UAAI,KAAKhB,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYE,KAAZ,GAAoBa,WAApB;AACA,aAAKf,MAAL,CAAYG,MAAZ,GAAqBa,YAArB;AACD;AACF;;;iCAEY;AAAA,0BACetB,YAAY,CAAC,KAAKO,IAAL,CAAUC,KAAX,EAAkB,KAAKD,IAAL,CAAUE,MAA5B,CAD3B;AAAA,UACJL,OADI,iBACJA,OADI;AAAA,UACKE,MADL,iBACKA,MADL;;AAEX,WAAKD,GAAL,GAAWD,OAAX;AACA,WAAKE,MAAL,GAAcA,MAAd;AACA,WAAKJ,EAAL,CAAQqB,WAAR,CAAoBjB,MAApB;AACAP,MAAAA,SAAS,CAAC,KAAKO,MAAN,EAAc;AACrBkB,QAAAA,QAAQ,EAAE,UADW;AAErBC,QAAAA,MAAM,EAAE,CAFa;AAGrBb,QAAAA,IAAI,EAAE,CAHe;AAIrBC,QAAAA,GAAG,EAAE;AAJgB,OAAd,CAAT;AAMD;;;6BAEQ;AACP,OAAC,KAAKV,OAAL,CAAaC,OAAd,IAAyB,KAAKsB,OAAL,EAAzB;AACA,WAAKC,SAAL;AACA,WAAKR,MAAL;AACD;;;8BAES,CAAE;;;;EAlEqBrB,Y;;SAAdG,K","sourcesContent":["import EventEmitter from '../libs/event-emitter'\nimport {setStyles} from '../libs/dom'\nimport {createCanvas} from '../tool/canvas'\n\nexport default class Mixin extends EventEmitter {\n  constructor(el, options) {\n    super()\n    this.el = el\n    if (options.context) {\n      this.ctx = options.context\n      this.canvas = options.canvas\n      const canvas = options.canvas || options.context.canvas\n      this.size = {\n        width: canvas.width,\n        height: canvas.height\n      }\n    }\n  }\n\n  init() {}\n\n  repaint(event) {\n    const {left, top} = this.el.getBoundingClientRect()\n    this.mouse = {\n      x: event.clientX - left,\n      y: event.clientY - top,\n      event\n    }\n    this.render()\n  }\n\n  render() {}\n\n  isDetect() {\n    return this.mouse && this.ctx.isPointInPath(this.mouse.x, this.mouse.y)\n  }\n\n  setLayout() {}\n\n  setSize() {\n    const {offsetWidth, offsetHeight} = this.el\n    this.size = {\n      width: offsetWidth,\n      height: offsetHeight\n    }\n    if (this.canvas) {\n      this.canvas.width = offsetWidth\n      this.canvas.height = offsetHeight\n    }\n  }\n\n  initCanvas() {\n    const {context, canvas} = createCanvas(this.size.width, this.size.height)\n    this.ctx = context\n    this.canvas = canvas\n    this.el.appendChild(canvas)\n    setStyles(this.canvas, {\n      position: 'absolute',\n      zIndex: 0,\n      left: 0,\n      top: 0\n    })\n  }\n\n  resize() {\n    !this.options.context && this.setSize()\n    this.setLayout()\n    this.render()\n  }\n\n  destroy() {}\n}\n"]}]}