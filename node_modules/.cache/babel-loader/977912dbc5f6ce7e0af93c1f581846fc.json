{"remainingRequest":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js!D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\工作项目\\部反诈\\src\\constants\\chartConfig.js","dependencies":[{"path":"D:\\工作项目\\部反诈\\src\\constants\\chartConfig.js","mtime":1598758387007},{"path":"D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n// 正规的坐标轴的配置\nexport var AxisOpt = function AxisOpt(chartColors, rotate, flag, legendShow) {\n  var axisType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'value';\n  var markPoint = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var hasTimeAxis = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n  // markPoint = markPoint || false\n  // axisType = axisType || 'value'\n  var xAxisType = '';\n  var yAxisType = '';\n  var gridTop = '';\n  var gridBottom = 0;\n\n  if (flag) {\n    xAxisType = axisType;\n    yAxisType = 'category';\n  } else {\n    xAxisType = 'category';\n    yAxisType = axisType;\n  }\n\n  markPoint ? gridTop = 45 : legendShow ? gridTop = 30 : gridTop = 10;\n  hasTimeAxis ? gridBottom = 30 : gridBottom = 5;\n  return {\n    grid: {\n      top: gridTop,\n      left: 10,\n      right: 20,\n      bottom: gridBottom,\n      containLabel: true\n    },\n    yAxis: {\n      type: yAxisType,\n      splitLine: {\n        show: false,\n        lineStyle: {\n          width: 1,\n          type: 'solid',\n          color: chartColors.axisSplitLine\n        }\n      },\n      axisLabel: {\n        show: true,\n        textStyle: {\n          color: chartColors.axisLabel\n        }\n      },\n      axisTick: {\n        show: true\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          color: chartColors.axisLine\n        },\n        symbol: ['none', 'arrow']\n      }\n    },\n    xAxis: {\n      type: xAxisType,\n      splitLine: {\n        show: false\n      },\n      axisTick: {\n        show: true\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          color: chartColors.axisLine\n        },\n        symbol: ['none', 'arrow']\n      },\n      axisLabel: {\n        show: true,\n        color: chartColors.axisLabel,\n        rotate: rotate\n      }\n    }\n  };\n}; // 网格坐标轴的配置\n\nexport var gridAxisOpt = function gridAxisOpt(chartColors, rotate, flag, legendShow) {\n  var axisType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'value';\n  var markPoint = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var hasTimeAxis = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n  var xAxisType = '';\n  var yAxisType = '';\n  var gridTop = '';\n  var gridBottom = 0;\n\n  if (flag) {\n    xAxisType = axisType;\n    yAxisType = 'category';\n  } else {\n    xAxisType = 'category';\n    yAxisType = axisType;\n  }\n\n  markPoint ? gridTop = 45 : legendShow ? gridTop = 30 : gridTop = 10;\n  hasTimeAxis ? gridBottom = 30 : gridBottom = 5;\n  return {\n    grid: {\n      top: gridTop,\n      left: 10,\n      right: 20,\n      bottom: gridBottom,\n      containLabel: true\n    },\n    yAxis: {\n      type: yAxisType,\n      splitLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          type: 'dotted',\n          color: chartColors.axisSplitLine\n        }\n      },\n      axisLabel: {\n        show: true,\n        textStyle: {\n          color: chartColors.axisLabel\n        }\n      },\n      axisTick: {\n        show: true\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          color: chartColors.axisLine\n        },\n        symbol: ['none', 'arrow']\n      }\n    },\n    xAxis: {\n      type: xAxisType,\n      splitLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          type: 'dotted',\n          color: chartColors.axisSplitLine\n        }\n      },\n      axisTick: {\n        show: true\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          color: chartColors.axisLine\n        },\n        symbol: ['none', 'arrow']\n      },\n      axisLabel: {\n        show: true,\n        color: chartColors.axisLabel,\n        rotate: rotate\n      }\n    }\n  };\n}; // 一个x轴,且x轴为类目轴,2个y轴,y轴为value\n\nexport var xAxisyAxis2Opt = function xAxisyAxis2Opt(chartColors, yAxisName, xAxisData, rotate, legendShow, markPoint) {\n  yAxisName = yAxisName || [];\n  markPoint = markPoint || false;\n  var gridTop = '';\n  markPoint ? gridTop = 45 : legendShow ? gridTop = 30 : gridTop = 10;\n  return {\n    grid: {\n      top: gridTop,\n      left: 10,\n      right: 10,\n      bottom: 10,\n      containLabel: true\n    },\n    yAxis: [{\n      type: 'value',\n      name: yAxisName[0],\n      min: 0,\n      splitLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          type: 'solid',\n          color: chartColors.axisSplitLine\n        }\n      },\n      axisLabel: {\n        show: true,\n        textStyle: {\n          color: chartColors.axisLabel\n        }\n      },\n      axisTick: {\n        show: true\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          color: chartColors.axisLine\n        }\n      }\n    }, {\n      type: 'value',\n      name: yAxisName[1],\n      min: 0,\n      axisLabel: {\n        color: chartColors.axisLabel\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: chartColors.axisLine\n        }\n      },\n      splitLine: {\n        show: false\n      }\n    }],\n    xAxis: {\n      type: 'category',\n      splitLine: {\n        show: false\n      },\n      axisTick: {\n        show: true\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          color: chartColors.axisLine\n        }\n      },\n      axisLabel: {\n        show: true,\n        color: chartColors.axisLabel,\n        rotate: rotate\n      },\n      data: xAxisData\n    }\n  };\n}; // tooltip的配置鼠标悬浮上去显示seriesName和该类别的name和value\n\nexport var tooltipOpt = function tooltipOpt(trigger, opt) {\n  trigger = trigger || 'axis';\n  return _objectSpread({\n    trigger: trigger,\n    axisPointer: {\n      type: 'shadow'\n    }\n  }, opt);\n}; // legendOpt的配置\n\nexport var legendOpt = function legendOpt(left, top, right, bottom, type, orient, opt) {\n  left = left || 'auto';\n  top = top || 'auto';\n  right = right || 'auto';\n  bottom = bottom || 'auto';\n  type = type || 'plain';\n  orient = orient || 'horizontal';\n  return _objectSpread({\n    type: type,\n    orient: orient,\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  }, opt);\n};\nexport var markLineAverageOpt = function markLineAverageOpt(chartColors, markLineAverage, averageLabel) {\n  if (!markLineAverage) {\n    return {};\n  } else {\n    return {\n      markLine: {\n        precision: 0,\n        lineStyle: {\n          normal: {\n            color: chartColors.whiteColor\n          }\n        },\n        label: {\n          normal: {\n            position: 'middle',\n            formatter: averageLabel + '：{c}'\n          }\n        },\n        data: [{\n          type: 'average',\n          name: '平均值'\n        }]\n      },\n      markPoint: {\n        data: [{\n          type: 'max',\n          name: '最大值'\n        }, {\n          type: 'min',\n          name: '最小值'\n        }]\n      }\n    };\n  }\n}; //折线图，柱状图数值转换 带单位\n\nexport var valueConvertWithUnit = function valueConvertWithUnit(value) {\n  if (value < 100000000) {\n    //亿\n    return value / 10000 + '万';\n  } else {\n    return value / 100000000 + '亿';\n  }\n}; //折线图，柱状图数值转换 不带单位\n\nexport var xAxisValueOpt = function xAxisValueOpt(option, maxValue, minValue) {\n  if (maxValue > 100000000 || minValue < -100000000) {\n    option.name = '亿';\n\n    option.axisLabel.formatter = function (value) {\n      return value / 100000000;\n    };\n  } else if (maxValue > 10000 || minValue < -10000) {\n    option.name = '万';\n\n    option.axisLabel.formatter = function (value) {\n      return value / 10000;\n    };\n  }\n}; // visualMapOpt的配置\n\nexport var visualMapOpt = function visualMapOpt(left, top, right, bottom, orient, align, opt) {\n  left = left === 0 || left ? left : 'auto';\n  top = top === 0 || top ? top : 'auto';\n  right = right === 0 || right ? right : 'auto';\n  bottom = bottom === 0 || bottom ? bottom : 'auto';\n  align = align || 'auto';\n  orient = orient || 'vertical';\n  return _objectSpread({\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom,\n    orient: orient,\n    align: align\n  }, opt);\n}; // 获取TrangleBarColors颜色\n\nexport function initTrangleBarColors() {\n  var colors = [];\n\n  for (var i = 0; i < 10; i++) {\n    if (i === 0) {\n      colors.push({\n        type: 'linear',\n        x: 0,\n        y: 0,\n        x2: 1,\n        y2: 0,\n        colorStops: [{\n          offset: 0,\n          color: '#fa4060' // 0% 处的颜色\n\n        }, {\n          offset: 1,\n          color: '#ff6c98' // 100% 处的颜色\n\n        }]\n      });\n    } else {\n      colors.push({\n        type: 'linear',\n        x: 0,\n        y: 0,\n        x2: 1,\n        y2: 0,\n        colorStops: [{\n          offset: 0,\n          color: '#1f7cd9' // 0% 处的颜色\n\n        }, {\n          offset: 1,\n          color: '#35edfe' // 100% 处的颜色\n\n        }]\n      });\n    }\n  }\n\n  return colors;\n} // 获取颜色 \n\nexport function initPictorialBarColors() {\n  var colors = [];\n\n  for (var i = 0; i < 10; i++) {\n    colors.push({\n      type: 'linear',\n      x: 0,\n      y: 0,\n      x2: 1,\n      y2: 0,\n      colorStops: [{\n        offset: 0,\n        color: '#0077ff' // 0% 处的颜色\n\n      }, {\n        offset: 1,\n        color: '#01f5f7' // 100% 处的颜色\n\n      }]\n    });\n  }\n\n  return colors;\n}",{"version":3,"sources":["D:\\工作项目\\部反诈\\src\\constants\\chartConfig.js"],"names":["AxisOpt","chartColors","rotate","flag","legendShow","axisType","markPoint","hasTimeAxis","xAxisType","yAxisType","gridTop","gridBottom","grid","top","left","right","bottom","containLabel","yAxis","type","splitLine","show","lineStyle","width","color","axisSplitLine","axisLabel","textStyle","axisTick","axisLine","symbol","xAxis","gridAxisOpt","xAxisyAxis2Opt","yAxisName","xAxisData","name","min","data","tooltipOpt","trigger","opt","axisPointer","legendOpt","orient","markLineAverageOpt","markLineAverage","averageLabel","markLine","precision","normal","whiteColor","label","position","formatter","valueConvertWithUnit","value","xAxisValueOpt","option","maxValue","minValue","visualMapOpt","align","initTrangleBarColors","colors","i","push","x","y","x2","y2","colorStops","offset","initPictorialBarColors"],"mappings":";AAAA;AACA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,WAAD,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,UAA5B,EAAuG;AAAA,MAA/DC,QAA+D,uEAApD,OAAoD;AAAA,MAA3CC,SAA2C,uEAA/B,KAA+B;AAAA,MAAxBC,WAAwB,uEAAV,KAAU;AAC5H;AACA;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,UAAU,GAAG,CAAjB;;AACA,MAAIR,IAAJ,EAAU;AACRK,IAAAA,SAAS,GAAGH,QAAZ;AACAI,IAAAA,SAAS,GAAG,UAAZ;AACD,GAHD,MAGO;AACLD,IAAAA,SAAS,GAAG,UAAZ;AACAC,IAAAA,SAAS,GAAGJ,QAAZ;AACD;;AACDC,EAAAA,SAAS,GAAGI,OAAO,GAAG,EAAb,GAAmBN,UAAU,GAAGM,OAAO,GAAG,EAAb,GAAkBA,OAAO,GAAG,EAAlE;AACAH,EAAAA,WAAW,GAAGI,UAAU,GAAG,EAAhB,GAAqBA,UAAU,GAAG,CAA7C;AACA,SAAO;AACLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,GAAG,EAAEH,OADD;AAEJI,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,MAAM,EAAEL,UAJJ;AAKJM,MAAAA,YAAY,EAAE;AALV,KADD;AAQLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEV,SADD;AAELW,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE,KADG;AAETC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,CADE;AAETJ,UAAAA,IAAI,EAAE,OAFG;AAGTK,UAAAA,KAAK,EAAEvB,WAAW,CAACwB;AAHV;AAFF,OAFN;AAULC,MAAAA,SAAS,EAAE;AACTL,QAAAA,IAAI,EAAE,IADG;AAETM,QAAAA,SAAS,EAAE;AACTH,UAAAA,KAAK,EAAEvB,WAAW,CAACyB;AADV;AAFF,OAVN;AAgBLE,MAAAA,QAAQ,EAAE;AACRP,QAAAA,IAAI,EAAE;AADE,OAhBL;AAmBLQ,MAAAA,QAAQ,EAAE;AACRR,QAAAA,IAAI,EAAE,IADE;AAERC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,CADE;AAETC,UAAAA,KAAK,EAAEvB,WAAW,CAAC4B;AAFV,SAFH;AAMRC,QAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,OAAT;AANA;AAnBL,KARF;AAoCLC,IAAAA,KAAK,EAAE;AACLZ,MAAAA,IAAI,EAAEX,SADD;AAELY,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE;AADG,OAFN;AAKLO,MAAAA,QAAQ,EAAE;AACRP,QAAAA,IAAI,EAAE;AADE,OALL;AAQLQ,MAAAA,QAAQ,EAAE;AACRR,QAAAA,IAAI,EAAE,IADE;AAERC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,CADE;AAETC,UAAAA,KAAK,EAAEvB,WAAW,CAAC4B;AAFV,SAFH;AAMRC,QAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,OAAT;AANA,OARL;AAgBLJ,MAAAA,SAAS,EAAE;AACTL,QAAAA,IAAI,EAAE,IADG;AAETG,QAAAA,KAAK,EAAEvB,WAAW,CAACyB,SAFV;AAGTxB,QAAAA,MAAM,EAAEA;AAHC;AAhBN;AApCF,GAAP;AA2DD,CA3EM,C,CA4EP;;AACA,OAAO,IAAM8B,WAAW,GAAG,SAAdA,WAAc,CAAC/B,WAAD,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,UAA5B,EAAuG;AAAA,MAA/DC,QAA+D,uEAApD,OAAoD;AAAA,MAA3CC,SAA2C,uEAA/B,KAA+B;AAAA,MAAxBC,WAAwB,uEAAV,KAAU;AAChI,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,UAAU,GAAG,CAAjB;;AACA,MAAIR,IAAJ,EAAU;AACRK,IAAAA,SAAS,GAAGH,QAAZ;AACAI,IAAAA,SAAS,GAAG,UAAZ;AACD,GAHD,MAGO;AACLD,IAAAA,SAAS,GAAG,UAAZ;AACAC,IAAAA,SAAS,GAAGJ,QAAZ;AACD;;AACDC,EAAAA,SAAS,GAAGI,OAAO,GAAG,EAAb,GAAmBN,UAAU,GAAGM,OAAO,GAAG,EAAb,GAAkBA,OAAO,GAAG,EAAlE;AACAH,EAAAA,WAAW,GAAGI,UAAU,GAAG,EAAhB,GAAqBA,UAAU,GAAG,CAA7C;AACA,SAAO;AACLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,GAAG,EAAEH,OADD;AAEJI,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,MAAM,EAAEL,UAJJ;AAKJM,MAAAA,YAAY,EAAE;AALV,KADD;AAQLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEV,SADD;AAELW,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE,IADG;AAETC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,CADE;AAETJ,UAAAA,IAAI,EAAE,QAFG;AAGTK,UAAAA,KAAK,EAAEvB,WAAW,CAACwB;AAHV;AAFF,OAFN;AAULC,MAAAA,SAAS,EAAE;AACTL,QAAAA,IAAI,EAAE,IADG;AAETM,QAAAA,SAAS,EAAE;AACTH,UAAAA,KAAK,EAAEvB,WAAW,CAACyB;AADV;AAFF,OAVN;AAgBLE,MAAAA,QAAQ,EAAE;AACRP,QAAAA,IAAI,EAAE;AADE,OAhBL;AAmBLQ,MAAAA,QAAQ,EAAE;AACRR,QAAAA,IAAI,EAAE,IADE;AAERC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,CADE;AAETC,UAAAA,KAAK,EAAEvB,WAAW,CAAC4B;AAFV,SAFH;AAMRC,QAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,OAAT;AANA;AAnBL,KARF;AAoCLC,IAAAA,KAAK,EAAE;AACLZ,MAAAA,IAAI,EAAEX,SADD;AAELY,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE,IADG;AAETC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,CADE;AAETJ,UAAAA,IAAI,EAAE,QAFG;AAGTK,UAAAA,KAAK,EAAEvB,WAAW,CAACwB;AAHV;AAFF,OAFN;AAULG,MAAAA,QAAQ,EAAE;AACRP,QAAAA,IAAI,EAAE;AADE,OAVL;AAaLQ,MAAAA,QAAQ,EAAE;AACRR,QAAAA,IAAI,EAAE,IADE;AAERC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,CADE;AAETC,UAAAA,KAAK,EAAEvB,WAAW,CAAC4B;AAFV,SAFH;AAMRC,QAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,OAAT;AANA,OAbL;AAqBLJ,MAAAA,SAAS,EAAE;AACTL,QAAAA,IAAI,EAAE,IADG;AAETG,QAAAA,KAAK,EAAEvB,WAAW,CAACyB,SAFV;AAGTxB,QAAAA,MAAM,EAAEA;AAHC;AArBN;AApCF,GAAP;AAgED,CA9EM,C,CA+EP;;AACA,OAAO,IAAM+B,cAAc,GAAG,SAAjBA,cAAiB,CAAChC,WAAD,EAAciC,SAAd,EAAyBC,SAAzB,EAAoCjC,MAApC,EAA4CE,UAA5C,EAAwDE,SAAxD,EAAsE;AAClG4B,EAAAA,SAAS,GAAGA,SAAS,IAAI,EAAzB;AACA5B,EAAAA,SAAS,GAAGA,SAAS,IAAI,KAAzB;AACA,MAAII,OAAO,GAAG,EAAd;AACAJ,EAAAA,SAAS,GAAGI,OAAO,GAAG,EAAb,GAAkBN,UAAU,GAAGM,OAAO,GAAG,EAAb,GAAkBA,OAAO,GAAG,EAAjE;AACA,SAAO;AACLE,IAAAA,IAAI,EAAE;AACJC,MAAAA,GAAG,EAAEH,OADD;AAEJI,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,MAAM,EAAE,EAJJ;AAKJC,MAAAA,YAAY,EAAE;AALV,KADD;AAQLC,IAAAA,KAAK,EAAE,CAAC;AACNC,MAAAA,IAAI,EAAE,OADA;AAENiB,MAAAA,IAAI,EAAEF,SAAS,CAAC,CAAD,CAFT;AAGNG,MAAAA,GAAG,EAAE,CAHC;AAINjB,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE,IADG;AAETC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,CADE;AAETJ,UAAAA,IAAI,EAAE,OAFG;AAGTK,UAAAA,KAAK,EAAEvB,WAAW,CAACwB;AAHV;AAFF,OAJL;AAYNC,MAAAA,SAAS,EAAE;AACTL,QAAAA,IAAI,EAAE,IADG;AAETM,QAAAA,SAAS,EAAE;AACTH,UAAAA,KAAK,EAAEvB,WAAW,CAACyB;AADV;AAFF,OAZL;AAkBNE,MAAAA,QAAQ,EAAE;AACRP,QAAAA,IAAI,EAAE;AADE,OAlBJ;AAqBNQ,MAAAA,QAAQ,EAAE;AACRR,QAAAA,IAAI,EAAE,IADE;AAERC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,CADE;AAETC,UAAAA,KAAK,EAAEvB,WAAW,CAAC4B;AAFV;AAFH;AArBJ,KAAD,EA6BP;AACEV,MAAAA,IAAI,EAAE,OADR;AAEEiB,MAAAA,IAAI,EAAEF,SAAS,CAAC,CAAD,CAFjB;AAGEG,MAAAA,GAAG,EAAE,CAHP;AAIEX,MAAAA,SAAS,EAAE;AACTF,QAAAA,KAAK,EAAEvB,WAAW,CAACyB;AADV,OAJb;AAOEG,MAAAA,QAAQ,EAAE;AACRR,QAAAA,IAAI,EAAE,IADE;AAERC,QAAAA,SAAS,EAAE;AACTE,UAAAA,KAAK,EAAEvB,WAAW,CAAC4B;AADV;AAFH,OAPZ;AAaET,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE;AADG;AAbb,KA7BO,CARF;AAuDLU,IAAAA,KAAK,EAAE;AACLZ,MAAAA,IAAI,EAAE,UADD;AAELC,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE;AADG,OAFN;AAKLO,MAAAA,QAAQ,EAAE;AACRP,QAAAA,IAAI,EAAE;AADE,OALL;AAQLQ,MAAAA,QAAQ,EAAE;AACRR,QAAAA,IAAI,EAAE,IADE;AAERC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,CADE;AAETC,UAAAA,KAAK,EAAEvB,WAAW,CAAC4B;AAFV;AAFH,OARL;AAeLH,MAAAA,SAAS,EAAE;AACTL,QAAAA,IAAI,EAAE,IADG;AAETG,QAAAA,KAAK,EAAEvB,WAAW,CAACyB,SAFV;AAGTxB,QAAAA,MAAM,EAAEA;AAHC,OAfN;AAoBLoC,MAAAA,IAAI,EAAEH;AApBD;AAvDF,GAAP;AA8ED,CAnFM,C,CAqFP;;AACA,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAUC,GAAV,EAAkB;AAC1CD,EAAAA,OAAO,GAAGA,OAAO,IAAI,MAArB;AACA;AACEA,IAAAA,OAAO,EAAEA,OADX;AAEEE,IAAAA,WAAW,EAAE;AACXvB,MAAAA,IAAI,EAAE;AADK;AAFf,KAKKsB,GALL;AAOD,CATM,C,CAWP;;AACA,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAC7B,IAAD,EAAOD,GAAP,EAAYE,KAAZ,EAAmBC,MAAnB,EAA2BG,IAA3B,EAAiCyB,MAAjC,EAAyCH,GAAzC,EAAiD;AACxE3B,EAAAA,IAAI,GAAGA,IAAI,IAAI,MAAf;AACAD,EAAAA,GAAG,GAAGA,GAAG,IAAI,MAAb;AACAE,EAAAA,KAAK,GAAGA,KAAK,IAAI,MAAjB;AACAC,EAAAA,MAAM,GAAGA,MAAM,IAAI,MAAnB;AACAG,EAAAA,IAAI,GAAGA,IAAI,IAAI,OAAf;AACAyB,EAAAA,MAAM,GAAGA,MAAM,IAAI,YAAnB;AACA;AACEzB,IAAAA,IAAI,EAAEA,IADR;AAEEyB,IAAAA,MAAM,EAAEA,MAFV;AAGE9B,IAAAA,IAAI,EAAEA,IAHR;AAIED,IAAAA,GAAG,EAAEA,GAJP;AAKEE,IAAAA,KAAK,EAAEA,KALT;AAMEC,IAAAA,MAAM,EAAEA;AANV,KAOKyB,GAPL;AASD,CAhBM;AAkBP,OAAO,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAC5C,WAAD,EAAc6C,eAAd,EAA+BC,YAA/B,EAAgD;AAChF,MAAI,CAACD,eAAL,EAAsB;AACpB,WAAO,EAAP;AACD,GAFD,MAEO;AACL,WAAO;AACLE,MAAAA,QAAQ,EAAE;AACRC,QAAAA,SAAS,EAAE,CADH;AAER3B,QAAAA,SAAS,EAAE;AACT4B,UAAAA,MAAM,EAAE;AACN1B,YAAAA,KAAK,EAAEvB,WAAW,CAACkD;AADb;AADC,SAFH;AAORC,QAAAA,KAAK,EAAE;AACLF,UAAAA,MAAM,EAAE;AACNG,YAAAA,QAAQ,EAAE,QADJ;AAENC,YAAAA,SAAS,EAAEP,YAAY,GAAG;AAFpB;AADH,SAPC;AAaRT,QAAAA,IAAI,EAAE,CAAC;AACLnB,UAAAA,IAAI,EAAE,SADD;AAELiB,UAAAA,IAAI,EAAE;AAFD,SAAD;AAbE,OADL;AAmBL9B,MAAAA,SAAS,EAAE;AACTgC,QAAAA,IAAI,EAAE,CAAC;AACLnB,UAAAA,IAAI,EAAE,KADD;AAELiB,UAAAA,IAAI,EAAE;AAFD,SAAD,EAIN;AACEjB,UAAAA,IAAI,EAAE,KADR;AAEEiB,UAAAA,IAAI,EAAE;AAFR,SAJM;AADG;AAnBN,KAAP;AA+BD;AACF,CApCM,C,CAsCP;;AACA,OAAO,IAAMmB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AAC7C,MAAIA,KAAK,GAAG,SAAZ,EAAuB;AAAE;AACvB,WAAOA,KAAK,GAAG,KAAR,GAAgB,GAAvB;AACD,GAFD,MAEO;AACL,WAAOA,KAAK,GAAG,SAAR,GAAoB,GAA3B;AACD;AACF,CANM,C,CAQP;;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAASC,QAAT,EAAmBC,QAAnB,EAAgC;AAC3D,MAAID,QAAQ,GAAG,SAAX,IAAwBC,QAAQ,GAAG,CAAC,SAAxC,EAAmD;AACjDF,IAAAA,MAAM,CAACtB,IAAP,GAAc,GAAd;;AACAsB,IAAAA,MAAM,CAAChC,SAAP,CAAiB4B,SAAjB,GAA6B,UAACE,KAAD,EAAW;AACtC,aAAOA,KAAK,GAAG,SAAf;AACD,KAFD;AAGD,GALD,MAKO,IAAIG,QAAQ,GAAG,KAAX,IAAoBC,QAAQ,GAAG,CAAC,KAApC,EAA2C;AAChDF,IAAAA,MAAM,CAACtB,IAAP,GAAc,GAAd;;AACAsB,IAAAA,MAAM,CAAChC,SAAP,CAAiB4B,SAAjB,GAA6B,UAACE,KAAD,EAAW;AACtC,aAAOA,KAAK,GAAG,KAAf;AACD,KAFD;AAGD;AACF,CAZM,C,CAcP;;AACA,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAAC/C,IAAD,EAAOD,GAAP,EAAYE,KAAZ,EAAmBC,MAAnB,EAA2B4B,MAA3B,EAAmCkB,KAAnC,EAA0CrB,GAA1C,EAAkD;AAC5E3B,EAAAA,IAAI,GAAIA,IAAI,KAAK,CAAT,IAAcA,IAAf,GAAuBA,IAAvB,GAA8B,MAArC;AACAD,EAAAA,GAAG,GAAIA,GAAG,KAAK,CAAR,IAAaA,GAAd,GAAqBA,GAArB,GAA2B,MAAjC;AACAE,EAAAA,KAAK,GAAIA,KAAK,KAAK,CAAV,IAAeA,KAAhB,GAAyBA,KAAzB,GAAiC,MAAzC;AACAC,EAAAA,MAAM,GAAGA,MAAM,KAAK,CAAX,IAAgBA,MAAhB,GAAyBA,MAAzB,GAAkC,MAA3C;AACA8C,EAAAA,KAAK,GAAGA,KAAK,IAAI,MAAjB;AACAlB,EAAAA,MAAM,GAAGA,MAAM,IAAI,UAAnB;AACA;AACE9B,IAAAA,IAAI,EAAEA,IADR;AAEED,IAAAA,GAAG,EAAEA,GAFP;AAGEE,IAAAA,KAAK,EAAEA,KAHT;AAIEC,IAAAA,MAAM,EAAEA,MAJV;AAKE4B,IAAAA,MAAM,EAAEA,MALV;AAMEkB,IAAAA,KAAK,EAAEA;AANT,KAOKrB,GAPL;AASD,CAhBM,C,CAkBP;;AACA,OAAO,SAASsB,oBAAT,GAAgC;AACrC,MAAMC,MAAM,GAAG,EAAf;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,QAAGA,CAAC,KAAK,CAAT,EAAY;AACVD,MAAAA,MAAM,CAACE,IAAP,CAAY;AACV/C,QAAAA,IAAI,EAAE,QADI;AAEVgD,QAAAA,CAAC,EAAE,CAFO;AAGVC,QAAAA,CAAC,EAAE,CAHO;AAIVC,QAAAA,EAAE,EAAE,CAJM;AAKVC,QAAAA,EAAE,EAAE,CALM;AAMVC,QAAAA,UAAU,EAAE,CAAC;AACXC,UAAAA,MAAM,EAAE,CADG;AAEXhD,UAAAA,KAAK,EAAE,SAFI,CAEM;;AAFN,SAAD,EAGT;AACDgD,UAAAA,MAAM,EAAE,CADP;AAEDhD,UAAAA,KAAK,EAAE,SAFN,CAEgB;;AAFhB,SAHS;AANF,OAAZ;AAcD,KAfD,MAeO;AACLwC,MAAAA,MAAM,CAACE,IAAP,CAAY;AACV/C,QAAAA,IAAI,EAAE,QADI;AAEVgD,QAAAA,CAAC,EAAE,CAFO;AAGVC,QAAAA,CAAC,EAAE,CAHO;AAIVC,QAAAA,EAAE,EAAE,CAJM;AAKVC,QAAAA,EAAE,EAAE,CALM;AAMVC,QAAAA,UAAU,EAAE,CAAC;AACXC,UAAAA,MAAM,EAAE,CADG;AAEXhD,UAAAA,KAAK,EAAE,SAFI,CAEM;;AAFN,SAAD,EAGT;AACDgD,UAAAA,MAAM,EAAE,CADP;AAEDhD,UAAAA,KAAK,EAAE,SAFN,CAEgB;;AAFhB,SAHS;AANF,OAAZ;AAcD;AACF;;AACD,SAAOwC,MAAP;AACD,C,CAED;;AACA,OAAO,SAASS,sBAAT,GAAkC;AACvC,MAAMT,MAAM,GAAG,EAAf;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,IAAAA,MAAM,CAACE,IAAP,CAAY;AACV/C,MAAAA,IAAI,EAAE,QADI;AAEVgD,MAAAA,CAAC,EAAE,CAFO;AAGVC,MAAAA,CAAC,EAAE,CAHO;AAIVC,MAAAA,EAAE,EAAE,CAJM;AAKVC,MAAAA,EAAE,EAAE,CALM;AAMVC,MAAAA,UAAU,EAAE,CAAC;AACXC,QAAAA,MAAM,EAAE,CADG;AAEXhD,QAAAA,KAAK,EAAE,SAFI,CAEM;;AAFN,OAAD,EAGT;AACDgD,QAAAA,MAAM,EAAE,CADP;AAEDhD,QAAAA,KAAK,EAAE,SAFN,CAEgB;;AAFhB,OAHS;AANF,KAAZ;AAcD;;AACD,SAAOwC,MAAP;AACD","sourcesContent":["// 正规的坐标轴的配置\nexport const AxisOpt = (chartColors, rotate, flag, legendShow, axisType = 'value', markPoint = false, hasTimeAxis = false) => {\n  // markPoint = markPoint || false\n  // axisType = axisType || 'value'\n  let xAxisType = ''\n  let yAxisType = ''\n  let gridTop = ''\n  let gridBottom = 0\n  if (flag) {\n    xAxisType = axisType\n    yAxisType = 'category'\n  } else {\n    xAxisType = 'category'\n    yAxisType = axisType\n  }\n  markPoint ? gridTop = 45 : (legendShow ? gridTop = 30 : gridTop = 10)\n  hasTimeAxis ? gridBottom = 30 : gridBottom = 5\n  return {\n    grid: {\n      top: gridTop,\n      left: 10,\n      right: 20,\n      bottom: gridBottom,\n      containLabel: true\n    },\n    yAxis: {\n      type: yAxisType,\n      splitLine: {\n        show: false,\n        lineStyle: {\n          width: 1,\n          type: 'solid',\n          color: chartColors.axisSplitLine\n        }\n      },\n      axisLabel: {\n        show: true,\n        textStyle: {\n          color: chartColors.axisLabel\n        }\n      },\n      axisTick: {\n        show: true\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          color: chartColors.axisLine\n        },\n        symbol: ['none', 'arrow']\n      }\n    },\n    xAxis: {\n      type: xAxisType,\n      splitLine: {\n        show: false\n      },\n      axisTick: {\n        show: true\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          color: chartColors.axisLine\n        },\n        symbol: ['none', 'arrow']\n      },\n      axisLabel: {\n        show: true,\n        color: chartColors.axisLabel,\n        rotate: rotate\n      }\n    }\n  }\n}\n// 网格坐标轴的配置\nexport const gridAxisOpt = (chartColors, rotate, flag, legendShow, axisType = 'value', markPoint = false, hasTimeAxis = false) => {\n  let xAxisType = ''\n  let yAxisType = ''\n  let gridTop = ''\n  let gridBottom = 0\n  if (flag) {\n    xAxisType = axisType\n    yAxisType = 'category'\n  } else {\n    xAxisType = 'category'\n    yAxisType = axisType\n  }\n  markPoint ? gridTop = 45 : (legendShow ? gridTop = 30 : gridTop = 10)\n  hasTimeAxis ? gridBottom = 30 : gridBottom = 5\n  return {\n    grid: {\n      top: gridTop,\n      left: 10,\n      right: 20,\n      bottom: gridBottom,\n      containLabel: true\n    },\n    yAxis: {\n      type: yAxisType,\n      splitLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          type: 'dotted',\n          color: chartColors.axisSplitLine\n        }\n      },\n      axisLabel: {\n        show: true,\n        textStyle: {\n          color: chartColors.axisLabel\n        }\n      },\n      axisTick: {\n        show: true\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          color: chartColors.axisLine\n        },\n        symbol: ['none', 'arrow']\n      }\n    },\n    xAxis: {\n      type: xAxisType,\n      splitLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          type: 'dotted',\n          color: chartColors.axisSplitLine\n        }\n      },\n      axisTick: {\n        show: true\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          color: chartColors.axisLine\n        },\n        symbol: ['none', 'arrow']\n      },\n      axisLabel: {\n        show: true,\n        color: chartColors.axisLabel,\n        rotate: rotate\n      }\n    }\n  }\n}\n// 一个x轴,且x轴为类目轴,2个y轴,y轴为value\nexport const xAxisyAxis2Opt = (chartColors, yAxisName, xAxisData, rotate, legendShow, markPoint) => {\n  yAxisName = yAxisName || []\n  markPoint = markPoint || false\n  let gridTop = ''\n  markPoint ? gridTop = 45 : legendShow ? gridTop = 30 : gridTop = 10\n  return {\n    grid: {\n      top: gridTop,\n      left: 10,\n      right: 10,\n      bottom: 10,\n      containLabel: true\n    },\n    yAxis: [{\n      type: 'value',\n      name: yAxisName[0],\n      min: 0,\n      splitLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          type: 'solid',\n          color: chartColors.axisSplitLine\n        }\n      },\n      axisLabel: {\n        show: true,\n        textStyle: {\n          color: chartColors.axisLabel\n        }\n      },\n      axisTick: {\n        show: true\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          color: chartColors.axisLine\n        }\n      }\n    },\n    {\n      type: 'value',\n      name: yAxisName[1],\n      min: 0,\n      axisLabel: {\n        color: chartColors.axisLabel\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: chartColors.axisLine\n        }\n      },\n      splitLine: {\n        show: false\n      }\n    }\n    ],\n    xAxis: {\n      type: 'category',\n      splitLine: {\n        show: false\n      },\n      axisTick: {\n        show: true\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          color: chartColors.axisLine\n        }\n      },\n      axisLabel: {\n        show: true,\n        color: chartColors.axisLabel,\n        rotate: rotate\n      },\n      data: xAxisData\n    }\n  }\n}\n\n// tooltip的配置鼠标悬浮上去显示seriesName和该类别的name和value\nexport const tooltipOpt = (trigger, opt) => {\n  trigger = trigger || 'axis'\n  return {\n    trigger: trigger,\n    axisPointer: {\n      type: 'shadow'\n    },\n    ...opt\n  }\n}\n\n// legendOpt的配置\nexport const legendOpt = (left, top, right, bottom, type, orient, opt) => {\n  left = left || 'auto'\n  top = top || 'auto'\n  right = right || 'auto'\n  bottom = bottom || 'auto'\n  type = type || 'plain'\n  orient = orient || 'horizontal'\n  return {\n    type: type,\n    orient: orient,\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom,\n    ...opt\n  }\n}\n\nexport const markLineAverageOpt = (chartColors, markLineAverage, averageLabel) => {\n  if (!markLineAverage) {\n    return {}\n  } else {\n    return {\n      markLine: {\n        precision: 0,\n        lineStyle: {\n          normal: {\n            color: chartColors.whiteColor\n          }\n        },\n        label: {\n          normal: {\n            position: 'middle',\n            formatter: averageLabel + '：{c}'\n          }\n        },\n        data: [{\n          type: 'average',\n          name: '平均值'\n        }]\n      },\n      markPoint: {\n        data: [{\n          type: 'max',\n          name: '最大值'\n        },\n        {\n          type: 'min',\n          name: '最小值'\n        }\n        ]\n      }\n    }\n  }\n}\n\n//折线图，柱状图数值转换 带单位\nexport const valueConvertWithUnit = (value) => {\n  if (value < 100000000) { //亿\n    return value / 10000 + '万'\n  } else {\n    return value / 100000000 + '亿'\n  }\n}\n\n//折线图，柱状图数值转换 不带单位\nexport const xAxisValueOpt = (option, maxValue, minValue) => {\n  if (maxValue > 100000000 || minValue < -100000000) {\n    option.name = '亿'\n    option.axisLabel.formatter = (value) => {\n      return value / 100000000\n    }\n  } else if (maxValue > 10000 || minValue < -10000) {\n    option.name = '万'\n    option.axisLabel.formatter = (value) => {\n      return value / 10000\n    }\n  }\n}\n\n// visualMapOpt的配置\nexport const visualMapOpt = (left, top, right, bottom, orient, align, opt) => {\n  left = (left === 0 || left) ? left : 'auto'\n  top = (top === 0 || top) ? top : 'auto'\n  right = (right === 0 || right) ? right : 'auto'\n  bottom = bottom === 0 || bottom ? bottom : 'auto'\n  align = align || 'auto'\n  orient = orient || 'vertical'\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom,\n    orient: orient,\n    align: align,\n    ...opt\n  }\n}\n\n// 获取TrangleBarColors颜色\nexport function initTrangleBarColors() {\n  const colors = []\n  for(let i = 0; i < 10; i++) {\n    if(i === 0) {\n      colors.push({\n        type: 'linear',\n        x: 0,\n        y: 0,\n        x2: 1,\n        y2: 0,\n        colorStops: [{\n          offset: 0,\n          color: '#fa4060' // 0% 处的颜色\n        }, {\n          offset: 1,\n          color: '#ff6c98' // 100% 处的颜色\n        }]\n      })\n    } else {\n      colors.push({\n        type: 'linear',\n        x: 0,\n        y: 0,\n        x2: 1,\n        y2: 0,\n        colorStops: [{\n          offset: 0,\n          color: '#1f7cd9' // 0% 处的颜色\n        }, {\n          offset: 1,\n          color: '#35edfe' // 100% 处的颜色\n        }]\n      })\n    }\n  }\n  return colors\n}\n\n// 获取颜色 \nexport function initPictorialBarColors() {\n  const colors = []\n  for(let i = 0; i < 10; i++) {\n    colors.push({\n      type: 'linear',\n      x: 0,\n      y: 0,\n      x2: 1,\n      y2: 0,\n      colorStops: [{\n        offset: 0,\n        color: '#0077ff' // 0% 处的颜色\n      }, {\n        offset: 1,\n        color: '#01f5f7' // 100% 处的颜色\n      }]\n    })\n  }\n  return colors\n}"]}]}