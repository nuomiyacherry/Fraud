{"remainingRequest":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js!D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\工作项目\\部反诈\\src\\utils\\map3d\\libs\\event-emitter.js","dependencies":[{"path":"D:\\工作项目\\部反诈\\src\\utils\\map3d\\libs\\event-emitter.js","mtime":1598758375255},{"path":"D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$keys from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\n\n/**\n * 简单的事件触发器\n *\n * const emitter = new EventEmitter()\n * const cry = _ => console.log('cry')\n * emitter.once('cry', cry)\n * emitter.on('cry', cry)\n * emitter.on('cry', cry)\n * emitter.on('cry', cry)\n * emitter.on('cry', cry)\n * emitter.emit('cry', '哭')\n * emitter.emit('cry', '哭')\n */\nvar EventEmitter =\n/*#__PURE__*/\nfunction () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this._events = {};\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(eventName, callback) {\n      this._events[eventName] ? this._events[eventName].push(callback) : this._events[eventName] = [callback];\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(eventName) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // eslint-disable-next-line\n      this._events[eventName] && this._events[eventName].forEach(function (cb) {\n        return cb.apply(void 0, args);\n      });\n    }\n    /**\n     * 销毁指定名称的监听事件\n     * @param {String} eventName\n     * @param {Function} callback 不传callback 则销毁eventName对应的所有事件\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(eventName, callback) {\n      if (callback) {\n        this._events[eventName] && (this._events[eventName] = this._events[eventName].filter(function (cb) {\n          return cb !== callback;\n        }));\n      } else {\n        this._events[eventName] = null;\n        delete this._events[eventName];\n      }\n    }\n  }, {\n    key: \"offAll\",\n    value: function offAll() {\n      var _this = this;\n\n      _Object$keys(this._events).forEach(function (key) {\n        _this._events[key] = null;\n      });\n\n      this._events = [];\n    }\n  }, {\n    key: \"once\",\n    value: function once(eventName, callback) {\n      var _this2 = this;\n\n      var fn = function fn(_) {\n        callback();\n\n        _this2.off(eventName, fn);\n      };\n\n      this.on(eventName, fn);\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\nexport { EventEmitter as default };",{"version":3,"sources":["D:\\工作项目\\部反诈\\src\\utils\\map3d\\libs\\event-emitter.js"],"names":["EventEmitter","_events","eventName","callback","push","args","forEach","cb","filter","key","fn","_","off","on"],"mappings":";;;;;AAAA;;;;;;;;;;;;;IAaqBA,Y;;;AACnB,0BAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,EAAf;AACD;;;;uBAEEC,S,EAAWC,Q,EAAU;AACtB,WAAKF,OAAL,CAAaC,SAAb,IACI,KAAKD,OAAL,CAAaC,SAAb,EAAwBE,IAAxB,CAA6BD,QAA7B,CADJ,GAEK,KAAKF,OAAL,CAAaC,SAAb,IAA0B,CAACC,QAAD,CAF/B;AAGD;;;yBAEID,S,EAAoB;AAAA,wCAANG,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACvB;AACA,WAAKJ,OAAL,CAAaC,SAAb,KAA2B,KAAKD,OAAL,CAAaC,SAAb,EAAwBI,OAAxB,CAAgC,UAAAC,EAAE;AAAA,eAAIA,EAAE,MAAF,SAAMF,IAAN,CAAJ;AAAA,OAAlC,CAA3B;AACD;AAED;;;;;;;;wBAKIH,S,EAAWC,Q,EAAU;AACvB,UAAIA,QAAJ,EAAc;AACZ,aAAKF,OAAL,CAAaC,SAAb,MACG,KAAKD,OAAL,CAAaC,SAAb,IAA0B,KAAKD,OAAL,CAAaC,SAAb,EAAwBM,MAAxB,CACzB,UAAAD,EAAE;AAAA,iBAAIA,EAAE,KAAKJ,QAAX;AAAA,SADuB,CAD7B;AAID,OALD,MAKO;AACL,aAAKF,OAAL,CAAaC,SAAb,IAA0B,IAA1B;AACA,eAAO,KAAKD,OAAL,CAAaC,SAAb,CAAP;AACD;AACF;;;6BAEQ;AAAA;;AACP,mBAAY,KAAKD,OAAjB,EAA0BK,OAA1B,CAAkC,UAAAG,GAAG,EAAI;AACvC,QAAA,KAAI,CAACR,OAAL,CAAaQ,GAAb,IAAoB,IAApB;AACD,OAFD;;AAGA,WAAKR,OAAL,GAAe,EAAf;AACD;;;yBAEIC,S,EAAWC,Q,EAAU;AAAA;;AACxB,UAAMO,EAAE,GAAG,SAALA,EAAK,CAAAC,CAAC,EAAI;AACdR,QAAAA,QAAQ;;AACR,QAAA,MAAI,CAACS,GAAL,CAASV,SAAT,EAAoBQ,EAApB;AACD,OAHD;;AAIA,WAAKG,EAAL,CAAQX,SAAR,EAAmBQ,EAAnB;AACD;;;;;;SA9CkBV,Y","sourcesContent":["/**\n * 简单的事件触发器\n *\n * const emitter = new EventEmitter()\n * const cry = _ => console.log('cry')\n * emitter.once('cry', cry)\n * emitter.on('cry', cry)\n * emitter.on('cry', cry)\n * emitter.on('cry', cry)\n * emitter.on('cry', cry)\n * emitter.emit('cry', '哭')\n * emitter.emit('cry', '哭')\n */\nexport default class EventEmitter {\n  constructor() {\n    this._events = {}\n  }\n\n  on(eventName, callback) {\n    this._events[eventName]\n      ? this._events[eventName].push(callback)\n      : (this._events[eventName] = [callback])\n  }\n\n  emit(eventName, ...args) {\n    // eslint-disable-next-line\n    this._events[eventName] && this._events[eventName].forEach(cb => cb(...args))\n  }\n\n  /**\n   * 销毁指定名称的监听事件\n   * @param {String} eventName\n   * @param {Function} callback 不传callback 则销毁eventName对应的所有事件\n   */\n  off(eventName, callback) {\n    if (callback) {\n      this._events[eventName] &&\n        (this._events[eventName] = this._events[eventName].filter(\n          cb => cb !== callback\n        ))\n    } else {\n      this._events[eventName] = null\n      delete this._events[eventName]\n    }\n  }\n\n  offAll() {\n    Object.keys(this._events).forEach(key => {\n      this._events[key] = null\n    })\n    this._events = []\n  }\n\n  once(eventName, callback) {\n    const fn = _ => {\n      callback()\n      this.off(eventName, fn)\n    }\n    this.on(eventName, fn)\n  }\n}\n"]}]}