{"remainingRequest":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js!D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\工作项目\\部反诈\\src\\mixins\\visualMapMixin.js","dependencies":[{"path":"D:\\工作项目\\部反诈\\src\\mixins\\visualMapMixin.js","mtime":1598758386947},{"path":"D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { visualMapOpt } from 'constants/chartConfig';\nimport storage from \"utils/storage\";\nvar chartColors = storage.get('tColors');\nexport default {\n  props: {\n    visualMapShow: {\n      type: Boolean,\n      default: true\n    },\n    visualMapType: {\n      type: String,\n      default: 'continuous'\n    },\n    splitNumber: {\n      type: Number,\n      default: 5\n    },\n    pieces: {\n      type: Array,\n      default: function _default() {\n        return [{\n          min: 100000\n        }, {\n          min: 50000,\n          max: 99999\n        }, {\n          min: 10000,\n          max: 49999\n        }, {\n          min: 1000,\n          max: 9999\n        }, {\n          min: 0,\n          max: 999\n        }];\n      }\n    },\n    visualMapOrient: {\n      type: String,\n      default: 'vertical'\n    },\n    visualMapAlign: {\n      type: String,\n      default: 'auto'\n    },\n    visualMapLeft: {\n      type: [String, Number],\n      default: function _default() {\n        return 0;\n      }\n    },\n    visualMapRight: {\n      type: [String, Number],\n      default: function _default() {\n        return 'auto';\n      }\n    },\n    visualMapTop: {\n      type: [String, Number],\n      default: function _default() {\n        return 'auto';\n      }\n    },\n    visualMapBottom: {\n      type: [String, Number],\n      default: function _default() {\n        return 0;\n      }\n    },\n    visualMapMin: {\n      type: Number,\n      default: 0\n    },\n    visualMapMax: {\n      type: Number,\n      default: 999999\n    },\n    visualMapText: {\n      type: Array,\n      default: function _default() {\n        return ['高', '低'];\n      }\n    },\n    visualMapTextColor: {\n      type: String,\n      default: chartColors.visualMap.text\n    },\n    visualMapRangeColor: {\n      type: Array,\n      default: function _default() {\n        return chartColors.visualMap.range;\n      }\n    },\n    visualMapFontSize: {\n      type: Number,\n      default: 12\n    }\n  },\n  data: function data() {\n    return {\n      chartName: '注意：没有给图表制定名称，请及时补充图表名称.........',\n      options: {}\n    };\n  },\n  created: function created() {// console.log(`准备构建图表组件${this.chartName}`)\n  },\n  mounted: function mounted() {\n    this.refresh();\n  },\n  watch: {\n    pieces: {\n      handler: function handler(newVal, oldVal) {\n        this.refresh();\n      },\n      deep: true\n    },\n    visualMapType: function visualMapType() {\n      this.refresh();\n    },\n    splitNumber: function splitNumber() {\n      this.refresh();\n    },\n    visualMapShow: function visualMapShow() {\n      // console.log(\n      //   `${this.chartName}visualMapShow[新值:${this.newVal};旧值:${\n      //     this.oldVal\n      //   }]`\n      // )\n      this.refresh();\n    },\n    visualMapOrient: function visualMapOrient() {\n      // console.log(\n      //   `${this.chartName}visualMapOrient[新值:${this.newVal};旧值:${\n      //     this.oldVal\n      //   }]`\n      // )\n      this.refresh();\n    },\n    visualMapAlign: function visualMapAlign() {\n      // console.log(\n      //   `${this.chartName}visualMapAlign[新值:${this.newVal};旧值:${\n      //     this.oldVal\n      //   }]`\n      // )\n      this.refresh();\n    },\n    visualMapLeft: function visualMapLeft() {\n      // console.log(\n      //   `${this.chartName}visualMapLeft[新值:${this.newVal};旧值:${\n      //     this.oldVal\n      //   }]`\n      // )\n      this.refresh();\n    },\n    visualMapRight: function visualMapRight() {\n      // console.log(\n      //   `${this.chartName}visualMapRight[新值:${this.newVal};旧值:${\n      //     this.oldVal\n      //   }]`\n      // )\n      this.refresh();\n    },\n    visualMapTop: function visualMapTop() {\n      // console.log(\n      //   `${this.chartName}visualMapTop[新值:${this.newVal};旧值:${this.oldVal}]`\n      // )\n      this.refresh();\n    },\n    visualMapBottom: function visualMapBottom() {\n      // console.log(\n      //   `${this.chartName}visualMapBottom[新值:${this.newVal};旧值:${\n      //     this.oldVal\n      //   }]`\n      // )\n      this.refresh();\n    },\n    visualMapMin: function visualMapMin() {\n      // console.log(`${this.chartName}visualMapMin[新值:${this.newVal};旧值:${this.oldVal}]`)\n      this.refresh();\n    },\n    visualMapMax: function visualMapMax() {\n      // console.log(`${this.chartName}visualMapMax[新值:${this.newVal};旧值:${this.oldVal}]`)\n      this.refresh();\n    },\n    visualMapText: function visualMapText() {\n      // console.log(`${this.chartName}visualMapText[新值:${this.newVal};旧值:${this.oldVal}]`)\n      this.refresh();\n    },\n    visualMapTextColor: function visualMapTextColor() {\n      // console.log(`${this.chartName}visualMapTextColor[新值:${this.newVal};旧值:${this.oldVal}]`)\n      this.refresh();\n    },\n    visualMapRangeColor: function visualMapRangeColor() {\n      // console.log(`${this.chartName}visualMapRangeColor[新值:${this.newVal};旧值:${this.oldVal}]`)\n      this.refresh();\n    },\n    visualMapFontSize: function visualMapFontSize() {\n      // console.log(`${this.chartName}visualMapRangeColor[新值:${this.newVal};旧值:${this.oldVal}]`)\n      this.refresh();\n    }\n  },\n  methods: {\n    refresh: function refresh() {\n      this.options = this.setOptions();\n\n      if (this.refreshCallback) {\n        this.refreshCallback();\n      }\n    },\n    // gridOpt(opt) {\n    //   let [left, top, right, bottom] = [\n    //     this.gridLeft || 'auto',\n    //     this.gridTop || 'auto',\n    //     this.gridRight || 'auto',\n    //     this.gridBottom || 'auto'\n    //   ]\n    //   return {\n    //     left: left,\n    //     top: top,\n    //     right: right,\n    //     bottom: bottom,\n    //     ...opt\n    //   }\n    // },\n    visualMap: function visualMap() {\n      console.log(this.pieces, 'pieces111'); // console.log('this.visualMapShow', this.visualMapShow)\n\n      if (this.visualMapType === 'piecewise') {\n        return _objectSpread({}, visualMapOpt(this.visualMapLeft, this.visualMapTop, this.visualMapRight, this.visualMapBottom, this.visualMapOrient, this.visualMapAlign), {\n          pieces: this.pieces,\n          type: this.visualMapType,\n          show: this.visualMapShow,\n          inRange: {\n            color: this.visualMapRangeColor //['rgba(219,112,147,0.4)', 'rgba(238,25,27,1)']\n\n          },\n          // color: ['rgba(219,112,147,0.4)', 'rgba(238,25,27,1)'], //[this.colors[0], this.colors[1]],\n          // text: this.visualMapText, //['高', '低'], // 文本，默认为数值文本\n          textStyle: {\n            show: true,\n            fontSize: this.visualMapFontSize,\n            color: this.visualMapTextColor //this.colors[3]\n\n          },\n          calculable: true\n        });\n      } else {\n        return _objectSpread({}, visualMapOpt(this.visualMapLeft, this.visualMapTop, this.visualMapRight, this.visualMapBottom, this.visualMapOrient, this.visualMapAlign), {\n          type: this.visualMapType,\n          show: this.visualMapShow,\n          min: this.visualMapMin,\n          //this.minValue, //this.min\n          max: this.visualMapMax,\n          //this.maxValue, //this.max,\n          inRange: {\n            color: this.visualMapRangeColor //['rgba(219,112,147,0.4)', 'rgba(238,25,27,1)']\n\n          },\n          // color: ['rgba(219,112,147,0.4)', 'rgba(238,25,27,1)'], //[this.colors[0], this.colors[1]],\n          text: this.visualMapText,\n          //['高', '低'], // 文本，默认为数值文本\n          textStyle: {\n            fontSize: this.visualMapFontSize,\n            color: this.visualMapTextColor //this.colors[3]\n\n          },\n          calculable: true\n        });\n      }\n    } // createTplCode(zjNm, imNm) {\n    //   let propsKeys = Object.keys(this._props).map(\n    //     _ => `:${_}=\"chartParams.${_}\"`\n    //   )\n    //   console.log(`<${zjNm}  ${propsKeys.join(' ')}></${zjNm}>`)\n    // }\n\n  }\n};",{"version":3,"sources":["D:\\工作项目\\部反诈\\src\\mixins\\visualMapMixin.js"],"names":["visualMapOpt","storage","chartColors","get","props","visualMapShow","type","Boolean","default","visualMapType","String","splitNumber","Number","pieces","Array","min","max","visualMapOrient","visualMapAlign","visualMapLeft","visualMapRight","visualMapTop","visualMapBottom","visualMapMin","visualMapMax","visualMapText","visualMapTextColor","visualMap","text","visualMapRangeColor","range","visualMapFontSize","data","chartName","options","created","mounted","refresh","watch","handler","newVal","oldVal","deep","methods","setOptions","refreshCallback","console","log","show","inRange","color","textStyle","fontSize","calculable"],"mappings":"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","sourcesContent":["import { visualMapOpt } from 'constants/chartConfig'\r\nimport storage from \"utils/storage\"\r\nconst chartColors = storage.get('tColors')\r\nexport default {\r\n  props: {\r\n    visualMapShow: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    visualMapType: {\r\n      type: String,\r\n      default: 'continuous'\r\n    },\r\n    splitNumber: {\r\n      type: Number,\r\n      default: 5\r\n    },\r\n    pieces: {\r\n      type: Array,\r\n      default: () => {\r\n        return [\r\n          { min: 100000 },\r\n          { min: 50000, max: 99999 },\r\n          { min: 10000, max: 49999 },\r\n          { min: 1000, max: 9999 },\r\n          { min: 0, max: 999 }\r\n        ]\r\n      }\r\n    },\r\n    visualMapOrient: {\r\n      type: String,\r\n      default: 'vertical'\r\n    },\r\n    visualMapAlign: {\r\n      type: String,\r\n      default: 'auto'\r\n    },\r\n    visualMapLeft: {\r\n      type: [String, Number],\r\n      default: () => 0\r\n    },\r\n    visualMapRight: {\r\n      type: [String, Number],\r\n      default: () => 'auto'\r\n    },\r\n    visualMapTop: {\r\n      type: [String, Number],\r\n      default: () => 'auto'\r\n    },\r\n    visualMapBottom: {\r\n      type: [String, Number],\r\n      default: () => 0\r\n    },\r\n    visualMapMin: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    visualMapMax: {\r\n      type: Number,\r\n      default: 999999\r\n    },\r\n    visualMapText: {\r\n      type: Array,\r\n      default: () => ['高', '低']\r\n    },\r\n    visualMapTextColor: {\r\n      type: String,\r\n      default: chartColors.visualMap.text\r\n    },\r\n    visualMapRangeColor: {\r\n      type: Array,\r\n      default: () => chartColors.visualMap.range\r\n    },\r\n    visualMapFontSize: {\r\n      type: Number,\r\n      default: 12\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chartName: '注意：没有给图表制定名称，请及时补充图表名称.........',\r\n      options: {}\r\n    }\r\n  },\r\n  created() {\r\n    // console.log(`准备构建图表组件${this.chartName}`)\r\n  },\r\n  mounted() {\r\n    this.refresh()\r\n  },\r\n  watch: {\r\n    pieces: {\r\n      handler(newVal, oldVal) {\r\n        this.refresh()\r\n      },\r\n      deep: true\r\n    },\r\n    visualMapType() {\r\n      this.refresh()\r\n    },\r\n    splitNumber() {\r\n      this.refresh()\r\n    },\r\n    visualMapShow() {\r\n      // console.log(\r\n      //   `${this.chartName}visualMapShow[新值:${this.newVal};旧值:${\r\n      //     this.oldVal\r\n      //   }]`\r\n      // )\r\n      this.refresh()\r\n    },\r\n    visualMapOrient() {\r\n      // console.log(\r\n      //   `${this.chartName}visualMapOrient[新值:${this.newVal};旧值:${\r\n      //     this.oldVal\r\n      //   }]`\r\n      // )\r\n      this.refresh()\r\n    },\r\n    visualMapAlign() {\r\n      // console.log(\r\n      //   `${this.chartName}visualMapAlign[新值:${this.newVal};旧值:${\r\n      //     this.oldVal\r\n      //   }]`\r\n      // )\r\n      this.refresh()\r\n    },\r\n    visualMapLeft() {\r\n      // console.log(\r\n      //   `${this.chartName}visualMapLeft[新值:${this.newVal};旧值:${\r\n      //     this.oldVal\r\n      //   }]`\r\n      // )\r\n      this.refresh()\r\n    },\r\n    visualMapRight() {\r\n      // console.log(\r\n      //   `${this.chartName}visualMapRight[新值:${this.newVal};旧值:${\r\n      //     this.oldVal\r\n      //   }]`\r\n      // )\r\n      this.refresh()\r\n    },\r\n    visualMapTop() {\r\n      // console.log(\r\n      //   `${this.chartName}visualMapTop[新值:${this.newVal};旧值:${this.oldVal}]`\r\n      // )\r\n      this.refresh()\r\n    },\r\n    visualMapBottom() {\r\n      // console.log(\r\n      //   `${this.chartName}visualMapBottom[新值:${this.newVal};旧值:${\r\n      //     this.oldVal\r\n      //   }]`\r\n      // )\r\n      this.refresh()\r\n    },\r\n    visualMapMin() {\r\n      // console.log(`${this.chartName}visualMapMin[新值:${this.newVal};旧值:${this.oldVal}]`)\r\n      this.refresh()\r\n    },\r\n    visualMapMax() {\r\n      // console.log(`${this.chartName}visualMapMax[新值:${this.newVal};旧值:${this.oldVal}]`)\r\n      this.refresh()\r\n    },\r\n    visualMapText() {\r\n      // console.log(`${this.chartName}visualMapText[新值:${this.newVal};旧值:${this.oldVal}]`)\r\n      this.refresh()\r\n    },\r\n    visualMapTextColor() {\r\n      // console.log(`${this.chartName}visualMapTextColor[新值:${this.newVal};旧值:${this.oldVal}]`)\r\n      this.refresh()\r\n    },\r\n    visualMapRangeColor() {\r\n      // console.log(`${this.chartName}visualMapRangeColor[新值:${this.newVal};旧值:${this.oldVal}]`)\r\n      this.refresh()\r\n    },\r\n    visualMapFontSize() {\r\n      // console.log(`${this.chartName}visualMapRangeColor[新值:${this.newVal};旧值:${this.oldVal}]`)\r\n      this.refresh()\r\n    }\r\n  },\r\n  methods: {\r\n    refresh() {\r\n      this.options = this.setOptions()\r\n      if (this.refreshCallback) {\r\n        this.refreshCallback()\r\n      }\r\n    },\r\n    // gridOpt(opt) {\r\n    //   let [left, top, right, bottom] = [\r\n    //     this.gridLeft || 'auto',\r\n    //     this.gridTop || 'auto',\r\n    //     this.gridRight || 'auto',\r\n    //     this.gridBottom || 'auto'\r\n    //   ]\r\n    //   return {\r\n    //     left: left,\r\n    //     top: top,\r\n    //     right: right,\r\n    //     bottom: bottom,\r\n    //     ...opt\r\n    //   }\r\n    // },\r\n    visualMap() {\r\n      console.log(this.pieces, 'pieces111')\r\n      // console.log('this.visualMapShow', this.visualMapShow)\r\n      if (this.visualMapType === 'piecewise') {\r\n        return {\r\n          ...visualMapOpt(\r\n            this.visualMapLeft,\r\n            this.visualMapTop,\r\n            this.visualMapRight,\r\n            this.visualMapBottom,\r\n            this.visualMapOrient,\r\n            this.visualMapAlign\r\n          ),\r\n          pieces: this.pieces,\r\n          type: this.visualMapType,\r\n          show: this.visualMapShow,\r\n          inRange: {\r\n            color: this.visualMapRangeColor //['rgba(219,112,147,0.4)', 'rgba(238,25,27,1)']\r\n          },\r\n          // color: ['rgba(219,112,147,0.4)', 'rgba(238,25,27,1)'], //[this.colors[0], this.colors[1]],\r\n          // text: this.visualMapText, //['高', '低'], // 文本，默认为数值文本\r\n          textStyle: {\r\n            show: true,\r\n            fontSize: this.visualMapFontSize,\r\n            color: this.visualMapTextColor //this.colors[3]\r\n          },\r\n          calculable: true\r\n        }\r\n      } else {\r\n        return {\r\n          ...visualMapOpt(\r\n            this.visualMapLeft,\r\n            this.visualMapTop,\r\n            this.visualMapRight,\r\n            this.visualMapBottom,\r\n            this.visualMapOrient,\r\n            this.visualMapAlign\r\n          ),\r\n          type: this.visualMapType,\r\n          show: this.visualMapShow,\r\n          min: this.visualMapMin, //this.minValue, //this.min\r\n          max: this.visualMapMax, //this.maxValue, //this.max,\r\n          inRange: {\r\n            color: this.visualMapRangeColor //['rgba(219,112,147,0.4)', 'rgba(238,25,27,1)']\r\n          },\r\n          // color: ['rgba(219,112,147,0.4)', 'rgba(238,25,27,1)'], //[this.colors[0], this.colors[1]],\r\n          text: this.visualMapText, //['高', '低'], // 文本，默认为数值文本\r\n          textStyle: {\r\n            fontSize: this.visualMapFontSize,\r\n            color: this.visualMapTextColor //this.colors[3]\r\n          },\r\n          calculable: true\r\n        }\r\n      }\r\n    }\r\n    // createTplCode(zjNm, imNm) {\r\n    //   let propsKeys = Object.keys(this._props).map(\r\n    //     _ => `:${_}=\"chartParams.${_}\"`\r\n    //   )\r\n    //   console.log(`<${zjNm}  ${propsKeys.join(' ')}></${zjNm}>`)\r\n    // }\r\n  }\r\n}\r\n"]}]}