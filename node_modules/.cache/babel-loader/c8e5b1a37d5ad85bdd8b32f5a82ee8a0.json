{"remainingRequest":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js!D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\工作项目\\部反诈\\src\\utils\\map3d\\components\\visual-map\\piecewise.js","dependencies":[{"path":"D:\\工作项目\\部反诈\\src\\utils\\map3d\\components\\visual-map\\piecewise.js","mtime":1598758375205},{"path":"D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport _Array$from from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/array/from\";\nimport \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _Object$assign from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport _objectSpread from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/inherits\";\nimport merge from 'lodash/merge';\nimport { scaleLinear } from 'd3-scale';\nimport Mixin from '../../core/mixin';\nimport { on, off } from '../../libs/dom';\nimport { toFixed } from '../../tool/util';\nimport { getTranslate } from '../../core/layout';\nimport { drawText, genColors, getTextWidth } from '../../tool/canvas';\nimport { drawRoundRect, drawRect } from '../../core/shape';\nimport { piecewiseOptions } from './options';\n\nvar PiecewiseVisualMap =\n/*#__PURE__*/\nfunction (_Mixin) {\n  _inherits(PiecewiseVisualMap, _Mixin);\n\n  function PiecewiseVisualMap(el, options) {\n    var _this;\n\n    _classCallCheck(this, PiecewiseVisualMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PiecewiseVisualMap).call(this, el, options));\n    _this.layout = {};\n    _this.options = merge({}, piecewiseOptions, options);\n    _this.options.show && _this.init();\n    return _this;\n  }\n\n  _createClass(PiecewiseVisualMap, [{\n    key: \"init\",\n    value: function init() {\n      var _this$options = this.options,\n          color = _this$options.color,\n          splitNumber = _this$options.splitNumber;\n      !this.options.context && this.setSize();\n      !this.options.context && this.initCanvas();\n      this.color = genColors(color, splitNumber, this.ctx);\n      this.setLayout();\n      this.render();\n      on(this.el, 'mousemove', this.repaint.bind(this));\n      on(this.el, 'click', this.repaint.bind(this));\n      !this.options.context && on(window, 'resize', this.resize.bind(this));\n    }\n  }, {\n    key: \"mouseDetect\",\n    value: function mouseDetect(options) {\n      this.response.push(options);\n\n      if (this.mouse.event.type === 'click') {\n        this.emit('click', this.response[0], this.response);\n      } else {\n        this.el.style.cursor = 'pointer';\n        this.emit('mouseover', this.response[0], this.response);\n      }\n    }\n  }, {\n    key: \"setLayout\",\n    value: function setLayout() {\n      var _this2 = this;\n\n      var _this$options2 = this.options,\n          itemHeight = _this$options2.itemHeight,\n          itemWidth = _this$options2.itemWidth,\n          pieces = _this$options2.pieces,\n          categories = _this$options2.categories,\n          itemGap = _this$options2.itemGap,\n          orient = _this$options2.orient,\n          unit = _this$options2.unit,\n          textStyle = _this$options2.textStyle,\n          inverse = _this$options2.inverse,\n          text = _this$options2.text,\n          textGap = _this$options2.textGap,\n          right = _this$options2.right,\n          top = _this$options2.top;\n      this.itemList = pieces || categories || this.getItemList();\n      this.text0 = _objectSpread({}, textStyle, {\n        text: '',\n        textAlign: 'left',\n        textBaseline: 'top'\n      });\n      this.text1 = _objectSpread({}, textStyle, {\n        text: '',\n        textAlign: 'left',\n        textBaseline: 'top'\n      });\n      var x = 0,\n          y = 0,\n          width = 0,\n          height = 0,\n          text0Width = 0,\n          text0Height = 0,\n          text1Width = 0,\n          text1Height = 0;\n\n      if (text) {\n        if (text[0]) {\n          text0Width = getTextWidth(this.ctx, text[0], textStyle);\n          text0Height = textStyle.fontSize;\n\n          _Object$assign(this.text0, {\n            text: text[0],\n            width: text0Width,\n            height: text0Height\n          });\n        }\n\n        if (text[1]) {\n          text1Width = getTextWidth(this.ctx, text[1], textStyle);\n          text1Height = textStyle.fontSize;\n\n          _Object$assign(this.text1, {\n            text: text[1],\n            width: text1Width,\n            height: text1Height\n          });\n        }\n      }\n\n      inverse && this.itemList.reverse();\n      this.itemList.forEach(function (item, i) {\n        var _item$min = item.min,\n            min = _item$min === void 0 ? -Infinity : _item$min,\n            _item$max = item.max,\n            max = _item$max === void 0 ? Infinity : _item$max,\n            _item$color = item.color,\n            color = _item$color === void 0 ? _this2.color[i] : _item$color;\n        var text = \"\".concat(min, \" - \").concat(max) + (unit ? \" \".concat(unit) : '');\n        max === Infinity && (text = \">= \".concat(min));\n        min === -Infinity && (text = \"<= \".concat(max));\n        item.max = max;\n        item.min = min;\n        var textWidth = getTextWidth(_this2.ctx, text, textStyle),\n            h = Math.max(itemHeight, textStyle.fontSize);\n\n        if (orient === 'vertical') {\n          var tempWidth = itemWidth + itemGap + textWidth;\n          width = width > tempWidth ? width : tempWidth;\n          height += h + itemGap;\n          y = i * (h + itemGap) + (text0Height ? text0Height + textGap : 0);\n        } else {\n          x = text0Width ? text0Width + textGap : 0;\n\n          if (i !== 0) {\n            x += width + itemGap;\n          }\n\n          width += itemWidth + itemGap * 2 + textWidth;\n          height = h;\n        }\n\n        item.x = x;\n        item.y = y;\n        item.color = color;\n        item.text = text;\n        item.textWidth = textWidth;\n        item.selected = true;\n      });\n\n      if (text) {\n        if (orient === 'vertical') {\n          width = Math.max(text0Width, text1Width, width);\n          height += (text0Height ? text0Height + textGap : 0) + (text1Height ? text1Height + textGap : 0);\n        } else {\n          width += (text0Width ? text0Width + textGap : 0) + (text1Width ? text1Width + textGap : 0);\n        }\n      }\n\n      var _getTranslate = getTranslate(this.el, this.options, {\n        width: width,\n        height: height,\n        rightWidth: itemWidth\n      }),\n          translateX = _getTranslate.translateX,\n          translateY = _getTranslate.translateY;\n\n      if (text) {\n        if (orient === 'vertical') {\n          this.text0.x = (right !== 'auto' ? -text0Width + itemWidth : 0) + translateX;\n          this.text0.y = (top !== 'auto' ? 0 : itemGap) + translateY;\n          this.text1.x = (right !== 'auto' ? -text1Width + itemWidth : 0) + translateX;\n          this.text1.y = height - text1Height - (top === 'auto' ? 0 : itemGap) + translateY;\n        } else {\n          this.text0.x = translateX;\n          this.text0.y = translateY;\n          this.text1.x = width - text1Width + translateX;\n          this.text1.y = translateY;\n        }\n      }\n\n      this.layout = {\n        width: width,\n        height: height,\n        translateX: translateX,\n        translateY: translateY\n      };\n      this.setItemlistLayout();\n    }\n  }, {\n    key: \"setItemlistLayout\",\n    value: function setItemlistLayout() {\n      var _this$layout = this.layout,\n          translateX = _this$layout.translateX,\n          translateY = _this$layout.translateY,\n          _this$options3 = this.options,\n          itemWidth = _this$options3.itemWidth,\n          itemHeight = _this$options3.itemHeight,\n          itemGap = _this$options3.itemGap,\n          right = _this$options3.right,\n          top = _this$options3.top,\n          orient = _this$options3.orient;\n      this.itemList.forEach(function (item) {\n        var x = item.x,\n            y = item.y,\n            deltaxText = right !== 'auto' && orient === 'vertical' ? -1 : 1,\n            deltaY = orient === 'horizontal' ? 0 : top !== 'auto' ? 0 : 1,\n            rectx = x + translateX,\n            recty = y + translateY + itemGap * deltaY,\n            textx = x + translateX + itemGap + itemWidth * deltaxText,\n            texty = y + translateY + itemHeight / 2 + itemGap * deltaY;\n        item.rectx = rectx;\n        item.recty = recty;\n        item.textx = textx;\n        item.texty = texty;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      this.renderInit();\n      this.response = [];\n      var _this$options4 = this.options,\n          textStyle = _this$options4.textStyle,\n          itemHeight = _this$options4.itemHeight,\n          right = _this$options4.right,\n          orient = _this$options4.orient,\n          inactiveColor = _this$options4.inactiveColor;\n      this.setItemlistLayout();\n      drawText(this.ctx, this.text0);\n      drawText(this.ctx, this.text1);\n      this.itemList.forEach(function (item) {\n        var textx = item.textx,\n            texty = item.texty,\n            text = item.text,\n            textWidth = item.textWidth;\n        var change = false;\n\n        _this3.drawFillRoundRect(item);\n\n        _this3.drawTextRect(textx, texty - itemHeight / 2, textWidth, textStyle.fontSize);\n\n        drawText(_this3.ctx, _objectSpread({}, textStyle, {\n          text: text,\n          textAlign: right !== 'auto' && orient === 'vertical' ? 'right' : 'left',\n          x: textx,\n          y: texty,\n          detect: function detect(textOptions) {\n            if (_this3.isDetect()) {\n              if (_this3.mouse.event.type === 'click') {\n                change = true;\n                item.selected = !item.selected;\n              }\n\n              _this3.mouseDetect(_objectSpread({\n                type: 'text'\n              }, item));\n            }\n\n            _this3.ctx.fillStyle = item.selected ? textStyle.color : inactiveColor;\n\n            _this3.ctx.fillText(text, textx, texty);\n          }\n        }));\n        change && _this3.drawFillRoundRect(item, true);\n      });\n\n      if (!this.response.length) {\n        this.el.style.cursor = 'default';\n        this.emit('mouseout');\n      }\n    }\n  }, {\n    key: \"renderInit\",\n    value: function renderInit() {\n      this.ctx.clearRect(0, 0, this.size.width, this.size.height); // const {translateX, translateY, width, height} = this.layout\n      // this.ctx.clearRect(translateX, translateY, width, height)\n      // this.drawBg()\n    }\n  }, {\n    key: \"drawBg\",\n    value: function drawBg() {\n      var _this$layout2 = this.layout,\n          translateX = _this$layout2.translateX,\n          translateY = _this$layout2.translateY,\n          width = _this$layout2.width,\n          height = _this$layout2.height,\n          _this$options5 = this.options,\n          background = _this$options5.background,\n          borderColor = _this$options5.borderColor,\n          borderWidth = _this$options5.borderWidth;\n      drawRect(this.ctx, {\n        x: translateX,\n        y: translateY,\n        width: width,\n        height: height,\n        color: background\n      });\n      borderWidth && drawRect(this.ctx, {\n        x: translateX,\n        y: translateY,\n        width: width,\n        height: height,\n        color: borderColor,\n        type: 'stroke',\n        lineWidth: borderWidth\n      });\n    }\n  }, {\n    key: \"drawFillRoundRect\",\n    value: function drawFillRoundRect(options, redraw) {\n      var x = options.rectx,\n          y = options.recty,\n          color = options.color,\n          _this$options6 = this.options,\n          itemWidth = _this$options6.itemWidth,\n          itemHeight = _this$options6.itemHeight,\n          itemRadius = _this$options6.itemRadius;\n      this.ctx.save();\n      this.ctx.translate(x, y);\n      redraw && this.ctx.clearRect(0, 0, itemWidth, itemHeight);\n      drawRoundRect(this.ctx, itemWidth, itemHeight, itemRadius);\n\n      if (!redraw && this.isDetect()) {\n        if (this.mouse.event.type === 'click') {\n          options.selected = !options.selected;\n        }\n\n        this.mouseDetect(_objectSpread({}, options, {\n          type: 'roundRect'\n        }));\n      }\n\n      this.ctx.fillStyle = options.selected ? color : this.options.inactiveColor;\n      this.ctx.fill();\n      this.ctx.restore();\n    } // 辅助text鼠标事件\n\n  }, {\n    key: \"drawTextRect\",\n    value: function drawTextRect(x, y, width, height) {\n      this.ctx.save();\n      this.ctx.beginPath();\n      this.ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n      this.ctx.rect(x, y, width, height);\n      this.ctx.closePath();\n      this.ctx.fill();\n      this.ctx.restore();\n    }\n  }, {\n    key: \"getItemList\",\n    value: function getItemList() {\n      var _this4 = this;\n\n      var _this$options7 = this.options,\n          splitNumber = _this$options7.splitNumber,\n          max = _this$options7.max,\n          min = _this$options7.min,\n          precision = _this$options7.precision,\n          pieceValue = (max - min) / splitNumber;\n      this.valueScale = scaleLinear().domain([min, max]).range([0, splitNumber]);\n      return _Array$from({\n        length: splitNumber\n      }, function (item, i) {\n        var min = toFixed(i * pieceValue, precision),\n            max = toFixed((i + 1) * pieceValue, precision);\n        return {\n          min: min,\n          max: max,\n          color: _this4.color[_this4.valueScale(i * pieceValue)]\n        };\n      });\n    }\n  }, {\n    key: \"getColor\",\n    value: function getColor(value) {\n      var item = this.itemList.find(function (item) {\n        return value >= item.min && value <= item.max;\n      });\n      if (item) return item.color;\n      var _this$options8 = this.options,\n          min = _this$options8.min,\n          max = _this$options8.max;\n      if (min > value) return this.color[0];\n      if (max < value) return this.color.slice(-1)[0];\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      off(this.el, 'mousemove', this.repaint.bind(this));\n      off(this.el, 'click', this.repaint.bind(this));\n      this.off('click');\n      this.off('mouseover');\n      this.off('mouseout');\n      !this.options.context && off(window, 'resize', this.resize.bind(this));\n    }\n  }]);\n\n  return PiecewiseVisualMap;\n}(Mixin);\n\nexport { PiecewiseVisualMap as default };",{"version":3,"sources":["D:\\工作项目\\部反诈\\src\\utils\\map3d\\components\\visual-map\\piecewise.js"],"names":["merge","scaleLinear","Mixin","on","off","toFixed","getTranslate","drawText","genColors","getTextWidth","drawRoundRect","drawRect","piecewiseOptions","PiecewiseVisualMap","el","options","layout","show","init","color","splitNumber","context","setSize","initCanvas","ctx","setLayout","render","repaint","bind","window","resize","response","push","mouse","event","type","emit","style","cursor","itemHeight","itemWidth","pieces","categories","itemGap","orient","unit","textStyle","inverse","text","textGap","right","top","itemList","getItemList","text0","textAlign","textBaseline","text1","x","y","width","height","text0Width","text0Height","text1Width","text1Height","fontSize","reverse","forEach","item","i","min","Infinity","max","textWidth","h","Math","tempWidth","selected","rightWidth","translateX","translateY","setItemlistLayout","deltaxText","deltaY","rectx","recty","textx","texty","renderInit","inactiveColor","change","drawFillRoundRect","drawTextRect","detect","textOptions","isDetect","mouseDetect","fillStyle","fillText","length","clearRect","size","background","borderColor","borderWidth","lineWidth","redraw","itemRadius","save","translate","fill","restore","beginPath","rect","closePath","precision","pieceValue","valueScale","domain","range","value","find","slice"],"mappings":"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","sourcesContent":["import merge from 'lodash/merge'\nimport { scaleLinear } from 'd3-scale'\nimport Mixin from '../../core/mixin'\nimport { on, off } from '../../libs/dom'\nimport { toFixed } from '../../tool/util'\nimport { getTranslate } from '../../core/layout'\nimport { drawText, genColors, getTextWidth } from '../../tool/canvas'\nimport { drawRoundRect, drawRect } from '../../core/shape'\nimport { piecewiseOptions } from './options'\n\nexport default class PiecewiseVisualMap extends Mixin {\n  constructor(el, options) {\n    super(el, options)\n    this.layout = {}\n    this.options = merge({}, piecewiseOptions, options)\n    this.options.show && this.init()\n  }\n\n  init() {\n    const { color, splitNumber } = this.options\n    !this.options.context && this.setSize()\n    !this.options.context && this.initCanvas()\n    this.color = genColors(color, splitNumber, this.ctx)\n    this.setLayout()\n    this.render()\n    on(this.el, 'mousemove', this.repaint.bind(this))\n    on(this.el, 'click', this.repaint.bind(this))\n    !this.options.context && on(window, 'resize', this.resize.bind(this))\n  }\n\n  mouseDetect(options) {\n    this.response.push(options)\n    if (this.mouse.event.type === 'click') {\n      this.emit('click', this.response[0], this.response)\n    } else {\n      this.el.style.cursor = 'pointer'\n      this.emit('mouseover', this.response[0], this.response)\n    }\n  }\n\n  setLayout() {\n    const {\n      itemHeight,\n      itemWidth,\n      pieces,\n      categories,\n      itemGap,\n      orient,\n      unit,\n      textStyle,\n      inverse,\n      text,\n      textGap,\n      right,\n      top\n    } = this.options\n\n    this.itemList = pieces || categories || this.getItemList()\n    this.text0 = {\n      ...textStyle,\n      text: '',\n      textAlign: 'left',\n      textBaseline: 'top'\n    }\n    this.text1 = {\n      ...textStyle,\n      text: '',\n      textAlign: 'left',\n      textBaseline: 'top'\n    }\n\n    let x = 0,\n      y = 0,\n      width = 0,\n      height = 0,\n      text0Width = 0,\n      text0Height = 0,\n      text1Width = 0,\n      text1Height = 0\n\n    if (text) {\n      if (text[0]) {\n        text0Width = getTextWidth(this.ctx, text[0], textStyle)\n        text0Height = textStyle.fontSize\n        Object.assign(this.text0, {\n          text: text[0],\n          width: text0Width,\n          height: text0Height\n        })\n      }\n      if (text[1]) {\n        text1Width = getTextWidth(this.ctx, text[1], textStyle)\n        text1Height = textStyle.fontSize\n        Object.assign(this.text1, {\n          text: text[1],\n          width: text1Width,\n          height: text1Height\n        })\n      }\n    }\n    inverse && this.itemList.reverse()\n    this.itemList.forEach((item, i) => {\n      const { min = -Infinity, max = Infinity, color = this.color[i] } = item\n      let text = `${min} - ${max}` + (unit ? ` ${unit}` : '')\n      max === Infinity && (text = `>= ${min}`)\n      min === -Infinity && (text = `<= ${max}`)\n      item.max = max\n      item.min = min\n      const textWidth = getTextWidth(this.ctx, text, textStyle),\n        h = Math.max(itemHeight, textStyle.fontSize)\n      if (orient === 'vertical') {\n        const tempWidth = itemWidth + itemGap + textWidth\n        width = width > tempWidth ? width : tempWidth\n        height += h + itemGap\n        y = i * (h + itemGap) + (text0Height ? text0Height + textGap : 0)\n      } else {\n        x = text0Width ? text0Width + textGap : 0\n        if (i !== 0) {\n          x += width + itemGap\n        }\n        width += itemWidth + itemGap * 2 + textWidth\n        height = h\n      }\n      item.x = x\n      item.y = y\n      item.color = color\n      item.text = text\n      item.textWidth = textWidth\n      item.selected = true\n    })\n\n    if (text) {\n      if (orient === 'vertical') {\n        width = Math.max(text0Width, text1Width, width)\n        height +=\n          (text0Height ? text0Height + textGap : 0) +\n          (text1Height ? text1Height + textGap : 0)\n      } else {\n        width +=\n          (text0Width ? text0Width + textGap : 0) +\n          (text1Width ? text1Width + textGap : 0)\n      }\n    }\n\n    const { translateX, translateY } = getTranslate(this.el, this.options, {\n      width,\n      height,\n      rightWidth: itemWidth\n    })\n\n    if (text) {\n      if (orient === 'vertical') {\n        this.text0.x =\n          (right !== 'auto' ? -text0Width + itemWidth : 0) + translateX\n        this.text0.y = (top !== 'auto' ? 0 : itemGap) + translateY\n        this.text1.x =\n          (right !== 'auto' ? -text1Width + itemWidth : 0) + translateX\n        this.text1.y =\n          height - text1Height - (top === 'auto' ? 0 : itemGap) + translateY\n      } else {\n        this.text0.x = translateX\n        this.text0.y = translateY\n        this.text1.x = width - text1Width + translateX\n        this.text1.y = translateY\n      }\n    }\n    this.layout = {\n      width,\n      height,\n      translateX,\n      translateY\n    }\n\n    this.setItemlistLayout()\n  }\n\n  setItemlistLayout() {\n    const { translateX, translateY } = this.layout,\n      { itemWidth, itemHeight, itemGap, right, top, orient } = this.options\n\n    this.itemList.forEach(item => {\n      const { x, y } = item,\n        deltaxText = right !== 'auto' && orient === 'vertical' ? -1 : 1,\n        deltaY = orient === 'horizontal' ? 0 : top !== 'auto' ? 0 : 1,\n        rectx = x + translateX,\n        recty = y + translateY + itemGap * deltaY,\n        textx = x + translateX + itemGap + itemWidth * deltaxText,\n        texty = y + translateY + itemHeight / 2 + itemGap * deltaY\n      item.rectx = rectx\n      item.recty = recty\n      item.textx = textx\n      item.texty = texty\n    })\n  }\n\n  render() {\n    this.renderInit()\n    this.response = []\n    const { textStyle, itemHeight, right, orient, inactiveColor } = this.options\n\n    this.setItemlistLayout()\n    drawText(this.ctx, this.text0)\n    drawText(this.ctx, this.text1)\n\n    this.itemList.forEach(item => {\n      const { textx, texty, text, textWidth } = item\n      let change = false\n      this.drawFillRoundRect(item)\n      this.drawTextRect(\n        textx,\n        texty - itemHeight / 2,\n        textWidth,\n        textStyle.fontSize\n      )\n      drawText(this.ctx, {\n        ...textStyle,\n        text,\n        textAlign: right !== 'auto' && orient === 'vertical' ? 'right' : 'left',\n        x: textx,\n        y: texty,\n        detect: textOptions => {\n          if (this.isDetect()) {\n            if (this.mouse.event.type === 'click') {\n              change = true\n              item.selected = !item.selected\n            }\n            this.mouseDetect({\n              type: 'text',\n              ...item\n            })\n          }\n          this.ctx.fillStyle = item.selected ? textStyle.color : inactiveColor\n          this.ctx.fillText(text, textx, texty)\n        }\n      })\n\n      change && this.drawFillRoundRect(item, true)\n    })\n    if (!this.response.length) {\n      this.el.style.cursor = 'default'\n      this.emit('mouseout')\n    }\n  }\n\n  renderInit() {\n    this.ctx.clearRect(0, 0, this.size.width, this.size.height)\n    // const {translateX, translateY, width, height} = this.layout\n    // this.ctx.clearRect(translateX, translateY, width, height)\n    // this.drawBg()\n  }\n\n  drawBg() {\n    const { translateX, translateY, width, height } = this.layout,\n      { background, borderColor, borderWidth } = this.options\n    drawRect(this.ctx, {\n      x: translateX,\n      y: translateY,\n      width,\n      height,\n      color: background\n    })\n    borderWidth &&\n      drawRect(this.ctx, {\n        x: translateX,\n        y: translateY,\n        width,\n        height,\n        color: borderColor,\n        type: 'stroke',\n        lineWidth: borderWidth\n      })\n  }\n\n  drawFillRoundRect(options, redraw) {\n    const { rectx: x, recty: y, color } = options,\n      { itemWidth, itemHeight, itemRadius } = this.options\n    this.ctx.save()\n    this.ctx.translate(x, y)\n    redraw && this.ctx.clearRect(0, 0, itemWidth, itemHeight)\n    drawRoundRect(this.ctx, itemWidth, itemHeight, itemRadius)\n    if (!redraw && this.isDetect()) {\n      if (this.mouse.event.type === 'click') {\n        options.selected = !options.selected\n      }\n      this.mouseDetect({ ...options, type: 'roundRect' })\n    }\n    this.ctx.fillStyle = options.selected ? color : this.options.inactiveColor\n    this.ctx.fill()\n    this.ctx.restore()\n  }\n\n  // 辅助text鼠标事件\n  drawTextRect(x, y, width, height) {\n    this.ctx.save()\n    this.ctx.beginPath()\n    this.ctx.fillStyle = 'rgba(0, 0, 0, 0)'\n    this.ctx.rect(x, y, width, height)\n    this.ctx.closePath()\n    this.ctx.fill()\n    this.ctx.restore()\n  }\n\n  getItemList() {\n    const { splitNumber, max, min, precision } = this.options,\n      pieceValue = (max - min) / splitNumber\n    this.valueScale = scaleLinear()\n      .domain([min, max])\n      .range([0, splitNumber])\n    return Array.from({ length: splitNumber }, (item, i) => {\n      const min = toFixed(i * pieceValue, precision),\n        max = toFixed((i + 1) * pieceValue, precision)\n      return {\n        min,\n        max,\n        color: this.color[this.valueScale(i * pieceValue)]\n      }\n    })\n  }\n\n  getColor(value) {\n    const item = this.itemList.find(\n      item => value >= item.min && value <= item.max\n    )\n    if (item) return item.color\n    const { min, max } = this.options\n    if (min > value) return this.color[0]\n    if (max < value) return this.color.slice(-1)[0]\n  }\n\n  destroy() {\n    off(this.el, 'mousemove', this.repaint.bind(this))\n    off(this.el, 'click', this.repaint.bind(this))\n    this.off('click')\n    this.off('mouseover')\n    this.off('mouseout')\n    !this.options.context && off(window, 'resize', this.resize.bind(this))\n  }\n}\n"]}]}