{"remainingRequest":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js!D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\工作项目\\部反诈\\src\\views\\aggregation\\sameMixin.js","dependencies":[{"path":"D:\\工作项目\\部反诈\\src\\views\\aggregation\\sameMixin.js","mtime":1598758387144},{"path":"D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport ChartBox from \"components/chartBox\";\nimport PictorialBar from 'components/echarts/pictorialBar/pictorialBar';\nimport LineChart from 'components/echarts/line/lineChart';\nimport VisualMapChart from 'components/echarts/map/visualMapChart';\nimport BarChart from 'components/echarts/bar/barChart'; // import Map3D from '@/utils/map3d'\n// import mapJson from '@/assets/map/china.json'\n\nimport { randomInRange } from '@/mock/tool'; //eslint-disable-line\n// import {getMap3dData} from '@/mock/map'\n// import {getData} from \"./data\"\n\nimport { // getAuthorityReportData,\n// getIndependentDiscoveryData,\n// getGroupReport,\n// get12321Report,\n// getPublicSecurityCoordination,\n// getFraudRank,\ngetFraudAppRank as _getFraudAppRank, getFraudDomainRank as _getFraudDomainRank, getFraudUrlRank as _getFraudUrlRank, getFraudMessageRank as _getFraudMessageRank, getProvinceSystemDocking as _getProvinceSystemDocking, getFraudAppTop as _getFraudAppTop, getFraudDomainTop as _getFraudDomainTop, getFraudUrlTop as _getFraudUrlTop, getFraudMessageTop as _getFraudMessageTop } from 'api/aggregation'; // import {getAuthorityReportData, getIndependentDiscoveryData, getGroupReport, get12321Report, getPublicSecurityCoordination, getFraudAppRank, getFraudDomainRank, getFraudUrlRank, getFraudMessageRank} from 'api/aggregation'//eslint-disable-line\n\nexport default {\n  name: 'Aggregation',\n  props: {},\n  components: {\n    ChartBox: ChartBox,\n    PictorialBar: PictorialBar,\n    LineChart: LineChart,\n    VisualMapChart: VisualMapChart,\n    BarChart: BarChart\n  },\n  data: function data() {\n    return {\n      loading: false,\n      flowData: [{\n        label: '涉诈APP',\n        type: 'app',\n        value: '',\n        icon: '',\n        children: [{\n          label: '各省上报',\n          type: 'report',\n          value: 7654\n        }, {\n          label: '各省上报',\n          type: 'found',\n          value: 3485\n        }]\n      }, {\n        label: '涉诈网址',\n        type: 'url',\n        value: '',\n        icon: '',\n        children: [{\n          label: '各省上报',\n          type: 'report',\n          value: 14877831\n        }]\n      }, {\n        label: '涉诈微信QQ',\n        type: 'qq',\n        value: '',\n        icon: '',\n        children: [{\n          label: '各省上报',\n          type: 'report',\n          value: 0\n        }, {\n          label: '运营商集团',\n          type: 'operator',\n          value: 9485\n        }, {\n          label: '12321举报',\n          type: '12321',\n          value: 0\n        }]\n      }, {\n        label: '涉诈域名',\n        type: 'domain',\n        value: '',\n        icon: '',\n        children: [{\n          label: '各省上报',\n          type: 'report',\n          value: 954084\n        }, {\n          label: '自主研判',\n          type: 'judge',\n          value: 39485\n        }]\n      }, {\n        label: '涉诈短信',\n        type: 'qq',\n        value: '',\n        icon: '',\n        children: [{\n          label: '各省上报',\n          type: 'report',\n          value: 175012\n        }, {\n          label: '运营商集团',\n          type: 'operator',\n          value: 51090\n        }]\n      }],\n      pictorialBarData1: {// seriesData: [180487, 133362, 127400, 25413, 5005].reverse(),\n        // categoryData: [\"河北\", \"云南\", \"四川\", \"广东\", \"陕西\"].reverse()\n      },\n      pictorialBarData2: {// seriesData: [14135, 26587, 51090, 107015, 109780],\n        // categoryData: ['四川', '山西', '运营商集团', '山东', '河北']\n      },\n      pictorialBarData3: {// seriesData: [103431, 1139780, 1825498, 4547851, 5320890],\n        // categoryData: ['吉林', '湖北', '四川', '云南', '河北']\n      },\n      pictorialBarData4: {// seriesData: [252, 771, 1094, 3176, 5337],\n        // categoryData: ['湖南', '广东', '云南', '湖北', '四川']\n      },\n      // pictorialBarData5: {\n      //   seriesData: [2, 181, 364, 4642],\n      //   categoryData: ['上海', '山东', '天津', '运营商集团']\n      // },\n      // buttonList1: [\n      //   { label: '域名', type: 6 },\n      //   { label: '网址', type: 0 },\n      //   { label: '短信', type: 2 },\n      //   { label: 'APP', type: 1 },\n      //   { label: '微信QQ', type: 3 }\n      // ],\n      line1type: 6,\n      line1data: {// legendData: ['管局上报'],\n        // seriesData: [\n        //   [302739, 119805, 298440, 1370727, 58353, 80701]\n        // ],\n        // categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\n      },\n      // buttonList2: [\n      //   { label: '域名', type: 'domain' },\n      //   { label: 'APP', type: 'app' },\n      //   { label: '微信QQ', type: 'qq' }\n      // ],\n      line2type: 'domain',\n      line2data: {// legendData: ['自主发现'],\n        // seriesData: [\n        //   [0, 0, 0, 0, 0, 0]\n        // ],\n        // categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\n      },\n      buttonList3: [{\n        label: '短信',\n        type: 'message'\n      }],\n      line3type: 'message',\n      line3data: {// legendData: ['基础企业集团上报'],\n        // seriesData: [\n        //   [0, 0, 0, 2314, 4132, 0]\n        // ],\n        // categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\n      },\n      buttonList4: [{\n        label: '微信QQ',\n        type: 'qq'\n      }],\n      line4type: 'qq',\n      line4data: {// legendData: ['12321上报'],\n        // seriesData: [\n        //   [0, 0, 0, 0, 0, 0]\n        // ],\n        // categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\n      },\n      // buttonList5: [\n      //   {label: '域名', type: 'domain'},\n      //   {label: '微信QQ', type: 'qq'}\n      // ],\n      // line5type: 'domain',\n      // line5data: {\n      // legendData: ['公安协同'],\n      // seriesData: [\n      //   [0, 0, 0, 0, 0, 0]\n      // ],\n      // categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\n      // },\n      mapData: {\n        seriesData: []\n      },\n      pieces: [// { value: 0, label: '未建设(黑/蒙/宁/甘/新/藏/豫/皖/苏/渝/黔/闽/琼)', color: '#744670' },\n        // { value: 1, label: '对接中(2省)', color: '#0067AC' },\n        // { value: 2, label: '已对接(16省)', color: '#33BCC9' }\n      ],\n      fraudDomainTop: {},\n      fraudUrlTop: {},\n      fraudAppTop: {},\n      fraudMessageTop: {}\n    };\n  },\n  computed: {},\n  created: function created() {\n    // this.getMapData()\n    // this.flowList = this.flowData.forEach()\n    // this.getAuthorityReportData()\n    // this.getIndependentDiscoveryData()\n    // this.getGroupReport()\n    // this.get12321Report()\n    // this.getPublicSecurityCoordination()\n    this.getFraudAppRank();\n    this.getFraudDomainRank();\n    this.getFraudUrlRank();\n    this.getFraudMessageRank();\n    this.getProvinceSystemDocking();\n    this.getFraudDomainTop();\n    this.getFraudUrlTop();\n    this.getFraudAppTop();\n    this.getFraudMessageTop();\n  },\n  mounted: function mounted() {},\n  methods: {\n    // changeLineData(params) {\n    //   if(params.datakey !== 'line1data' || params.datakey !== 'line3data') {\n    //   } else {\n    //     this.getLineData(params)\n    //   }\n    // },\n    // async getLineData(params) {\n    //   this.loading = true\n    //   await this.$sleep(1000)\n    //   this[params.datakey].seriesData = [this.genLineData()]\n    //   this.loading = false\n    // },\n    // async getMapData() {\n    //   this.loading = true\n    //   this.mapData.forEach(item => {\n    //     if(item.value === 0) {\n    //       item.color = '#744670'\n    //     } else if (item.value === 1) {\n    //       item.color = '#33BCC9'\n    //     }else if(item.value === 2) {\n    //       item.color = '#0067AC'\n    //     }\n    //   })\n    //   this.mapInit(await getData(this.mapData))\n    //   this.loading = false\n    // },\n    // async mapInit(data) {\n    //   // await this.getMapData()\n    //   let $map3d = this.$refs.map3d\n    //   if (!$map3d) {\n    //     await this.$sleep(30)\n    //     $map3d = this.$refs.map3d\n    //   }\n    //   const { map, nameMap } = data\n    //   // console.log(map)\n    //   const mapOptions = {\n    //     map,\n    //     nameMap,\n    //     stats: false,\n    //     zoom: 34,\n    //     blending: false,\n    //     visibleSouthSea: true,\n    //     textStyle: {\n    //       normal: {\n    //         show: true,\n    //         fontSize: 18,\n    //         color: '#eee'\n    //       }\n    //     },\n    //     areaStyle: {\n    //       normal: {\n    //         // color: '#6BC5F2', //'#9bd3ef',\n    //         opacity: 1\n    //       }\n    //     },\n    //     // visualMap: {\n    //     //   show: true,\n    //     //   type: 'piecewise',\n    //     //   triggerOn: 'map',\n    //     //   text: ['', ''], // ['疑似受害者全国分布', '']\n    //     //   bottom: 25,\n    //     //   left: 25,\n    //     //   color: ['#744670', '#0067AC', '#33BCC9'],\n    //     //   splitNumber: 3\n    //     // },\n    //     tooltip: {\n    //       formatter: param => {\n    //         return `<div>${param.data.name}</div>`\n    //       }\n    //     }\n    //   }\n    //   this.map3d && this.map3d.destroy()\n    //   this.loading = true\n    //   this.map3d = new Map3D($map3d, mapJson, mapOptions)\n    //   this.map3d.on('ready', _ => {\n    //     this.loading = false\n    //   })\n    // },\n    // genLineData() {\n    //   return Array.from({length: 6}, item => 0)\n    // },\n    // getMapData() {\n    //   this.pieces.forEach(piece => {\n    //     const total = this.mapData.seriesData.filter(item => item.value === piece.value).length\n    //     piece.label = piece.label + '(' + total + ')'\n    //   })\n    // },\n    getProvinceSystemDocking: function () {\n      var _getProvinceSystemDocking2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$simpleAsyncTo(_getProvinceSystemDocking(), '获取涉诈APP累计上报排名失败');\n\n              case 2:\n                res = _context.sent;\n\n                if (res) {\n                  this.mapData = {\n                    seriesData: res.returnModel.seriesData\n                  };\n                  this.pieces = res.returnModel.pieces;\n                  this.curMapData.data = res.returnModel.seriesData;\n                  this.curMapData.docked = this.curMapData.data.filter(function (item) {\n                    if (item.value !== 0) return item;\n                  });\n                  this.curMapData.pieces = res.returnModel.pieces;\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getProvinceSystemDocking() {\n        return _getProvinceSystemDocking2.apply(this, arguments);\n      }\n\n      return getProvinceSystemDocking;\n    }(),\n    // async getAuthorityReportData() {\n    //   const params = {\n    //     businesstype: this.line1type\n    //   }\n    //   const res = await this.$simpleAsyncTo(\n    //     getAuthorityReportData(params),\n    //     '获取管局上报数据失败'\n    //   )\n    //   // if(res && res.returnModel) {\n    //   //   // console.log('res', res)\n    //   //   this.line1data = {\n    //   //     legendData: ['管局上报'],\n    //   //     seriesData: res.returnModel.seriesData,\n    //   //     categoryData: res.returnModel.categoryData\n    //   //   }\n    //   // }\n    //   if (res) {\n    //     // this.line1data = res.returnModel\n    //     // 切换时也可以用请求的数据\n    //     for (var key in res.returnModel) {\n    //       if (this.line1type === Number(key)) {\n    //         this.line1data = res.returnModel[key]\n    //       }\n    //     }\n    //   }\n    // },\n    // changeLineData1(val) {\n    //   this.getAuthorityReportData()\n    // },\n    // async getIndependentDiscoveryData() {\n    //   const params = {\n    //     type: this.line2type\n    //   }\n    //   const res = await this.$simpleAsyncTo(\n    //     getIndependentDiscoveryData(),\n    //     '获取自主发现数据失败'\n    //   )\n    //   if (res && res.returnModel) {\n    //     if (this.line2type === 'domain') {\n    //       this.line2data = {\n    //         legendData: ['自主发现'],\n    //         seriesData: [res.returnModel.domainDatas],\n    //         categoryData: res.returnModel.categoryData\n    //       }\n    //     } else if (this.line2type === 'app') {\n    //       this.line2data = {\n    //         legendData: ['自主发现'],\n    //         seriesData: [res.returnModel.appDatas],\n    //         categoryData: res.returnModel.categoryData\n    //       }\n    //     } else if (this.line2type === 'qq') {\n    //       this.line2data = {\n    //         legendData: ['自主发现'],\n    //         seriesData: [res.returnModel.qqDatas],\n    //         categoryData: res.returnModel.categoryData\n    //       }\n    //     }\n    //   }\n    //   // const res = await this.$simpleAsyncTo(getIndependentDiscoveryData(params), '获取自主发现数据失败')\n    //   // if(res) {\n    //   //   // this.line2data = res.returnModel\n    //   //   // 切换时也可以用请求的数据\n    //   //   for(var key in res.returnModel) {\n    //   //     if(this.line2type === key) {\n    //   //       this.line2data = res.returnModel[key]\n    //   //     }\n    //   //   }\n    //   // }\n    // },\n    // changeLineData2(val) {\n    //   this.getIndependentDiscoveryData()\n    // },\n    // async getGroupReport() {\n    //   // const params = {\n    //   //   businesstype: 7\n    //   // }\n    //   const res = await this.$simpleAsyncTo(\n    //     getGroupReport(),\n    //     '获取基础企业上报数据失败'\n    //   )\n    //   if (res) {\n    //     this.line3data = res.returnModel\n    //   }\n    //   // const res = await this.$simpleAsyncTo(getAuthorityReportData(params), '获取基础企业集团上报数据失败')\n    //   // if(res && res.returnModel) {\n    //   //   this.line3data = {\n    //   //     legendData: ['基础企业集团上报'],\n    //   //     seriesData: res.returnModel.seriesData,\n    //   //     categoryData: res.returnModel.categoryData\n    //   //   }\n    //   // }\n    // },\n    // async get12321Report() {\n    //   const res = await this.$simpleAsyncTo(\n    //     get12321Report(),\n    //     '获取12321上报数据失败'\n    //   )\n    //   if (res) {\n    //     this.line4data = res.returnModel\n    //   }\n    // },\n    // async getPublicSecurityCoordination() {\n    //   const params = {\n    //     type: this.line5type\n    //   }\n    //   const res = await this.$simpleAsyncTo(getPublicSecurityCoordination(params), '获取公安协同数据失败')\n    //   if(res) {\n    //     this.line5data = res.returnModel\n    //   }\n    // },\n    // changeLineData5(val) {\n    //   this.getPublicSecurityCoordination()\n    // },\n    getFraudAppRank: function () {\n      var _getFraudAppRank2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$simpleAsyncTo(_getFraudAppRank(), '获取涉诈APP累计上报排名失败');\n\n              case 2:\n                res = _context2.sent;\n\n                if (res) {\n                  this.pictorialBarData4 = res.returnModel;\n                } // const res = await this.$simpleAsyncTo(getFraudRank(params), '获取涉诈APP累计上报排名失败')\n                // if(res && res.returnModel) {\n                //   this.pictorialBarData4 = {\n                //     seriesName: '上报量',\n                //     seriesData: res.returnModel.seriesData.reverse(),\n                //     categoryData: res.returnModel.categoryData.reverse()\n                //   }\n                // }\n\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getFraudAppRank() {\n        return _getFraudAppRank2.apply(this, arguments);\n      }\n\n      return getFraudAppRank;\n    }(),\n    getFraudDomainRank: function () {\n      var _getFraudDomainRank2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.$simpleAsyncTo(_getFraudDomainRank(), '获取涉诈域名累计上报排名失败');\n\n              case 2:\n                res = _context3.sent;\n\n                if (res) {\n                  this.pictorialBarData1 = res.returnModel;\n                } // const res = await this.$simpleAsyncTo(getFraudRank(params), '获取涉诈域名累计上报排名失败')\n                // if(res && res.returnModel) {\n                //   this.pictorialBarData1 = {\n                //     seriesName: '上报量',\n                //     seriesData: res.returnModel.seriesData.reverse(),\n                //     categoryData: res.returnModel.categoryData.reverse()\n                //   }\n                // }\n\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getFraudDomainRank() {\n        return _getFraudDomainRank2.apply(this, arguments);\n      }\n\n      return getFraudDomainRank;\n    }(),\n    getFraudUrlRank: function () {\n      var _getFraudUrlRank2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.$simpleAsyncTo(_getFraudUrlRank(), '获取涉诈网址累计上报排名失败');\n\n              case 2:\n                res = _context4.sent;\n\n                if (res) {\n                  this.pictorialBarData3 = res.returnModel;\n                } // const res = await this.$simpleAsyncTo(getFraudRank(params), '获取涉诈网址累计上报排名失败')\n                // if(res && res.returnModel) {\n                //   this.pictorialBarData3 = {\n                //     seriesName: '上报量',\n                //     seriesData: res.returnModel.seriesData.reverse(),\n                //     categoryData: res.returnModel.categoryData.reverse()\n                //   }\n                // }\n\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getFraudUrlRank() {\n        return _getFraudUrlRank2.apply(this, arguments);\n      }\n\n      return getFraudUrlRank;\n    }(),\n    getFraudMessageRank: function () {\n      var _getFraudMessageRank2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.$simpleAsyncTo(_getFraudMessageRank(), '获取涉诈短信累计上报排名失败');\n\n              case 2:\n                res = _context5.sent;\n\n                if (res) {\n                  this.pictorialBarData2 = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getFraudMessageRank() {\n        return _getFraudMessageRank2.apply(this, arguments);\n      }\n\n      return getFraudMessageRank;\n    }(),\n    getFraudDomainTop: function () {\n      var _getFraudDomainTop2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.$simpleAsyncTo(_getFraudDomainTop(), '获取涉诈域名每月TOP5失败');\n\n              case 2:\n                res = _context6.sent;\n\n                if (res) {\n                  this.fraudDomainTop = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getFraudDomainTop() {\n        return _getFraudDomainTop2.apply(this, arguments);\n      }\n\n      return getFraudDomainTop;\n    }(),\n    getFraudUrlTop: function () {\n      var _getFraudUrlTop2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.$simpleAsyncTo(_getFraudUrlTop(), '获取涉诈网址每月TOP5失败');\n\n              case 2:\n                res = _context7.sent;\n\n                if (res) {\n                  this.fraudUrlTop = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getFraudUrlTop() {\n        return _getFraudUrlTop2.apply(this, arguments);\n      }\n\n      return getFraudUrlTop;\n    }(),\n    getFraudAppTop: function () {\n      var _getFraudAppTop2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.$simpleAsyncTo(_getFraudAppTop(), '获取涉诈APP每月TOP5失败');\n\n              case 2:\n                res = _context8.sent;\n\n                if (res) {\n                  this.fraudAppTop = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getFraudAppTop() {\n        return _getFraudAppTop2.apply(this, arguments);\n      }\n\n      return getFraudAppTop;\n    }(),\n    getFraudMessageTop: function () {\n      var _getFraudMessageTop2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.$simpleAsyncTo(_getFraudMessageTop(), '获取涉诈域名每月TOP5失败');\n\n              case 2:\n                res = _context9.sent;\n\n                if (res) {\n                  this.fraudMessageTop = res.returnModel;\n                }\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getFraudMessageTop() {\n        return _getFraudMessageTop2.apply(this, arguments);\n      }\n\n      return getFraudMessageTop;\n    }()\n  }\n};",{"version":3,"sources":["D:\\工作项目\\部反诈\\src\\views\\aggregation\\sameMixin.js"],"names":["ChartBox","PictorialBar","LineChart","VisualMapChart","BarChart","randomInRange","getFraudAppRank","getFraudDomainRank","getFraudUrlRank","getFraudMessageRank","getProvinceSystemDocking","getFraudAppTop","getFraudDomainTop","getFraudUrlTop","getFraudMessageTop","name","props","components","data","loading","flowData","label","type","value","icon","children","pictorialBarData1","pictorialBarData2","pictorialBarData3","pictorialBarData4","line1type","line1data","line2type","line2data","buttonList3","line3type","line3data","buttonList4","line4type","line4data","mapData","seriesData","pieces","fraudDomainTop","fraudUrlTop","fraudAppTop","fraudMessageTop","computed","created","mounted","methods","$simpleAsyncTo","res","returnModel","curMapData","docked","filter","item"],"mappings":"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,CAAClC,KAAL,KAAe,CAAnB,EAAsB,OAAOkC,IAAP;AACvB,mBAFwB,CAAzB;AAGA,uBAAKH,UAAL,CAAgBZ,MAAhB,GAAyBU,GAAG,CAACC,WAAJ,CAAgBX,MAAzC;AACD;;AAzGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA2GP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMpC,IAAAA,eA5NC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAgOa,KAAK6C,cAAL,CAChB7C,gBAAe,EADC,EAEhB,iBAFgB,CAhOb;;AAAA;AAgOC8C,gBAAAA,GAhOD;;AAoOL,oBAAIA,GAAJ,EAAS;AACP,uBAAKvB,iBAAL,GAAyBuB,GAAG,CAACC,WAA7B;AACD,iBAtOI,CAuOL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA9OK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgPD9C,IAAAA,kBAhPC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAoPa,KAAK4C,cAAL,CAChB5C,m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","sourcesContent":["import ChartBox from \"components/chartBox\"\r\nimport PictorialBar from 'components/echarts/pictorialBar/pictorialBar'\r\nimport LineChart from 'components/echarts/line/lineChart'\r\nimport VisualMapChart from 'components/echarts/map/visualMapChart'\r\nimport BarChart from 'components/echarts/bar/barChart'\r\n// import Map3D from '@/utils/map3d'\r\n// import mapJson from '@/assets/map/china.json'\r\nimport {randomInRange} from '@/mock/tool'//eslint-disable-line\r\n// import {getMap3dData} from '@/mock/map'\r\n// import {getData} from \"./data\"\r\nimport {\r\n  // getAuthorityReportData,\r\n  // getIndependentDiscoveryData,\r\n  // getGroupReport,\r\n  // get12321Report,\r\n  // getPublicSecurityCoordination,\r\n  // getFraudRank,\r\n  getFraudAppRank,\r\n  getFraudDomainRank,\r\n  getFraudUrlRank,\r\n  getFraudMessageRank,\r\n  getProvinceSystemDocking,\r\n  getFraudAppTop,\r\n  getFraudDomainTop,\r\n  getFraudUrlTop,\r\n  getFraudMessageTop\r\n} from 'api/aggregation'\r\n\r\n// import {getAuthorityReportData, getIndependentDiscoveryData, getGroupReport, get12321Report, getPublicSecurityCoordination, getFraudAppRank, getFraudDomainRank, getFraudUrlRank, getFraudMessageRank} from 'api/aggregation'//eslint-disable-line\r\n\r\n\r\nexport default {\r\n  name: 'Aggregation',\r\n  props: {},\r\n  components: {\r\n    ChartBox,\r\n    PictorialBar,\r\n    LineChart,\r\n    VisualMapChart,\r\n    BarChart\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      flowData: [\r\n        {\r\n          label: '涉诈APP',\r\n          type: 'app',\r\n          value: '',\r\n          icon: '',\r\n          children: [\r\n            {\r\n              label: '各省上报',\r\n              type: 'report',\r\n              value: 7654\r\n            },\r\n            {\r\n              label: '各省上报',\r\n              type: 'found',\r\n              value: 3485\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: '涉诈网址',\r\n          type: 'url',\r\n          value: '',\r\n          icon: '',\r\n          children: [\r\n            {\r\n              label: '各省上报',\r\n              type: 'report',\r\n              value: 14877831\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: '涉诈微信QQ',\r\n          type: 'qq',\r\n          value: '',\r\n          icon: '',\r\n          children: [\r\n            {\r\n              label: '各省上报',\r\n              type: 'report',\r\n              value: 0\r\n            },\r\n            {\r\n              label: '运营商集团',\r\n              type: 'operator',\r\n              value: 9485\r\n            },\r\n            {\r\n              label: '12321举报',\r\n              type: '12321',\r\n              value: 0\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: '涉诈域名',\r\n          type: 'domain',\r\n          value: '',\r\n          icon: '',\r\n          children: [\r\n            {\r\n              label: '各省上报',\r\n              type: 'report',\r\n              value: 954084\r\n            },\r\n            {\r\n              label: '自主研判',\r\n              type: 'judge',\r\n              value: 39485\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: '涉诈短信',\r\n          type: 'qq',\r\n          value: '',\r\n          icon: '',\r\n          children: [\r\n            {\r\n              label: '各省上报',\r\n              type: 'report',\r\n              value: 175012\r\n            },\r\n            {\r\n              label: '运营商集团',\r\n              type: 'operator',\r\n              value: 51090\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      pictorialBarData1: {\r\n        // seriesData: [180487, 133362, 127400, 25413, 5005].reverse(),\r\n        // categoryData: [\"河北\", \"云南\", \"四川\", \"广东\", \"陕西\"].reverse()\r\n      },\r\n      pictorialBarData2: {\r\n        // seriesData: [14135, 26587, 51090, 107015, 109780],\r\n        // categoryData: ['四川', '山西', '运营商集团', '山东', '河北']\r\n      },\r\n      pictorialBarData3: {\r\n        // seriesData: [103431, 1139780, 1825498, 4547851, 5320890],\r\n        // categoryData: ['吉林', '湖北', '四川', '云南', '河北']\r\n      },\r\n      pictorialBarData4: {\r\n        // seriesData: [252, 771, 1094, 3176, 5337],\r\n        // categoryData: ['湖南', '广东', '云南', '湖北', '四川']\r\n      },\r\n      // pictorialBarData5: {\r\n      //   seriesData: [2, 181, 364, 4642],\r\n      //   categoryData: ['上海', '山东', '天津', '运营商集团']\r\n      // },\r\n      // buttonList1: [\r\n      //   { label: '域名', type: 6 },\r\n      //   { label: '网址', type: 0 },\r\n      //   { label: '短信', type: 2 },\r\n      //   { label: 'APP', type: 1 },\r\n      //   { label: '微信QQ', type: 3 }\r\n      // ],\r\n      line1type: 6,\r\n      line1data: {\r\n        // legendData: ['管局上报'],\r\n        // seriesData: [\r\n        //   [302739, 119805, 298440, 1370727, 58353, 80701]\r\n        // ],\r\n        // categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\r\n      },\r\n      // buttonList2: [\r\n      //   { label: '域名', type: 'domain' },\r\n      //   { label: 'APP', type: 'app' },\r\n      //   { label: '微信QQ', type: 'qq' }\r\n      // ],\r\n      line2type: 'domain',\r\n      line2data: {\r\n        // legendData: ['自主发现'],\r\n        // seriesData: [\r\n        //   [0, 0, 0, 0, 0, 0]\r\n        // ],\r\n        // categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\r\n      },\r\n      buttonList3: [{ label: '短信', type: 'message' }],\r\n      line3type: 'message',\r\n      line3data: {\r\n        // legendData: ['基础企业集团上报'],\r\n        // seriesData: [\r\n        //   [0, 0, 0, 2314, 4132, 0]\r\n        // ],\r\n        // categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\r\n      },\r\n      buttonList4: [{ label: '微信QQ', type: 'qq' }],\r\n      line4type: 'qq',\r\n      line4data: {\r\n        // legendData: ['12321上报'],\r\n        // seriesData: [\r\n        //   [0, 0, 0, 0, 0, 0]\r\n        // ],\r\n        // categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\r\n      },\r\n      // buttonList5: [\r\n      //   {label: '域名', type: 'domain'},\r\n      //   {label: '微信QQ', type: 'qq'}\r\n      // ],\r\n      // line5type: 'domain',\r\n      // line5data: {\r\n      // legendData: ['公安协同'],\r\n      // seriesData: [\r\n      //   [0, 0, 0, 0, 0, 0]\r\n      // ],\r\n      // categoryData: ['3月', '4月', '5月', '6月', '7月', '8月']\r\n      // },\r\n      mapData: {\r\n        seriesData: []\r\n      },\r\n      pieces: [\r\n        // { value: 0, label: '未建设(黑/蒙/宁/甘/新/藏/豫/皖/苏/渝/黔/闽/琼)', color: '#744670' },\r\n        // { value: 1, label: '对接中(2省)', color: '#0067AC' },\r\n        // { value: 2, label: '已对接(16省)', color: '#33BCC9' }\r\n      ],\r\n      fraudDomainTop: {},\r\n      fraudUrlTop: {},\r\n      fraudAppTop: {},\r\n      fraudMessageTop: {}\r\n    }\r\n  },\r\n  computed: {},\r\n  created() {\r\n    // this.getMapData()\r\n    // this.flowList = this.flowData.forEach()\r\n    // this.getAuthorityReportData()\r\n    // this.getIndependentDiscoveryData()\r\n    // this.getGroupReport()\r\n    // this.get12321Report()\r\n    // this.getPublicSecurityCoordination()\r\n    this.getFraudAppRank()\r\n    this.getFraudDomainRank()\r\n    this.getFraudUrlRank()\r\n    this.getFraudMessageRank()\r\n    this.getProvinceSystemDocking()\r\n    this.getFraudDomainTop()\r\n    this.getFraudUrlTop()\r\n    this.getFraudAppTop()\r\n    this.getFraudMessageTop()\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    // changeLineData(params) {\r\n    //   if(params.datakey !== 'line1data' || params.datakey !== 'line3data') {\r\n\r\n    //   } else {\r\n    //     this.getLineData(params)\r\n    //   }\r\n    // },\r\n    // async getLineData(params) {\r\n    //   this.loading = true\r\n    //   await this.$sleep(1000)\r\n    //   this[params.datakey].seriesData = [this.genLineData()]\r\n    //   this.loading = false\r\n    // },\r\n    // async getMapData() {\r\n    //   this.loading = true\r\n    //   this.mapData.forEach(item => {\r\n    //     if(item.value === 0) {\r\n    //       item.color = '#744670'\r\n    //     } else if (item.value === 1) {\r\n    //       item.color = '#33BCC9'\r\n    //     }else if(item.value === 2) {\r\n    //       item.color = '#0067AC'\r\n    //     }\r\n    //   })\r\n    //   this.mapInit(await getData(this.mapData))\r\n    //   this.loading = false\r\n    // },\r\n    // async mapInit(data) {\r\n    //   // await this.getMapData()\r\n    //   let $map3d = this.$refs.map3d\r\n    //   if (!$map3d) {\r\n    //     await this.$sleep(30)\r\n    //     $map3d = this.$refs.map3d\r\n    //   }\r\n    //   const { map, nameMap } = data\r\n    //   // console.log(map)\r\n    //   const mapOptions = {\r\n    //     map,\r\n    //     nameMap,\r\n    //     stats: false,\r\n    //     zoom: 34,\r\n    //     blending: false,\r\n    //     visibleSouthSea: true,\r\n    //     textStyle: {\r\n    //       normal: {\r\n    //         show: true,\r\n    //         fontSize: 18,\r\n    //         color: '#eee'\r\n    //       }\r\n    //     },\r\n    //     areaStyle: {\r\n    //       normal: {\r\n    //         // color: '#6BC5F2', //'#9bd3ef',\r\n    //         opacity: 1\r\n    //       }\r\n    //     },\r\n    //     // visualMap: {\r\n    //     //   show: true,\r\n    //     //   type: 'piecewise',\r\n    //     //   triggerOn: 'map',\r\n    //     //   text: ['', ''], // ['疑似受害者全国分布', '']\r\n    //     //   bottom: 25,\r\n    //     //   left: 25,\r\n    //     //   color: ['#744670', '#0067AC', '#33BCC9'],\r\n    //     //   splitNumber: 3\r\n    //     // },\r\n    //     tooltip: {\r\n    //       formatter: param => {\r\n    //         return `<div>${param.data.name}</div>`\r\n    //       }\r\n    //     }\r\n    //   }\r\n    //   this.map3d && this.map3d.destroy()\r\n\r\n    //   this.loading = true\r\n    //   this.map3d = new Map3D($map3d, mapJson, mapOptions)\r\n    //   this.map3d.on('ready', _ => {\r\n    //     this.loading = false\r\n    //   })\r\n    // },\r\n    // genLineData() {\r\n    //   return Array.from({length: 6}, item => 0)\r\n    // },\r\n    // getMapData() {\r\n    //   this.pieces.forEach(piece => {\r\n    //     const total = this.mapData.seriesData.filter(item => item.value === piece.value).length\r\n    //     piece.label = piece.label + '(' + total + ')'\r\n    //   })\r\n    // },\r\n    async getProvinceSystemDocking() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getProvinceSystemDocking(),\r\n        '获取涉诈APP累计上报排名失败'\r\n      )\r\n      if (res) {\r\n        this.mapData = {\r\n          seriesData: res.returnModel.seriesData\r\n        }\r\n        this.pieces = res.returnModel.pieces\r\n        this.curMapData.data = res.returnModel.seriesData\r\n        this.curMapData.docked = this.curMapData.data.filter(function(item) {\r\n          if (item.value !== 0) return item\r\n        })\r\n        this.curMapData.pieces = res.returnModel.pieces\r\n      }\r\n    },\r\n    // async getAuthorityReportData() {\r\n    //   const params = {\r\n    //     businesstype: this.line1type\r\n    //   }\r\n    //   const res = await this.$simpleAsyncTo(\r\n    //     getAuthorityReportData(params),\r\n    //     '获取管局上报数据失败'\r\n    //   )\r\n    //   // if(res && res.returnModel) {\r\n    //   //   // console.log('res', res)\r\n    //   //   this.line1data = {\r\n    //   //     legendData: ['管局上报'],\r\n    //   //     seriesData: res.returnModel.seriesData,\r\n    //   //     categoryData: res.returnModel.categoryData\r\n    //   //   }\r\n    //   // }\r\n    //   if (res) {\r\n    //     // this.line1data = res.returnModel\r\n    //     // 切换时也可以用请求的数据\r\n    //     for (var key in res.returnModel) {\r\n    //       if (this.line1type === Number(key)) {\r\n    //         this.line1data = res.returnModel[key]\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // },\r\n    // changeLineData1(val) {\r\n    //   this.getAuthorityReportData()\r\n    // },\r\n    // async getIndependentDiscoveryData() {\r\n    //   const params = {\r\n    //     type: this.line2type\r\n    //   }\r\n    //   const res = await this.$simpleAsyncTo(\r\n    //     getIndependentDiscoveryData(),\r\n    //     '获取自主发现数据失败'\r\n    //   )\r\n    //   if (res && res.returnModel) {\r\n    //     if (this.line2type === 'domain') {\r\n    //       this.line2data = {\r\n    //         legendData: ['自主发现'],\r\n    //         seriesData: [res.returnModel.domainDatas],\r\n    //         categoryData: res.returnModel.categoryData\r\n    //       }\r\n    //     } else if (this.line2type === 'app') {\r\n    //       this.line2data = {\r\n    //         legendData: ['自主发现'],\r\n    //         seriesData: [res.returnModel.appDatas],\r\n    //         categoryData: res.returnModel.categoryData\r\n    //       }\r\n    //     } else if (this.line2type === 'qq') {\r\n    //       this.line2data = {\r\n    //         legendData: ['自主发现'],\r\n    //         seriesData: [res.returnModel.qqDatas],\r\n    //         categoryData: res.returnModel.categoryData\r\n    //       }\r\n    //     }\r\n    //   }\r\n    //   // const res = await this.$simpleAsyncTo(getIndependentDiscoveryData(params), '获取自主发现数据失败')\r\n    //   // if(res) {\r\n    //   //   // this.line2data = res.returnModel\r\n    //   //   // 切换时也可以用请求的数据\r\n    //   //   for(var key in res.returnModel) {\r\n    //   //     if(this.line2type === key) {\r\n    //   //       this.line2data = res.returnModel[key]\r\n    //   //     }\r\n    //   //   }\r\n    //   // }\r\n    // },\r\n    // changeLineData2(val) {\r\n    //   this.getIndependentDiscoveryData()\r\n    // },\r\n    // async getGroupReport() {\r\n    //   // const params = {\r\n    //   //   businesstype: 7\r\n    //   // }\r\n    //   const res = await this.$simpleAsyncTo(\r\n    //     getGroupReport(),\r\n    //     '获取基础企业上报数据失败'\r\n    //   )\r\n    //   if (res) {\r\n    //     this.line3data = res.returnModel\r\n    //   }\r\n    //   // const res = await this.$simpleAsyncTo(getAuthorityReportData(params), '获取基础企业集团上报数据失败')\r\n    //   // if(res && res.returnModel) {\r\n    //   //   this.line3data = {\r\n    //   //     legendData: ['基础企业集团上报'],\r\n    //   //     seriesData: res.returnModel.seriesData,\r\n    //   //     categoryData: res.returnModel.categoryData\r\n    //   //   }\r\n    //   // }\r\n    // },\r\n    // async get12321Report() {\r\n    //   const res = await this.$simpleAsyncTo(\r\n    //     get12321Report(),\r\n    //     '获取12321上报数据失败'\r\n    //   )\r\n    //   if (res) {\r\n    //     this.line4data = res.returnModel\r\n    //   }\r\n    // },\r\n    // async getPublicSecurityCoordination() {\r\n    //   const params = {\r\n    //     type: this.line5type\r\n    //   }\r\n    //   const res = await this.$simpleAsyncTo(getPublicSecurityCoordination(params), '获取公安协同数据失败')\r\n    //   if(res) {\r\n    //     this.line5data = res.returnModel\r\n    //   }\r\n    // },\r\n    // changeLineData5(val) {\r\n    //   this.getPublicSecurityCoordination()\r\n    // },\r\n    async getFraudAppRank() {\r\n      // const params = {\r\n      //   businesstype: 1\r\n      // }\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudAppRank(),\r\n        '获取涉诈APP累计上报排名失败'\r\n      )\r\n      if (res) {\r\n        this.pictorialBarData4 = res.returnModel\r\n      }\r\n      // const res = await this.$simpleAsyncTo(getFraudRank(params), '获取涉诈APP累计上报排名失败')\r\n      // if(res && res.returnModel) {\r\n      //   this.pictorialBarData4 = {\r\n      //     seriesName: '上报量',\r\n      //     seriesData: res.returnModel.seriesData.reverse(),\r\n      //     categoryData: res.returnModel.categoryData.reverse()\r\n      //   }\r\n      // }\r\n    },\r\n    async getFraudDomainRank() {\r\n      // const params = {\r\n      //   businesstype: 6\r\n      // }\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudDomainRank(),\r\n        '获取涉诈域名累计上报排名失败'\r\n      )\r\n      if (res) {\r\n        this.pictorialBarData1 = res.returnModel\r\n      }\r\n      // const res = await this.$simpleAsyncTo(getFraudRank(params), '获取涉诈域名累计上报排名失败')\r\n      // if(res && res.returnModel) {\r\n      //   this.pictorialBarData1 = {\r\n      //     seriesName: '上报量',\r\n      //     seriesData: res.returnModel.seriesData.reverse(),\r\n      //     categoryData: res.returnModel.categoryData.reverse()\r\n      //   }\r\n      // }\r\n    },\r\n    async getFraudUrlRank() {\r\n      // const params = {\r\n      //   businesstype: 0\r\n      // }\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudUrlRank(),\r\n        '获取涉诈网址累计上报排名失败'\r\n      )\r\n      if (res) {\r\n        this.pictorialBarData3 = res.returnModel\r\n      }\r\n      // const res = await this.$simpleAsyncTo(getFraudRank(params), '获取涉诈网址累计上报排名失败')\r\n      // if(res && res.returnModel) {\r\n      //   this.pictorialBarData3 = {\r\n      //     seriesName: '上报量',\r\n      //     seriesData: res.returnModel.seriesData.reverse(),\r\n      //     categoryData: res.returnModel.categoryData.reverse()\r\n      //   }\r\n      // }\r\n    },\r\n    async getFraudMessageRank() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudMessageRank(),\r\n        '获取涉诈短信累计上报排名失败'\r\n      )\r\n      if (res) {\r\n        this.pictorialBarData2 = res.returnModel\r\n      }\r\n    },\r\n    async getFraudDomainTop() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudDomainTop(),\r\n        '获取涉诈域名每月TOP5失败'\r\n      )\r\n      if (res) {\r\n        this.fraudDomainTop = res.returnModel\r\n      }\r\n    },\r\n    async getFraudUrlTop() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudUrlTop(),\r\n        '获取涉诈网址每月TOP5失败'\r\n      )\r\n      if (res) {\r\n        this.fraudUrlTop = res.returnModel\r\n      }\r\n    },\r\n    async getFraudAppTop() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudAppTop(),\r\n        '获取涉诈APP每月TOP5失败'\r\n      )\r\n      if (res) {\r\n        this.fraudAppTop = res.returnModel\r\n      }\r\n    },\r\n    async getFraudMessageTop() {\r\n      const res = await this.$simpleAsyncTo(\r\n        getFraudMessageTop(),\r\n        '获取涉诈域名每月TOP5失败'\r\n      )\r\n      if (res) {\r\n        this.fraudMessageTop = res.returnModel\r\n      }\r\n    }\r\n  }\r\n}"]}]}