{"remainingRequest":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js!D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\工作项目\\部反诈\\src\\mixins\\globalChartMixin.js","dependencies":[{"path":"D:\\工作项目\\部反诈\\src\\mixins\\globalChartMixin.js","mtime":1598758386948},{"path":"D:\\工作项目\\部反诈\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\工作项目\\部反诈\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$keys from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/keys\";\nimport _objectSpread from \"D:\\\\\\u5DE5\\u4F5C\\u9879\\u76EE\\\\\\u90E8\\u53CD\\u8BC8\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\nimport storage from \"utils/storage\";\nvar chartColors = storage.get('tColors');\nexport default {\n  props: {\n    legendShow: {\n      type: Boolean,\n      default: true\n    },\n    legendOrient: {\n      type: String,\n      default: 'horizontal'\n    },\n    legendType: {\n      type: String,\n      default: 'scroll'\n    },\n    legendLeft: {\n      type: [String, Number],\n      default: function _default() {\n        return '';\n      }\n    },\n    legendTop: {\n      type: [String, Number],\n      default: function _default() {\n        return '';\n      }\n    },\n    legendRight: {\n      type: [String, Number],\n      default: function _default() {\n        return '';\n      }\n    },\n    legendBottom: {\n      type: [String, Number],\n      default: function _default() {\n        return '';\n      }\n    },\n    legendTextColor: {\n      type: String,\n      default: function _default() {\n        return chartColors.legend.text;\n      }\n    },\n    legendPageTextColor: {\n      type: String,\n      default: function _default() {\n        return chartColors.legend.pageText;\n      }\n    },\n    legendFontSize: {\n      type: Number,\n      default: 12\n    }\n  },\n  data: function data() {\n    return {\n      chartName: '注意：没有给图表制定名称，请及时补充图表名称.........',\n      options: {}\n    };\n  },\n  created: function created() {// console.log(`准备构建图表组件${this.chartName}`)\n  },\n  mounted: function mounted() {\n    setTimeout(this.refresh, 10);\n  },\n  watch: {\n    legendShow: function legendShow(newVal, oldVal) {\n      this.refresh();\n    },\n    legendOrient: function legendOrient(newVal, oldVal) {\n      this.refresh();\n    },\n    legendType: function legendType(newVal, oldVal) {\n      this.refresh();\n    },\n    legendLeft: function legendLeft(newVal, oldVal) {\n      this.refresh();\n    },\n    legendTop: function legendTop(newVal, oldVal) {\n      this.refresh();\n    },\n    legendRight: function legendRight(newVal, oldVal) {\n      this.refresh();\n    },\n    legendBottom: function legendBottom(newVal, oldVal) {\n      this.refresh();\n    },\n    legendTextColor: function legendTextColor(newVal, oldVal) {\n      this.refresh();\n    },\n    legendPageTextColor: function legendPageTextColor(newVal, oldVal) {\n      this.refresh();\n    },\n    legendFontSize: function legendFontSize(newVal, oldVal) {\n      this.refresh();\n    }\n  },\n  methods: {\n    refresh: function refresh() {\n      this.options = this.setOptions();\n\n      if (this.refreshCallback) {\n        this.refreshCallback();\n      }\n    },\n    legendOpt: function legendOpt(opt) {\n      var left = this.legendLeft || 'auto',\n          top = this.legendTop || 'auto',\n          right = this.legendRight || 'auto',\n          bottom = this.legendBottom || 'auto',\n          type = this.legendType || 'plain',\n          orient = this.legendOrient || 'horizontal';\n      return _objectSpread({\n        type: type,\n        orient: orient,\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom,\n        legendFontSize: this.legendFontSize\n      }, opt);\n    },\n    chartClick: function chartClick(params) {\n      this.$emit('click', params);\n    },\n    createTplCode: function createTplCode(zjNm) {\n      // console.log(JSON.stringify(this._props))\n      var propsKeys = _Object$keys(this._props).map(function (_) {\n        return \":\".concat(_, \"=\\\"chartParams.\").concat(_, \"\\\"\");\n      }); // console.log(`<${zjNm}  ${propsKeys.join(' ')}></${zjNm}>`)\n\n    }\n  }\n};",{"version":3,"sources":["D:\\工作项目\\部反诈\\src\\mixins\\globalChartMixin.js"],"names":["storage","chartColors","get","props","legendShow","type","Boolean","default","legendOrient","String","legendType","legendLeft","Number","legendTop","legendRight","legendBottom","legendTextColor","legend","text","legendPageTextColor","pageText","legendFontSize","data","chartName","options","created","mounted","setTimeout","refresh","watch","newVal","oldVal","methods","setOptions","refreshCallback","legendOpt","opt","left","top","right","bottom","orient","chartClick","params","$emit","createTplCode","zjNm","propsKeys","_props","map","_"],"mappings":"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","sourcesContent":["import storage from \"utils/storage\"\r\nconst chartColors = storage.get('tColors')\r\nexport default {\r\n  props: {\r\n    legendShow: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    legendOrient: {\r\n      type: String,\r\n      default: 'horizontal'\r\n    },\r\n    legendType: {\r\n      type: String,\r\n      default: 'scroll'\r\n    },\r\n    legendLeft: {\r\n      type: [String, Number],\r\n      default: () => ''\r\n    },\r\n    legendTop: {\r\n      type: [String, Number],\r\n      default: () => ''\r\n    },\r\n    legendRight: {\r\n      type: [String, Number],\r\n      default: () => ''\r\n    },\r\n    legendBottom: {\r\n      type: [String, Number],\r\n      default: () => ''\r\n    },\r\n    legendTextColor: {\r\n      type: String,\r\n      default: () => chartColors.legend.text\r\n    },\r\n    legendPageTextColor: {\r\n      type: String,\r\n      default: () => chartColors.legend.pageText\r\n    },\r\n    legendFontSize: {\r\n      type: Number,\r\n      default: 12\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chartName: '注意：没有给图表制定名称，请及时补充图表名称.........',\r\n      options: {}\r\n    }\r\n  },\r\n  created() {\r\n    // console.log(`准备构建图表组件${this.chartName}`)\r\n  },\r\n  mounted() {\r\n    setTimeout(this.refresh, 10)\r\n  },\r\n  watch: {\r\n    legendShow(newVal, oldVal) {\r\n      this.refresh()\r\n    },\r\n    legendOrient(newVal, oldVal) {\r\n      this.refresh()\r\n    },\r\n    legendType(newVal, oldVal) {\r\n      this.refresh()\r\n    },\r\n    legendLeft(newVal, oldVal) {\r\n      this.refresh()\r\n    },\r\n    legendTop(newVal, oldVal) {\r\n      this.refresh()\r\n    },\r\n    legendRight(newVal, oldVal) {\r\n      this.refresh()\r\n    },\r\n    legendBottom(newVal, oldVal) {\r\n      this.refresh()\r\n    },\r\n    legendTextColor(newVal, oldVal) {\r\n      this.refresh()\r\n    },\r\n    legendPageTextColor(newVal, oldVal) {\r\n      this.refresh()\r\n    },\r\n    legendFontSize(newVal, oldVal) {\r\n      this.refresh()\r\n    }\r\n  },\r\n  methods: {\r\n    refresh() {\r\n      this.options = this.setOptions()\r\n      if (this.refreshCallback) {\r\n        this.refreshCallback()\r\n      }\r\n    },\r\n    legendOpt(opt) {\r\n      let [left, top, right, bottom, type, orient] = [\r\n        this.legendLeft || 'auto',\r\n        this.legendTop || 'auto',\r\n        this.legendRight || 'auto',\r\n        this.legendBottom || 'auto',\r\n        this.legendType || 'plain',\r\n        this.legendOrient || 'horizontal'\r\n      ]\r\n      return {\r\n        type: type,\r\n        orient: orient,\r\n        left: left,\r\n        top: top,\r\n        right: right,\r\n        bottom: bottom,\r\n        legendFontSize: this.legendFontSize,\r\n        ...opt\r\n      }\r\n    },\r\n    chartClick(params) {\r\n      this.$emit('click', params)\r\n    },\r\n    createTplCode(zjNm) {\r\n      // console.log(JSON.stringify(this._props))\r\n      let propsKeys = Object.keys(this._props).map(\r\n        _ => `:${_}=\"chartParams.${_}\"`\r\n      )\r\n      // console.log(`<${zjNm}  ${propsKeys.join(' ')}></${zjNm}>`)\r\n    }\r\n  }\r\n}\r\n"]}]}